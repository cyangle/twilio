#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.38.0
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/twilio/api/sms_api"

# Unit tests for Twilio::SMSApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "SMSApi" do
  describe "test an instance of SMSApi" do
    it "should create an instance of SMSApi" do
      api_instance = Twilio::SMSApi.new
      api_instance.should be_a(Twilio::SMSApi)
    end
  end

  # unit tests for fetch_short_code
  # Fetch an instance of a short code
  # @param account_sid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to fetch.
  # @param sid The Twilio-provided string that uniquely identifies the ShortCode resource to fetch
  # @param [Hash] opts the optional parameters
  # @return [ShortCode]
  describe "fetch_short_code test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for list_short_code
  # Retrieve a list of short-codes belonging to the account used to make the request
  # @param account_sid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to read.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :friendly_name The string that identifies the ShortCode resources to read.
  # @option opts [String] :short_code Only show the ShortCode resources that match this pattern. You can specify partial numbers and use &#39;*&#39; as a wildcard for any digit.
  # @option opts [Int32] :page_size How many resources to return in each list page. The default is 50, and the maximum is 1000.
  # @return [ListShortCodeResponse]
  describe "list_short_code test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for update_short_code
  # Update a short code with the following parameters
  # @param account_sid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to update.
  # @param sid The Twilio-provided string that uniquely identifies the ShortCode resource to update
  # @param [Hash] opts the optional parameters
  # @option opts [String] :api_version The API version to use to start a new TwiML session. Can be: &#x60;2010-04-01&#x60; or &#x60;2008-08-01&#x60;.
  # @option opts [String] :friendly_name A descriptive string that you created to describe this resource. It can be up to 64 characters long. By default, the &#x60;FriendlyName&#x60; is the short code.
  # @option opts [HttpMethod] :sms_fallback_method
  # @option opts [String] :sms_fallback_url The URL that we should call if an error occurs while retrieving or executing the TwiML from &#x60;sms_url&#x60;.
  # @option opts [HttpMethod] :sms_method
  # @option opts [String] :sms_url The URL we should call when receiving an incoming SMS message to this short code.
  # @return [ShortCode]
  describe "update_short_code test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
