#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.38.0
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/twilio/api/applications_api"

# Unit tests for Twilio::ApplicationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "ApplicationsApi" do
  describe "test an instance of ApplicationsApi" do
    it "should create an instance of ApplicationsApi" do
      api_instance = Twilio::ApplicationsApi.new
      api_instance.should be_a(Twilio::ApplicationsApi)
    end
  end

  # unit tests for create_application
  # Create a new application within your account
  # @param account_sid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :api_version The API version to use to start a new TwiML session. Can be: &#x60;2010-04-01&#x60; or &#x60;2008-08-01&#x60;. The default value is the account&#39;s default API version.
  # @option opts [String] :friendly_name A descriptive string that you create to describe the new application. It can be up to 64 characters long.
  # @option opts [String] :message_status_callback The URL we should call using a POST method to send message status information to your application.
  # @option opts [HttpMethod] :sms_fallback_method
  # @option opts [String] :sms_fallback_url The URL that we should call when an error occurs while retrieving or executing the TwiML from &#x60;sms_url&#x60;.
  # @option opts [HttpMethod] :sms_method
  # @option opts [String] :sms_status_callback The URL we should call using a POST method to send status information about SMS messages sent by the application.
  # @option opts [String] :sms_url The URL we should call when the phone number receives an incoming SMS message.
  # @option opts [String] :status_callback The URL we should call using the &#x60;status_callback_method&#x60; to send status information to your application.
  # @option opts [HttpMethod] :status_callback_method
  # @option opts [Bool] :voice_caller_id_lookup Whether we should look up the caller&#39;s caller-ID name from the CNAM database (additional charges apply). Can be: &#x60;true&#x60; or &#x60;false&#x60;.
  # @option opts [HttpMethod] :voice_fallback_method
  # @option opts [String] :voice_fallback_url The URL that we should call when an error occurs retrieving or executing the TwiML requested by &#x60;url&#x60;.
  # @option opts [HttpMethod] :voice_method
  # @option opts [String] :voice_url The URL we should call when the phone number assigned to this application receives a call.
  # @return [Application]
  describe "create_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_application
  # Delete the application by the specified application sid
  # @param account_sid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to delete.
  # @param sid The Twilio-provided string that uniquely identifies the Application resource to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe "delete_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for fetch_application
  # Fetch the application specified by the provided sid
  # @param account_sid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resource to fetch.
  # @param sid The Twilio-provided string that uniquely identifies the Application resource to fetch.
  # @param [Hash] opts the optional parameters
  # @return [Application]
  describe "fetch_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for list_application
  # Retrieve a list of applications representing an application within the requesting account
  # @param account_sid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to read.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :friendly_name The string that identifies the Application resources to read.
  # @option opts [Int32] :page_size How many resources to return in each list page. The default is 50, and the maximum is 1000.
  # @return [ListApplicationResponse]
  describe "list_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for update_application
  # Updates the application&#39;s properties
  # @param account_sid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to update.
  # @param sid The Twilio-provided string that uniquely identifies the Application resource to update.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :api_version The API version to use to start a new TwiML session. Can be: &#x60;2010-04-01&#x60; or &#x60;2008-08-01&#x60;. The default value is your account&#39;s default API version.
  # @option opts [String] :friendly_name A descriptive string that you create to describe the resource. It can be up to 64 characters long.
  # @option opts [String] :message_status_callback The URL we should call using a POST method to send message status information to your application.
  # @option opts [HttpMethod] :sms_fallback_method
  # @option opts [String] :sms_fallback_url The URL that we should call when an error occurs while retrieving or executing the TwiML from &#x60;sms_url&#x60;.
  # @option opts [HttpMethod] :sms_method
  # @option opts [String] :sms_status_callback Same as message_status_callback: The URL we should call using a POST method to send status information about SMS messages sent by the application. Deprecated, included for backwards compatibility.
  # @option opts [String] :sms_url The URL we should call when the phone number receives an incoming SMS message.
  # @option opts [String] :status_callback The URL we should call using the &#x60;status_callback_method&#x60; to send status information to your application.
  # @option opts [HttpMethod] :status_callback_method
  # @option opts [Bool] :voice_caller_id_lookup Whether we should look up the caller&#39;s caller-ID name from the CNAM database (additional charges apply). Can be: &#x60;true&#x60; or &#x60;false&#x60;.
  # @option opts [HttpMethod] :voice_fallback_method
  # @option opts [String] :voice_fallback_url The URL that we should call when an error occurs retrieving or executing the TwiML requested by &#x60;url&#x60;.
  # @option opts [HttpMethod] :voice_method
  # @option opts [String] :voice_url The URL we should call when the phone number assigned to this application receives a call.
  # @return [Application]
  describe "update_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
