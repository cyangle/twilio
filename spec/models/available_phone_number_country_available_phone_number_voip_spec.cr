#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.38.0
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip do
  describe "test an instance of AvailablePhoneNumberCountryAvailablePhoneNumberVoip" do
    it "should create an instance of AvailablePhoneNumberCountryAvailablePhoneNumberVoip" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # (instance).should be_a(Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip)
    end
  end

  describe "test attribute 'address_requirements'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'beta'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'capabilities'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'friendly_name'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'iso_country'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'lata'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'latitude'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'locality'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'longitude'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'phone_number'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'postal_code'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'rate_center'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'region'" do
    it "should work" do
      # instance = Twilio::AvailablePhoneNumberCountryAvailablePhoneNumberVoip.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
