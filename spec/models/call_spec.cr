#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.29.1
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Twilio::Call
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Twilio::Call do
  describe "test an instance of Call" do
    it "should create an instance of Call" do
      # instance = Twilio::Call.new
      # expect(instance).to be_instance_of(Twilio::Call)
    end
  end

  describe "test attribute 'account_sid'" do
    context "length is 33" do
      it "raises error" do
        expect_raises(ArgumentError, /the character length must be great than or equal to 34/) do
          call = Twilio::Call.new
          call.account_sid = "123456789012345678901234567890123"
        end
      end
    end

    context "length is 34" do
      context "invalid pattern" do
        it "raises error" do
          expect_raises(ArgumentError, /must conform to the pattern/) do
            call = Twilio::Call.new
            call.account_sid = "1234567890123456789012345678901234"
          end
        end
      end

      context "valid pattern" do
        it "sets the value" do
          value = "AC12345678901234567890123456789012"
          call = Twilio::Call.new
          (call.account_sid).should be_nil
          call.account_sid = value
          (call.account_sid).should eq(value)
        end
      end
    end

    context "length is 35" do
      it "raises error" do
        expect_raises(ArgumentError, /the character length must be smaller than or equal to 34/) do
          call = Twilio::Call.new
          call.account_sid = "12345678901234567890123456789012345"
        end
      end
    end
  end

  describe "test attribute 'answered_by'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'api_version'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'caller_name'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'date_created'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'date_updated'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'direction'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'duration'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'end_time'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'forwarded_from'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'from'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'from_formatted'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'group_sid'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'parent_call_sid'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'phone_number_sid'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'price'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'price_unit'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'queue_time'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'sid'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'start_time'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'status'" do
    context "valid values" do
      it "should work" do
        call = Twilio::Call.new
        (call.status).should be_nil
        Twilio::Call::ENUM_VALIDATOR_FOR_STATUS.allowable_values.each do |val|
          value = val.to_s
          (call.status).should_not eq(value)
          call.status = value
          (call.status).should eq(value)
        end
      end
    end

    context "invalid value" do
      it "raises error" do
        expect_raises(ArgumentError, /must be one of/) do
          call = Twilio::Call.new
          (call.status).should be_nil
          value = "invalid"
          call.status = value
        end
      end
    end
  end

  describe "test attribute 'subresource_uris'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'to'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'to_formatted'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'trunk_sid'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'uri'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "#hash" do
    it "calculates the hash" do
      call = Twilio::Call.from_json(File.read("spec/fixtures/calls/valid_call.json"))
      call2 = Twilio::Call.from_json(File.read("spec/fixtures/calls/valid_call.json"))
      (call.hash).should eq(call2.hash)
    end
  end

  describe "#==" do
    it "equals" do
      call = Twilio::Call.from_json(File.read("spec/fixtures/calls/valid_call.json"))
      call2 = Twilio::Call.from_json(File.read("spec/fixtures/calls/valid_call.json"))
      (call == call2).should be_true
    end
  end
end
