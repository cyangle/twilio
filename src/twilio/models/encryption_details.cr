#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.38.0
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Twilio
  class EncryptionDetails
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "type", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: _type.nil? && !_type_present?)]
    getter _type : String? = nil

    @[JSON::Field(ignore: true)]
    property? _type_present : Bool = false

    @[JSON::Field(key: "public_key_sid", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: public_key_sid.nil? && !public_key_sid_present?)]
    getter public_key_sid : String? = nil

    @[JSON::Field(ignore: true)]
    property? public_key_sid_present : Bool = false

    @[JSON::Field(key: "encrypted_cek", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: encrypted_cek.nil? && !encrypted_cek_present?)]
    getter encrypted_cek : String? = nil

    @[JSON::Field(ignore: true)]
    property? encrypted_cek_present : Bool = false

    @[JSON::Field(key: "iv", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: iv.nil? && !iv_present?)]
    getter iv : String? = nil

    @[JSON::Field(ignore: true)]
    property? iv_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @_type : String? = nil,
      @public_key_sid : String? = nil,
      @encrypted_cek : String? = nil,
      @iv : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] _type Object to be assigned
    def _type=(new_value : String?)
      @_type = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] public_key_sid Object to be assigned
    def public_key_sid=(new_value : String?)
      @public_key_sid = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] encrypted_cek Object to be assigned
    def encrypted_cek=(new_value : String?)
      @encrypted_cek = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] iv Object to be assigned
    def iv=(new_value : String?)
      @iv = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@_type, @_type_present, @public_key_sid, @public_key_sid_present, @encrypted_cek, @encrypted_cek_present, @iv, @iv_present)
  end
end
