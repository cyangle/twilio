#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.38.0
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Twilio
  # Call Response with Events.
  class CallCallEventResponse
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "response_code", type: Int32?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: response_code.nil? && !response_code_present?)]
    getter response_code : Int32? = nil

    @[JSON::Field(ignore: true)]
    property? response_code_present : Bool = false

    @[JSON::Field(key: "request_duration", type: Int32?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: request_duration.nil? && !request_duration_present?)]
    getter request_duration : Int32? = nil

    @[JSON::Field(ignore: true)]
    property? request_duration_present : Bool = false

    @[JSON::Field(key: "content_type", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: content_type.nil? && !content_type_present?)]
    getter content_type : String? = nil

    @[JSON::Field(ignore: true)]
    property? content_type_present : Bool = false

    @[JSON::Field(key: "date_created", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: date_created.nil? && !date_created_present?)]
    getter date_created : String? = nil

    @[JSON::Field(ignore: true)]
    property? date_created_present : Bool = false

    @[JSON::Field(key: "response_body", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter response_body : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @response_code : Int32? = nil,
      @request_duration : Int32? = nil,
      @content_type : String? = nil,
      @date_created : String? = nil,
      @response_body : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_response_code = @response_code).nil?
      end
      unless (_request_duration = @request_duration).nil?
      end
      unless (_content_type = @content_type).nil?
      end
      unless (_date_created = @date_created).nil?
      end
      unless (_response_body = @response_body).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_response_code = @response_code).nil?
      end

      unless (_request_duration = @request_duration).nil?
      end

      unless (_content_type = @content_type).nil?
      end

      unless (_date_created = @date_created).nil?
      end

      unless (_response_body = @response_body).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] response_code Object to be assigned
    def response_code=(response_code : Int32?)
      if response_code.nil?
        return @response_code = nil
      end
      _response_code = response_code.not_nil!
      @response_code = _response_code
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] request_duration Object to be assigned
    def request_duration=(request_duration : Int32?)
      if request_duration.nil?
        return @request_duration = nil
      end
      _request_duration = request_duration.not_nil!
      @request_duration = _request_duration
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] content_type Object to be assigned
    def content_type=(content_type : String?)
      if content_type.nil?
        return @content_type = nil
      end
      _content_type = content_type.not_nil!
      @content_type = _content_type
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] date_created Object to be assigned
    def date_created=(date_created : String?)
      if date_created.nil?
        return @date_created = nil
      end
      _date_created = date_created.not_nil!
      @date_created = _date_created
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] response_body Object to be assigned
    def response_body=(response_body : String?)
      if response_body.nil?
        return @response_body = nil
      end
      _response_body = response_body.not_nil!
      @response_body = _response_body
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@response_code, @response_code_present, @request_duration, @request_duration_present, @content_type, @content_type_present, @date_created, @date_created_present, @response_body)
  end
end
