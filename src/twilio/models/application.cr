#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.38.0
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Twilio
  class Application
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The SID of the Account that created the resource
    @[JSON::Field(key: "account_sid", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: account_sid.nil? && !account_sid_present?)]
    getter account_sid : String? = nil
    MAX_LENGTH_FOR_ACCOUNT_SID = 34
    MIN_LENGTH_FOR_ACCOUNT_SID = 34
    PATTERN_FOR_ACCOUNT_SID    = /^AC[0-9a-fA-F]{32}$/

    @[JSON::Field(ignore: true)]
    property? account_sid_present : Bool = false

    # The API version used to start a new TwiML session
    @[JSON::Field(key: "api_version", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: api_version.nil? && !api_version_present?)]
    getter api_version : String? = nil

    @[JSON::Field(ignore: true)]
    property? api_version_present : Bool = false

    # The RFC 2822 date and time in GMT that the resource was created
    @[JSON::Field(key: "date_created", type: Time?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: date_created.nil? && !date_created_present?, converter: Time::RFC2822Converter)]
    getter date_created : Time? = nil

    @[JSON::Field(ignore: true)]
    property? date_created_present : Bool = false

    # The RFC 2822 date and time in GMT that the resource was last updated
    @[JSON::Field(key: "date_updated", type: Time?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: date_updated.nil? && !date_updated_present?, converter: Time::RFC2822Converter)]
    getter date_updated : Time? = nil

    @[JSON::Field(ignore: true)]
    property? date_updated_present : Bool = false

    # The string that you assigned to describe the resource
    @[JSON::Field(key: "friendly_name", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: friendly_name.nil? && !friendly_name_present?)]
    getter friendly_name : String? = nil

    @[JSON::Field(ignore: true)]
    property? friendly_name_present : Bool = false

    # The URL to send message status information to your application
    @[JSON::Field(key: "message_status_callback", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: message_status_callback.nil? && !message_status_callback_present?)]
    getter message_status_callback : String? = nil

    @[JSON::Field(ignore: true)]
    property? message_status_callback_present : Bool = false

    # The unique string that identifies the resource
    @[JSON::Field(key: "sid", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: sid.nil? && !sid_present?)]
    getter sid : String? = nil
    MAX_LENGTH_FOR_SID = 34
    MIN_LENGTH_FOR_SID = 34
    PATTERN_FOR_SID    = /^AP[0-9a-fA-F]{32}$/

    @[JSON::Field(ignore: true)]
    property? sid_present : Bool = false

    # The HTTP method used with sms_fallback_url
    @[JSON::Field(key: "sms_fallback_method", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: sms_fallback_method.nil? && !sms_fallback_method_present?)]
    getter sms_fallback_method : String? = nil
    ERROR_MESSAGE_FOR_SMS_FALLBACK_METHOD = "invalid value for \"sms_fallback_method\", must be one of [HEAD, GET, POST, PATCH, PUT, DELETE]."
    VALID_VALUES_FOR_SMS_FALLBACK_METHOD  = String.static_array("HEAD", "GET", "POST", "PATCH", "PUT", "DELETE")

    @[JSON::Field(ignore: true)]
    property? sms_fallback_method_present : Bool = false

    # The URL that we call when an error occurs while retrieving or executing the TwiML
    @[JSON::Field(key: "sms_fallback_url", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: sms_fallback_url.nil? && !sms_fallback_url_present?)]
    getter sms_fallback_url : String? = nil

    @[JSON::Field(ignore: true)]
    property? sms_fallback_url_present : Bool = false

    # The HTTP method to use with sms_url
    @[JSON::Field(key: "sms_method", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: sms_method.nil? && !sms_method_present?)]
    getter sms_method : String? = nil
    ERROR_MESSAGE_FOR_SMS_METHOD = "invalid value for \"sms_method\", must be one of [HEAD, GET, POST, PATCH, PUT, DELETE]."
    VALID_VALUES_FOR_SMS_METHOD  = String.static_array("HEAD", "GET", "POST", "PATCH", "PUT", "DELETE")

    @[JSON::Field(ignore: true)]
    property? sms_method_present : Bool = false

    # The URL to send status information to your application
    @[JSON::Field(key: "sms_status_callback", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: sms_status_callback.nil? && !sms_status_callback_present?)]
    getter sms_status_callback : String? = nil

    @[JSON::Field(ignore: true)]
    property? sms_status_callback_present : Bool = false

    # The URL we call when the phone number receives an incoming SMS message
    @[JSON::Field(key: "sms_url", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: sms_url.nil? && !sms_url_present?)]
    getter sms_url : String? = nil

    @[JSON::Field(ignore: true)]
    property? sms_url_present : Bool = false

    # The URL to send status information to your application
    @[JSON::Field(key: "status_callback", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: status_callback.nil? && !status_callback_present?)]
    getter status_callback : String? = nil

    @[JSON::Field(ignore: true)]
    property? status_callback_present : Bool = false

    # The HTTP method we use to call status_callback
    @[JSON::Field(key: "status_callback_method", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: status_callback_method.nil? && !status_callback_method_present?)]
    getter status_callback_method : String? = nil
    ERROR_MESSAGE_FOR_STATUS_CALLBACK_METHOD = "invalid value for \"status_callback_method\", must be one of [HEAD, GET, POST, PATCH, PUT, DELETE]."
    VALID_VALUES_FOR_STATUS_CALLBACK_METHOD  = String.static_array("HEAD", "GET", "POST", "PATCH", "PUT", "DELETE")

    @[JSON::Field(ignore: true)]
    property? status_callback_method_present : Bool = false

    # The URI of the resource, relative to `https://api.twilio.com`
    @[JSON::Field(key: "uri", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: uri.nil? && !uri_present?)]
    getter uri : String? = nil

    @[JSON::Field(ignore: true)]
    property? uri_present : Bool = false

    # Whether to lookup the caller's name
    @[JSON::Field(key: "voice_caller_id_lookup", type: Bool?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: voice_caller_id_lookup.nil? && !voice_caller_id_lookup_present?)]
    getter voice_caller_id_lookup : Bool? = nil

    @[JSON::Field(ignore: true)]
    property? voice_caller_id_lookup_present : Bool = false

    # The HTTP method used with voice_fallback_url
    @[JSON::Field(key: "voice_fallback_method", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: voice_fallback_method.nil? && !voice_fallback_method_present?)]
    getter voice_fallback_method : String? = nil
    ERROR_MESSAGE_FOR_VOICE_FALLBACK_METHOD = "invalid value for \"voice_fallback_method\", must be one of [HEAD, GET, POST, PATCH, PUT, DELETE]."
    VALID_VALUES_FOR_VOICE_FALLBACK_METHOD  = String.static_array("HEAD", "GET", "POST", "PATCH", "PUT", "DELETE")

    @[JSON::Field(ignore: true)]
    property? voice_fallback_method_present : Bool = false

    # The URL we call when a TwiML error occurs
    @[JSON::Field(key: "voice_fallback_url", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: voice_fallback_url.nil? && !voice_fallback_url_present?)]
    getter voice_fallback_url : String? = nil

    @[JSON::Field(ignore: true)]
    property? voice_fallback_url_present : Bool = false

    # The HTTP method used with the voice_url
    @[JSON::Field(key: "voice_method", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: voice_method.nil? && !voice_method_present?)]
    getter voice_method : String? = nil
    ERROR_MESSAGE_FOR_VOICE_METHOD = "invalid value for \"voice_method\", must be one of [HEAD, GET, POST, PATCH, PUT, DELETE]."
    VALID_VALUES_FOR_VOICE_METHOD  = String.static_array("HEAD", "GET", "POST", "PATCH", "PUT", "DELETE")

    @[JSON::Field(ignore: true)]
    property? voice_method_present : Bool = false

    # The URL we call when the phone number receives a call
    @[JSON::Field(key: "voice_url", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: voice_url.nil? && !voice_url_present?)]
    getter voice_url : String? = nil

    @[JSON::Field(ignore: true)]
    property? voice_url_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @account_sid : String? = nil,
      @api_version : String? = nil,
      @date_created : Time? = nil,
      @date_updated : Time? = nil,
      @friendly_name : String? = nil,
      @message_status_callback : String? = nil,
      @sid : String? = nil,
      @sms_fallback_method : String? = nil,
      @sms_fallback_url : String? = nil,
      @sms_method : String? = nil,
      @sms_status_callback : String? = nil,
      @sms_url : String? = nil,
      @status_callback : String? = nil,
      @status_callback_method : String? = nil,
      @uri : String? = nil,
      @voice_caller_id_lookup : Bool? = nil,
      @voice_fallback_method : String? = nil,
      @voice_fallback_url : String? = nil,
      @voice_method : String? = nil,
      @voice_url : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_account_sid = @account_sid).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("account_sid", _account_sid.to_s.size, MAX_LENGTH_FOR_ACCOUNT_SID)
          invalid_properties.push(max_length_error)
        end

        if min_length_error = OpenApi::PrimitiveValidator.min_length_error("account_sid", _account_sid.to_s.size, MIN_LENGTH_FOR_ACCOUNT_SID)
          invalid_properties.push(min_length_error)
        end

        if pattern_error = OpenApi::PrimitiveValidator.pattern_error("account_sid", _account_sid, PATTERN_FOR_ACCOUNT_SID)
          invalid_properties.push(pattern_error)
        end
      end
      unless (_api_version = @api_version).nil?
      end
      unless (_date_created = @date_created).nil?
      end
      unless (_date_updated = @date_updated).nil?
      end
      unless (_friendly_name = @friendly_name).nil?
      end
      unless (_message_status_callback = @message_status_callback).nil?
      end
      unless (_sid = @sid).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("sid", _sid.to_s.size, MAX_LENGTH_FOR_SID)
          invalid_properties.push(max_length_error)
        end

        if min_length_error = OpenApi::PrimitiveValidator.min_length_error("sid", _sid.to_s.size, MIN_LENGTH_FOR_SID)
          invalid_properties.push(min_length_error)
        end

        if pattern_error = OpenApi::PrimitiveValidator.pattern_error("sid", _sid, PATTERN_FOR_SID)
          invalid_properties.push(pattern_error)
        end
      end
      unless (_sms_fallback_method = @sms_fallback_method).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_SMS_FALLBACK_METHOD) unless OpenApi::EnumValidator.valid?(_sms_fallback_method, VALID_VALUES_FOR_SMS_FALLBACK_METHOD)
      end
      unless (_sms_fallback_url = @sms_fallback_url).nil?
      end
      unless (_sms_method = @sms_method).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_SMS_METHOD) unless OpenApi::EnumValidator.valid?(_sms_method, VALID_VALUES_FOR_SMS_METHOD)
      end
      unless (_sms_status_callback = @sms_status_callback).nil?
      end
      unless (_sms_url = @sms_url).nil?
      end
      unless (_status_callback = @status_callback).nil?
      end
      unless (_status_callback_method = @status_callback_method).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_STATUS_CALLBACK_METHOD) unless OpenApi::EnumValidator.valid?(_status_callback_method, VALID_VALUES_FOR_STATUS_CALLBACK_METHOD)
      end
      unless (_uri = @uri).nil?
      end
      unless (_voice_caller_id_lookup = @voice_caller_id_lookup).nil?
      end
      unless (_voice_fallback_method = @voice_fallback_method).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_VOICE_FALLBACK_METHOD) unless OpenApi::EnumValidator.valid?(_voice_fallback_method, VALID_VALUES_FOR_VOICE_FALLBACK_METHOD)
      end
      unless (_voice_fallback_url = @voice_fallback_url).nil?
      end
      unless (_voice_method = @voice_method).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_VOICE_METHOD) unless OpenApi::EnumValidator.valid?(_voice_method, VALID_VALUES_FOR_VOICE_METHOD)
      end
      unless (_voice_url = @voice_url).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_account_sid = @account_sid).nil?
        return false if _account_sid.to_s.size > MAX_LENGTH_FOR_ACCOUNT_SID
        return false if _account_sid.to_s.size < MIN_LENGTH_FOR_ACCOUNT_SID
        return false if !PATTERN_FOR_ACCOUNT_SID.matches?(_account_sid)
      end

      unless (_api_version = @api_version).nil?
      end

      unless (_date_created = @date_created).nil?
      end

      unless (_date_updated = @date_updated).nil?
      end

      unless (_friendly_name = @friendly_name).nil?
      end

      unless (_message_status_callback = @message_status_callback).nil?
      end

      unless (_sid = @sid).nil?
        return false if _sid.to_s.size > MAX_LENGTH_FOR_SID
        return false if _sid.to_s.size < MIN_LENGTH_FOR_SID
        return false if !PATTERN_FOR_SID.matches?(_sid)
      end

      unless (_sms_fallback_method = @sms_fallback_method).nil?
        return false unless OpenApi::EnumValidator.valid?(_sms_fallback_method, VALID_VALUES_FOR_SMS_FALLBACK_METHOD)
      end

      unless (_sms_fallback_url = @sms_fallback_url).nil?
      end

      unless (_sms_method = @sms_method).nil?
        return false unless OpenApi::EnumValidator.valid?(_sms_method, VALID_VALUES_FOR_SMS_METHOD)
      end

      unless (_sms_status_callback = @sms_status_callback).nil?
      end

      unless (_sms_url = @sms_url).nil?
      end

      unless (_status_callback = @status_callback).nil?
      end

      unless (_status_callback_method = @status_callback_method).nil?
        return false unless OpenApi::EnumValidator.valid?(_status_callback_method, VALID_VALUES_FOR_STATUS_CALLBACK_METHOD)
      end

      unless (_uri = @uri).nil?
      end

      unless (_voice_caller_id_lookup = @voice_caller_id_lookup).nil?
      end

      unless (_voice_fallback_method = @voice_fallback_method).nil?
        return false unless OpenApi::EnumValidator.valid?(_voice_fallback_method, VALID_VALUES_FOR_VOICE_FALLBACK_METHOD)
      end

      unless (_voice_fallback_url = @voice_fallback_url).nil?
      end

      unless (_voice_method = @voice_method).nil?
        return false unless OpenApi::EnumValidator.valid?(_voice_method, VALID_VALUES_FOR_VOICE_METHOD)
      end

      unless (_voice_url = @voice_url).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] account_sid Object to be assigned
    def account_sid=(account_sid : String?)
      if account_sid.nil?
        return @account_sid = nil
      end
      _account_sid = account_sid.not_nil!
      OpenApi::PrimitiveValidator.validate_max_length("account_sid", _account_sid.to_s.size, MAX_LENGTH_FOR_ACCOUNT_SID)
      OpenApi::PrimitiveValidator.validate_min_length("account_sid", _account_sid.to_s.size, MIN_LENGTH_FOR_ACCOUNT_SID)
      OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, PATTERN_FOR_ACCOUNT_SID)
      @account_sid = _account_sid
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] api_version Object to be assigned
    def api_version=(api_version : String?)
      if api_version.nil?
        return @api_version = nil
      end
      _api_version = api_version.not_nil!
      @api_version = _api_version
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] date_created Object to be assigned
    def date_created=(date_created : Time?)
      if date_created.nil?
        return @date_created = nil
      end
      _date_created = date_created.not_nil!
      @date_created = _date_created
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] date_updated Object to be assigned
    def date_updated=(date_updated : Time?)
      if date_updated.nil?
        return @date_updated = nil
      end
      _date_updated = date_updated.not_nil!
      @date_updated = _date_updated
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] friendly_name Object to be assigned
    def friendly_name=(friendly_name : String?)
      if friendly_name.nil?
        return @friendly_name = nil
      end
      _friendly_name = friendly_name.not_nil!
      @friendly_name = _friendly_name
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] message_status_callback Object to be assigned
    def message_status_callback=(message_status_callback : String?)
      if message_status_callback.nil?
        return @message_status_callback = nil
      end
      _message_status_callback = message_status_callback.not_nil!
      @message_status_callback = _message_status_callback
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sid Object to be assigned
    def sid=(sid : String?)
      if sid.nil?
        return @sid = nil
      end
      _sid = sid.not_nil!
      OpenApi::PrimitiveValidator.validate_max_length("sid", _sid.to_s.size, MAX_LENGTH_FOR_SID)
      OpenApi::PrimitiveValidator.validate_min_length("sid", _sid.to_s.size, MIN_LENGTH_FOR_SID)
      OpenApi::PrimitiveValidator.validate_pattern("sid", _sid, PATTERN_FOR_SID)
      @sid = _sid
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sms_fallback_method Object to be assigned
    def sms_fallback_method=(sms_fallback_method : String?)
      if sms_fallback_method.nil?
        return @sms_fallback_method = nil
      end
      _sms_fallback_method = sms_fallback_method.not_nil!
      OpenApi::EnumValidator.validate("sms_fallback_method", _sms_fallback_method, VALID_VALUES_FOR_SMS_FALLBACK_METHOD)
      @sms_fallback_method = _sms_fallback_method
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sms_fallback_url Object to be assigned
    def sms_fallback_url=(sms_fallback_url : String?)
      if sms_fallback_url.nil?
        return @sms_fallback_url = nil
      end
      _sms_fallback_url = sms_fallback_url.not_nil!
      @sms_fallback_url = _sms_fallback_url
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sms_method Object to be assigned
    def sms_method=(sms_method : String?)
      if sms_method.nil?
        return @sms_method = nil
      end
      _sms_method = sms_method.not_nil!
      OpenApi::EnumValidator.validate("sms_method", _sms_method, VALID_VALUES_FOR_SMS_METHOD)
      @sms_method = _sms_method
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sms_status_callback Object to be assigned
    def sms_status_callback=(sms_status_callback : String?)
      if sms_status_callback.nil?
        return @sms_status_callback = nil
      end
      _sms_status_callback = sms_status_callback.not_nil!
      @sms_status_callback = _sms_status_callback
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sms_url Object to be assigned
    def sms_url=(sms_url : String?)
      if sms_url.nil?
        return @sms_url = nil
      end
      _sms_url = sms_url.not_nil!
      @sms_url = _sms_url
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] status_callback Object to be assigned
    def status_callback=(status_callback : String?)
      if status_callback.nil?
        return @status_callback = nil
      end
      _status_callback = status_callback.not_nil!
      @status_callback = _status_callback
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] status_callback_method Object to be assigned
    def status_callback_method=(status_callback_method : String?)
      if status_callback_method.nil?
        return @status_callback_method = nil
      end
      _status_callback_method = status_callback_method.not_nil!
      OpenApi::EnumValidator.validate("status_callback_method", _status_callback_method, VALID_VALUES_FOR_STATUS_CALLBACK_METHOD)
      @status_callback_method = _status_callback_method
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] uri Object to be assigned
    def uri=(uri : String?)
      if uri.nil?
        return @uri = nil
      end
      _uri = uri.not_nil!
      @uri = _uri
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] voice_caller_id_lookup Object to be assigned
    def voice_caller_id_lookup=(voice_caller_id_lookup : Bool?)
      if voice_caller_id_lookup.nil?
        return @voice_caller_id_lookup = nil
      end
      _voice_caller_id_lookup = voice_caller_id_lookup.not_nil!
      @voice_caller_id_lookup = _voice_caller_id_lookup
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] voice_fallback_method Object to be assigned
    def voice_fallback_method=(voice_fallback_method : String?)
      if voice_fallback_method.nil?
        return @voice_fallback_method = nil
      end
      _voice_fallback_method = voice_fallback_method.not_nil!
      OpenApi::EnumValidator.validate("voice_fallback_method", _voice_fallback_method, VALID_VALUES_FOR_VOICE_FALLBACK_METHOD)
      @voice_fallback_method = _voice_fallback_method
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] voice_fallback_url Object to be assigned
    def voice_fallback_url=(voice_fallback_url : String?)
      if voice_fallback_url.nil?
        return @voice_fallback_url = nil
      end
      _voice_fallback_url = voice_fallback_url.not_nil!
      @voice_fallback_url = _voice_fallback_url
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] voice_method Object to be assigned
    def voice_method=(voice_method : String?)
      if voice_method.nil?
        return @voice_method = nil
      end
      _voice_method = voice_method.not_nil!
      OpenApi::EnumValidator.validate("voice_method", _voice_method, VALID_VALUES_FOR_VOICE_METHOD)
      @voice_method = _voice_method
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] voice_url Object to be assigned
    def voice_url=(voice_url : String?)
      if voice_url.nil?
        return @voice_url = nil
      end
      _voice_url = voice_url.not_nil!
      @voice_url = _voice_url
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@account_sid, @account_sid_present, @api_version, @api_version_present, @date_created, @date_created_present, @date_updated, @date_updated_present, @friendly_name, @friendly_name_present, @message_status_callback, @message_status_callback_present, @sid, @sid_present, @sms_fallback_method, @sms_fallback_method_present, @sms_fallback_url, @sms_fallback_url_present, @sms_method, @sms_method_present, @sms_status_callback, @sms_status_callback_present, @sms_url, @sms_url_present, @status_callback, @status_callback_present, @status_callback_method, @status_callback_method_present, @uri, @uri_present, @voice_caller_id_lookup, @voice_caller_id_lookup_present, @voice_fallback_method, @voice_fallback_method_present, @voice_fallback_url, @voice_fallback_url_present, @voice_method, @voice_method_present, @voice_url, @voice_url_present)
  end
end
