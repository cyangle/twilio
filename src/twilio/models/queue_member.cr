#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.38.0
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Twilio
  class QueueMember
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The SID of the Call the resource is associated with
    @[JSON::Field(key: "call_sid", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: call_sid.nil? && !call_sid_present?)]
    getter call_sid : String? = nil
    MAX_LENGTH_FOR_CALL_SID = 34
    MIN_LENGTH_FOR_CALL_SID = 34
    PATTERN_FOR_CALL_SID    = /^CA[0-9a-fA-F]{32}$/

    @[JSON::Field(ignore: true)]
    property? call_sid_present : Bool = false

    # The date the member was enqueued
    @[JSON::Field(key: "date_enqueued", type: Time?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: date_enqueued.nil? && !date_enqueued_present?, converter: Time::RFC2822Converter)]
    getter date_enqueued : Time? = nil

    @[JSON::Field(ignore: true)]
    property? date_enqueued_present : Bool = false

    # This member's current position in the queue.
    @[JSON::Field(key: "position", type: Int32?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: position.nil? && !position_present?)]
    getter position : Int32? = nil

    @[JSON::Field(ignore: true)]
    property? position_present : Bool = false

    # The SID of the Queue the member is in
    @[JSON::Field(key: "queue_sid", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: queue_sid.nil? && !queue_sid_present?)]
    getter queue_sid : String? = nil
    MAX_LENGTH_FOR_QUEUE_SID = 34
    MIN_LENGTH_FOR_QUEUE_SID = 34
    PATTERN_FOR_QUEUE_SID    = /^QU[0-9a-fA-F]{32}$/

    @[JSON::Field(ignore: true)]
    property? queue_sid_present : Bool = false

    # The URI of the resource, relative to `https://api.twilio.com`
    @[JSON::Field(key: "uri", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: uri.nil? && !uri_present?)]
    getter uri : String? = nil

    @[JSON::Field(ignore: true)]
    property? uri_present : Bool = false

    # The number of seconds the member has been in the queue.
    @[JSON::Field(key: "wait_time", type: Int32?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: wait_time.nil? && !wait_time_present?)]
    getter wait_time : Int32? = nil

    @[JSON::Field(ignore: true)]
    property? wait_time_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @call_sid : String? = nil,
      @date_enqueued : Time? = nil,
      @position : Int32? = nil,
      @queue_sid : String? = nil,
      @uri : String? = nil,
      @wait_time : Int32? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_call_sid = @call_sid).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("call_sid", _call_sid.to_s.size, MAX_LENGTH_FOR_CALL_SID)
          invalid_properties.push(max_length_error)
        end

        if min_length_error = OpenApi::PrimitiveValidator.min_length_error("call_sid", _call_sid.to_s.size, MIN_LENGTH_FOR_CALL_SID)
          invalid_properties.push(min_length_error)
        end

        if pattern_error = OpenApi::PrimitiveValidator.pattern_error("call_sid", _call_sid, PATTERN_FOR_CALL_SID)
          invalid_properties.push(pattern_error)
        end
      end
      unless (_date_enqueued = @date_enqueued).nil?
      end
      unless (_position = @position).nil?
      end
      unless (_queue_sid = @queue_sid).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("queue_sid", _queue_sid.to_s.size, MAX_LENGTH_FOR_QUEUE_SID)
          invalid_properties.push(max_length_error)
        end

        if min_length_error = OpenApi::PrimitiveValidator.min_length_error("queue_sid", _queue_sid.to_s.size, MIN_LENGTH_FOR_QUEUE_SID)
          invalid_properties.push(min_length_error)
        end

        if pattern_error = OpenApi::PrimitiveValidator.pattern_error("queue_sid", _queue_sid, PATTERN_FOR_QUEUE_SID)
          invalid_properties.push(pattern_error)
        end
      end
      unless (_uri = @uri).nil?
      end
      unless (_wait_time = @wait_time).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_call_sid = @call_sid).nil?
        return false if _call_sid.to_s.size > MAX_LENGTH_FOR_CALL_SID
        return false if _call_sid.to_s.size < MIN_LENGTH_FOR_CALL_SID
        return false if !PATTERN_FOR_CALL_SID.matches?(_call_sid)
      end

      unless (_date_enqueued = @date_enqueued).nil?
      end

      unless (_position = @position).nil?
      end

      unless (_queue_sid = @queue_sid).nil?
        return false if _queue_sid.to_s.size > MAX_LENGTH_FOR_QUEUE_SID
        return false if _queue_sid.to_s.size < MIN_LENGTH_FOR_QUEUE_SID
        return false if !PATTERN_FOR_QUEUE_SID.matches?(_queue_sid)
      end

      unless (_uri = @uri).nil?
      end

      unless (_wait_time = @wait_time).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] call_sid Object to be assigned
    def call_sid=(call_sid : String?)
      if call_sid.nil?
        return @call_sid = nil
      end
      _call_sid = call_sid.not_nil!
      OpenApi::PrimitiveValidator.validate_max_length("call_sid", _call_sid.to_s.size, MAX_LENGTH_FOR_CALL_SID)
      OpenApi::PrimitiveValidator.validate_min_length("call_sid", _call_sid.to_s.size, MIN_LENGTH_FOR_CALL_SID)
      OpenApi::PrimitiveValidator.validate_pattern("call_sid", _call_sid, PATTERN_FOR_CALL_SID)
      @call_sid = _call_sid
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] date_enqueued Object to be assigned
    def date_enqueued=(date_enqueued : Time?)
      if date_enqueued.nil?
        return @date_enqueued = nil
      end
      _date_enqueued = date_enqueued.not_nil!
      @date_enqueued = _date_enqueued
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] position Object to be assigned
    def position=(position : Int32?)
      if position.nil?
        return @position = nil
      end
      _position = position.not_nil!
      @position = _position
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] queue_sid Object to be assigned
    def queue_sid=(queue_sid : String?)
      if queue_sid.nil?
        return @queue_sid = nil
      end
      _queue_sid = queue_sid.not_nil!
      OpenApi::PrimitiveValidator.validate_max_length("queue_sid", _queue_sid.to_s.size, MAX_LENGTH_FOR_QUEUE_SID)
      OpenApi::PrimitiveValidator.validate_min_length("queue_sid", _queue_sid.to_s.size, MIN_LENGTH_FOR_QUEUE_SID)
      OpenApi::PrimitiveValidator.validate_pattern("queue_sid", _queue_sid, PATTERN_FOR_QUEUE_SID)
      @queue_sid = _queue_sid
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] uri Object to be assigned
    def uri=(uri : String?)
      if uri.nil?
        return @uri = nil
      end
      _uri = uri.not_nil!
      @uri = _uri
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] wait_time Object to be assigned
    def wait_time=(wait_time : Int32?)
      if wait_time.nil?
        return @wait_time = nil
      end
      _wait_time = wait_time.not_nil!
      @wait_time = _wait_time
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@call_sid, @call_sid_present, @date_enqueued, @date_enqueued_present, @position, @position_present, @queue_sid, @queue_sid_present, @uri, @uri_present, @wait_time, @wait_time_present)
  end
end
