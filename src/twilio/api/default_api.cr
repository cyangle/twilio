#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.29.1
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "uri"

module Twilio
  class DefaultApi
    property api_client : ApiClient
    property account_sid : String

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
      @account_sid = api_client.config.username.not_nil!
    end

    # Create a new Twilio Subaccount from the account making the request
    # @return [Account]
    def create_account(*, friendly_name : String? = nil)
      data, _status_code, _headers = create_account_with_http_info(friendly_name: friendly_name)
      data
    end

    # Create a new Twilio Subaccount from the account making the request
    # @return [Array<(Account, Integer, Hash)>] Account data, response status code and response headers
    def create_account_with_http_info(*, friendly_name : String? = nil)
      request = build_api_request_for_create_account(friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Account.from_json(data), status_code, headers
    end

    # Create a new Twilio Subaccount from the account making the request
    # @return nil
    def create_account(*, friendly_name : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_account(friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_account(*, friendly_name : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_account ..." }
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts.json"

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_account",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Address resource.
    # @param city [String] The city of the new address.
    # @param customer_name [String] The name to associate with the new address.
    # @param iso_country [String] The ISO country code of the new address.
    # @param postal_code [String] The postal code of the new address.
    # @param region [String] The state or region of the new address.
    # @param street [String] The number and street address of the new address.
    # @return [Address]
    def create_address(*, account_sid : String = @account_sid, city : String, customer_name : String, iso_country : String, postal_code : String, region : String, street : String, auto_correct_address : Bool? = nil, emergency_enabled : Bool? = nil, friendly_name : String? = nil)
      data, _status_code, _headers = create_address_with_http_info(account_sid: account_sid, city: city, customer_name: customer_name, iso_country: iso_country, postal_code: postal_code, region: region, street: street, auto_correct_address: auto_correct_address, emergency_enabled: emergency_enabled, friendly_name: friendly_name)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Address resource.
    # @param city [String] The city of the new address.
    # @param customer_name [String] The name to associate with the new address.
    # @param iso_country [String] The ISO country code of the new address.
    # @param postal_code [String] The postal code of the new address.
    # @param region [String] The state or region of the new address.
    # @param street [String] The number and street address of the new address.
    # @return [Array<(Address, Integer, Hash)>] Address data, response status code and response headers
    def create_address_with_http_info(*, account_sid : String = @account_sid, city : String, customer_name : String, iso_country : String, postal_code : String, region : String, street : String, auto_correct_address : Bool? = nil, emergency_enabled : Bool? = nil, friendly_name : String? = nil)
      request = build_api_request_for_create_address(account_sid: account_sid, city: city, customer_name: customer_name, iso_country: iso_country, postal_code: postal_code, region: region, street: street, auto_correct_address: auto_correct_address, emergency_enabled: emergency_enabled, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Address.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Address resource.
    # @param city [String] The city of the new address.
    # @param customer_name [String] The name to associate with the new address.
    # @param iso_country [String] The ISO country code of the new address.
    # @param postal_code [String] The postal code of the new address.
    # @param region [String] The state or region of the new address.
    # @param street [String] The number and street address of the new address.
    # @return nil
    def create_address(*, account_sid : String = @account_sid, city : String, customer_name : String, iso_country : String, postal_code : String, region : String, street : String, auto_correct_address : Bool? = nil, emergency_enabled : Bool? = nil, friendly_name : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_address(account_sid: account_sid, city: city, customer_name: customer_name, iso_country: iso_country, postal_code: postal_code, region: region, street: street, auto_correct_address: auto_correct_address, emergency_enabled: emergency_enabled, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_address(*, account_sid : String = @account_sid, city : String, customer_name : String, iso_country : String, postal_code : String, region : String, street : String, auto_correct_address : Bool? = nil, emergency_enabled : Bool? = nil, friendly_name : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_address, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Addresses.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AutoCorrectAddress"] = auto_correct_address.to_s if !auto_correct_address.nil?
      form_params["City"] = city.to_s if !city.nil?
      form_params["CustomerName"] = customer_name.to_s if !customer_name.nil?
      form_params["EmergencyEnabled"] = emergency_enabled.to_s if !emergency_enabled.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["IsoCountry"] = iso_country.to_s if !iso_country.nil?
      form_params["PostalCode"] = postal_code.to_s if !postal_code.nil?
      form_params["Region"] = region.to_s if !region.nil?
      form_params["Street"] = street.to_s if !street.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new application within your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return [Application]
    def create_application(*, account_sid : String = @account_sid, api_version : String? = nil, friendly_name : String? = nil, message_status_callback : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_status_callback : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = create_application_with_http_info(account_sid: account_sid, api_version: api_version, friendly_name: friendly_name, message_status_callback: message_status_callback, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_status_callback: sms_status_callback, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_url: voice_url)
      data
    end

    # Create a new application within your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return [Array<(Application, Integer, Hash)>] Application data, response status code and response headers
    def create_application_with_http_info(*, account_sid : String = @account_sid, api_version : String? = nil, friendly_name : String? = nil, message_status_callback : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_status_callback : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_create_application(account_sid: account_sid, api_version: api_version, friendly_name: friendly_name, message_status_callback: message_status_callback, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_status_callback: sms_status_callback, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_application\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Application.from_json(data), status_code, headers
    end

    # Create a new application within your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return nil
    def create_application(*, account_sid : String = @account_sid, api_version : String? = nil, friendly_name : String? = nil, message_status_callback : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_status_callback : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_application(account_sid: account_sid, api_version: api_version, friendly_name: friendly_name, message_status_callback: message_status_callback, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_status_callback: sms_status_callback, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_application(*, account_sid : String = @account_sid, api_version : String? = nil, friendly_name : String? = nil, message_status_callback : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_status_callback : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_application ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_application, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_application, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_application, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_fallback_method.nil? && !allowable_values.includes?(sms_fallback_method)
        raise ArgumentError.new("invalid value for \"sms_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_method.nil? && !allowable_values.includes?(sms_method)
        raise ArgumentError.new("invalid value for \"sms_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Applications.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["ApiVersion"] = api_version.to_s if !api_version.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["MessageStatusCallback"] = message_status_callback.to_s if !message_status_callback.nil?
      form_params["SmsFallbackMethod"] = sms_fallback_method.to_s if !sms_fallback_method.nil?
      form_params["SmsFallbackUrl"] = sms_fallback_url.to_s if !sms_fallback_url.nil?
      form_params["SmsMethod"] = sms_method.to_s if !sms_method.nil?
      form_params["SmsStatusCallback"] = sms_status_callback.to_s if !sms_status_callback.nil?
      form_params["SmsUrl"] = sms_url.to_s if !sms_url.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["VoiceCallerIdLookup"] = voice_caller_id_lookup.to_s if !voice_caller_id_lookup.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_application",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new outgoing call to phones, SIP-enabled endpoints or Twilio Client connections
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param from [String] The phone number or client identifier to use as the caller id. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `From` must also be a phone number.
    # @param to [String] The phone number, SIP address, or client identifier to call.
    # @return [Call]
    def create_call(*, account_sid : String = @account_sid, from : String, to : String, application_sid : String? = nil, async_amd : String? = nil, async_amd_status_callback : String? = nil, async_amd_status_callback_method : String? = nil, byoc : String? = nil, call_reason : String? = nil, call_token : String? = nil, caller_id : String? = nil, fallback_method : String? = nil, fallback_url : String? = nil, machine_detection : String? = nil, machine_detection_silence_timeout : Int32? = nil, machine_detection_speech_end_threshold : Int32? = nil, machine_detection_speech_threshold : Int32? = nil, machine_detection_timeout : Int32? = nil, method : String? = nil, record : Bool? = nil, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, send_digits : String? = nil, sip_auth_password : String? = nil, sip_auth_username : String? = nil, status_callback : String? = nil, status_callback_event : Array(String)? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, timeout : Int32? = nil, trim : String? = nil, twiml : String? = nil, url : String? = nil)
      data, _status_code, _headers = create_call_with_http_info(account_sid: account_sid, from: from, to: to, application_sid: application_sid, async_amd: async_amd, async_amd_status_callback: async_amd_status_callback, async_amd_status_callback_method: async_amd_status_callback_method, byoc: byoc, call_reason: call_reason, call_token: call_token, caller_id: caller_id, fallback_method: fallback_method, fallback_url: fallback_url, machine_detection: machine_detection, machine_detection_silence_timeout: machine_detection_silence_timeout, machine_detection_speech_end_threshold: machine_detection_speech_end_threshold, machine_detection_speech_threshold: machine_detection_speech_threshold, machine_detection_timeout: machine_detection_timeout, method: method, record: record, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, send_digits: send_digits, sip_auth_password: sip_auth_password, sip_auth_username: sip_auth_username, status_callback: status_callback, status_callback_event: status_callback_event, status_callback_method: status_callback_method, time_limit: time_limit, timeout: timeout, trim: trim, twiml: twiml, url: url)
      data
    end

    # Create a new outgoing call to phones, SIP-enabled endpoints or Twilio Client connections
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param from [String] The phone number or client identifier to use as the caller id. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `From` must also be a phone number.
    # @param to [String] The phone number, SIP address, or client identifier to call.
    # @return [Array<(Call, Integer, Hash)>] Call data, response status code and response headers
    def create_call_with_http_info(*, account_sid : String = @account_sid, from : String, to : String, application_sid : String? = nil, async_amd : String? = nil, async_amd_status_callback : String? = nil, async_amd_status_callback_method : String? = nil, byoc : String? = nil, call_reason : String? = nil, call_token : String? = nil, caller_id : String? = nil, fallback_method : String? = nil, fallback_url : String? = nil, machine_detection : String? = nil, machine_detection_silence_timeout : Int32? = nil, machine_detection_speech_end_threshold : Int32? = nil, machine_detection_speech_threshold : Int32? = nil, machine_detection_timeout : Int32? = nil, method : String? = nil, record : Bool? = nil, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, send_digits : String? = nil, sip_auth_password : String? = nil, sip_auth_username : String? = nil, status_callback : String? = nil, status_callback_event : Array(String)? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, timeout : Int32? = nil, trim : String? = nil, twiml : String? = nil, url : String? = nil)
      request = build_api_request_for_create_call(account_sid: account_sid, from: from, to: to, application_sid: application_sid, async_amd: async_amd, async_amd_status_callback: async_amd_status_callback, async_amd_status_callback_method: async_amd_status_callback_method, byoc: byoc, call_reason: call_reason, call_token: call_token, caller_id: caller_id, fallback_method: fallback_method, fallback_url: fallback_url, machine_detection: machine_detection, machine_detection_silence_timeout: machine_detection_silence_timeout, machine_detection_speech_end_threshold: machine_detection_speech_end_threshold, machine_detection_speech_threshold: machine_detection_speech_threshold, machine_detection_timeout: machine_detection_timeout, method: method, record: record, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, send_digits: send_digits, sip_auth_password: sip_auth_password, sip_auth_username: sip_auth_username, status_callback: status_callback, status_callback_event: status_callback_event, status_callback_method: status_callback_method, time_limit: time_limit, timeout: timeout, trim: trim, twiml: twiml, url: url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_call\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Call.from_json(data), status_code, headers
    end

    # Create a new outgoing call to phones, SIP-enabled endpoints or Twilio Client connections
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param from [String] The phone number or client identifier to use as the caller id. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `From` must also be a phone number.
    # @param to [String] The phone number, SIP address, or client identifier to call.
    # @return nil
    def create_call(*, account_sid : String = @account_sid, from : String, to : String, application_sid : String? = nil, async_amd : String? = nil, async_amd_status_callback : String? = nil, async_amd_status_callback_method : String? = nil, byoc : String? = nil, call_reason : String? = nil, call_token : String? = nil, caller_id : String? = nil, fallback_method : String? = nil, fallback_url : String? = nil, machine_detection : String? = nil, machine_detection_silence_timeout : Int32? = nil, machine_detection_speech_end_threshold : Int32? = nil, machine_detection_speech_threshold : Int32? = nil, machine_detection_timeout : Int32? = nil, method : String? = nil, record : Bool? = nil, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, send_digits : String? = nil, sip_auth_password : String? = nil, sip_auth_username : String? = nil, status_callback : String? = nil, status_callback_event : Array(String)? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, timeout : Int32? = nil, trim : String? = nil, twiml : String? = nil, url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_call(account_sid: account_sid, from: from, to: to, application_sid: application_sid, async_amd: async_amd, async_amd_status_callback: async_amd_status_callback, async_amd_status_callback_method: async_amd_status_callback_method, byoc: byoc, call_reason: call_reason, call_token: call_token, caller_id: caller_id, fallback_method: fallback_method, fallback_url: fallback_url, machine_detection: machine_detection, machine_detection_silence_timeout: machine_detection_silence_timeout, machine_detection_speech_end_threshold: machine_detection_speech_end_threshold, machine_detection_speech_threshold: machine_detection_speech_threshold, machine_detection_timeout: machine_detection_timeout, method: method, record: record, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, send_digits: send_digits, sip_auth_password: sip_auth_password, sip_auth_username: sip_auth_username, status_callback: status_callback, status_callback_event: status_callback_event, status_callback_method: status_callback_method, time_limit: time_limit, timeout: timeout, trim: trim, twiml: twiml, url: url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_call(*, account_sid : String = @account_sid, from : String, to : String, application_sid : String? = nil, async_amd : String? = nil, async_amd_status_callback : String? = nil, async_amd_status_callback_method : String? = nil, byoc : String? = nil, call_reason : String? = nil, call_token : String? = nil, caller_id : String? = nil, fallback_method : String? = nil, fallback_url : String? = nil, machine_detection : String? = nil, machine_detection_silence_timeout : Int32? = nil, machine_detection_speech_end_threshold : Int32? = nil, machine_detection_speech_threshold : Int32? = nil, machine_detection_timeout : Int32? = nil, method : String? = nil, record : Bool? = nil, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, send_digits : String? = nil, sip_auth_password : String? = nil, sip_auth_username : String? = nil, status_callback : String? = nil, status_callback_event : Array(String)? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, timeout : Int32? = nil, trim : String? = nil, twiml : String? = nil, url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_call ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !application_sid.nil? && application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"application_sid\" when calling DefaultApi.create_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !application_sid.nil? && application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"application_sid\" when calling DefaultApi.create_call, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !application_sid.nil? && application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"application_sid\" when calling DefaultApi.create_call, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !async_amd_status_callback_method.nil? && !allowable_values.includes?(async_amd_status_callback_method)
        raise ArgumentError.new("invalid value for \"async_amd_status_callback_method\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !byoc.nil? && byoc.to_s.size > 34
        raise ArgumentError.new("invalid value for \"byoc\" when calling DefaultApi.create_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !byoc.nil? && byoc.to_s.size < 34
        raise ArgumentError.new("invalid value for \"byoc\" when calling DefaultApi.create_call, the character length must be great than or equal to 34.")
      end

      pattern = /^BY[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !byoc.nil? && byoc !~ pattern
        raise ArgumentError.new("invalid value for \"byoc\" when calling DefaultApi.create_call, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !fallback_method.nil? && !allowable_values.includes?(fallback_method)
        raise ArgumentError.new("invalid value for \"fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !method.nil? && !allowable_values.includes?(method)
        raise ArgumentError.new("invalid value for \"method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !recording_status_callback_method.nil? && !allowable_values.includes?(recording_status_callback_method)
        raise ArgumentError.new("invalid value for \"recording_status_callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["ApplicationSid"] = application_sid.to_s if !application_sid.nil?
      form_params["AsyncAmd"] = async_amd.to_s if !async_amd.nil?
      form_params["AsyncAmdStatusCallback"] = async_amd_status_callback.to_s if !async_amd_status_callback.nil?
      form_params["AsyncAmdStatusCallbackMethod"] = async_amd_status_callback_method.to_s if !async_amd_status_callback_method.nil?
      form_params["Byoc"] = byoc.to_s if !byoc.nil?
      form_params["CallReason"] = call_reason.to_s if !call_reason.nil?
      form_params["CallToken"] = call_token.to_s if !call_token.nil?
      form_params["CallerId"] = caller_id.to_s if !caller_id.nil?
      form_params["FallbackMethod"] = fallback_method.to_s if !fallback_method.nil?
      form_params["FallbackUrl"] = fallback_url.to_s if !fallback_url.nil?
      form_params["From"] = from.to_s if !from.nil?
      form_params["MachineDetection"] = machine_detection.to_s if !machine_detection.nil?
      form_params["MachineDetectionSilenceTimeout"] = machine_detection_silence_timeout.to_s if !machine_detection_silence_timeout.nil?
      form_params["MachineDetectionSpeechEndThreshold"] = machine_detection_speech_end_threshold.to_s if !machine_detection_speech_end_threshold.nil?
      form_params["MachineDetectionSpeechThreshold"] = machine_detection_speech_threshold.to_s if !machine_detection_speech_threshold.nil?
      form_params["MachineDetectionTimeout"] = machine_detection_timeout.to_s if !machine_detection_timeout.nil?
      form_params["Method"] = method.to_s if !method.nil?
      form_params["Record"] = record.to_s if !record.nil?
      form_params["RecordingChannels"] = recording_channels.to_s if !recording_channels.nil?
      form_params["RecordingStatusCallback"] = recording_status_callback.to_s if !recording_status_callback.nil?
      form_params["RecordingStatusCallbackEvent"] = @api_client.build_collection_param(recording_status_callback_event, "multi") if !recording_status_callback_event.nil? && !recording_status_callback_event.empty?
      form_params["RecordingStatusCallbackMethod"] = recording_status_callback_method.to_s if !recording_status_callback_method.nil?
      form_params["RecordingTrack"] = recording_track.to_s if !recording_track.nil?
      form_params["SendDigits"] = send_digits.to_s if !send_digits.nil?
      form_params["SipAuthPassword"] = sip_auth_password.to_s if !sip_auth_password.nil?
      form_params["SipAuthUsername"] = sip_auth_username.to_s if !sip_auth_username.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackEvent"] = @api_client.build_collection_param(status_callback_event, "multi") if !status_callback_event.nil? && !status_callback_event.empty?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["TimeLimit"] = time_limit.to_s if !time_limit.nil?
      form_params["Timeout"] = timeout.to_s if !timeout.nil?
      form_params["To"] = to.to_s if !to.nil?
      form_params["Trim"] = trim.to_s if !trim.nil?
      form_params["Twiml"] = twiml.to_s if !twiml.nil?
      form_params["Url"] = url.to_s if !url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_call",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a FeedbackSummary resource for a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param end_date [Time] Only include feedback given on or before this date. Format is `YYYY-MM-DD` and specified in UTC.
    # @param start_date [Time] Only include feedback given on or after this date. Format is `YYYY-MM-DD` and specified in UTC.
    # @return [CallCallFeedbackSummary]
    def create_call_feedback_summary(*, account_sid : String = @account_sid, end_date : Time, start_date : Time, include_subaccounts : Bool? = nil, status_callback : String? = nil, status_callback_method : String? = nil)
      data, _status_code, _headers = create_call_feedback_summary_with_http_info(account_sid: account_sid, end_date: end_date, start_date: start_date, include_subaccounts: include_subaccounts, status_callback: status_callback, status_callback_method: status_callback_method)
      data
    end

    # Create a FeedbackSummary resource for a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param end_date [Time] Only include feedback given on or before this date. Format is `YYYY-MM-DD` and specified in UTC.
    # @param start_date [Time] Only include feedback given on or after this date. Format is `YYYY-MM-DD` and specified in UTC.
    # @return [Array<(CallCallFeedbackSummary, Integer, Hash)>] CallCallFeedbackSummary data, response status code and response headers
    def create_call_feedback_summary_with_http_info(*, account_sid : String = @account_sid, end_date : Time, start_date : Time, include_subaccounts : Bool? = nil, status_callback : String? = nil, status_callback_method : String? = nil)
      request = build_api_request_for_create_call_feedback_summary(account_sid: account_sid, end_date: end_date, start_date: start_date, include_subaccounts: include_subaccounts, status_callback: status_callback, status_callback_method: status_callback_method)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_call_feedback_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallCallFeedbackSummary.from_json(data), status_code, headers
    end

    # Create a FeedbackSummary resource for a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param end_date [Time] Only include feedback given on or before this date. Format is `YYYY-MM-DD` and specified in UTC.
    # @param start_date [Time] Only include feedback given on or after this date. Format is `YYYY-MM-DD` and specified in UTC.
    # @return nil
    def create_call_feedback_summary(*, account_sid : String = @account_sid, end_date : Time, start_date : Time, include_subaccounts : Bool? = nil, status_callback : String? = nil, status_callback_method : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_call_feedback_summary(account_sid: account_sid, end_date: end_date, start_date: start_date, include_subaccounts: include_subaccounts, status_callback: status_callback, status_callback_method: status_callback_method).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_call_feedback_summary(*, account_sid : String = @account_sid, end_date : Time, start_date : Time, include_subaccounts : Bool? = nil, status_callback : String? = nil, status_callback_method : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_call_feedback_summary ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call_feedback_summary, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call_feedback_summary, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call_feedback_summary, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      form_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      form_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_call_feedback_summary",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a recording for the call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) to associate the resource with.
    # @return [CallCallRecording]
    def create_call_recording(*, account_sid : String = @account_sid, call_sid : String, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, trim : String? = nil)
      data, _status_code, _headers = create_call_recording_with_http_info(account_sid: account_sid, call_sid: call_sid, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, trim: trim)
      data
    end

    # Create a recording for the call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) to associate the resource with.
    # @return [Array<(CallCallRecording, Integer, Hash)>] CallCallRecording data, response status code and response headers
    def create_call_recording_with_http_info(*, account_sid : String = @account_sid, call_sid : String, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, trim : String? = nil)
      request = build_api_request_for_create_call_recording(account_sid: account_sid, call_sid: call_sid, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, trim: trim)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_call_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallCallRecording.from_json(data), status_code, headers
    end

    # Create a recording for the call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) to associate the resource with.
    # @return nil
    def create_call_recording(*, account_sid : String = @account_sid, call_sid : String, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, trim : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_call_recording(account_sid: account_sid, call_sid: call_sid, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, trim: trim).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_call_recording(*, account_sid : String = @account_sid, call_sid : String, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, trim : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_call_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_call_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.create_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.create_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.create_call_recording, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !recording_status_callback_method.nil? && !allowable_values.includes?(recording_status_callback_method)
        raise ArgumentError.new("invalid value for \"recording_status_callback_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["RecordingChannels"] = recording_channels.to_s if !recording_channels.nil?
      form_params["RecordingStatusCallback"] = recording_status_callback.to_s if !recording_status_callback.nil?
      form_params["RecordingStatusCallbackEvent"] = @api_client.build_collection_param(recording_status_callback_event, "multi") if !recording_status_callback_event.nil? && !recording_status_callback_event.empty?
      form_params["RecordingStatusCallbackMethod"] = recording_status_callback_method.to_s if !recording_status_callback_method.nil?
      form_params["RecordingTrack"] = recording_track.to_s if !recording_track.nil?
      form_params["Trim"] = trim.to_s if !trim.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_call_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Purchase a phone-number for the account.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return [IncomingPhoneNumber]
    def create_incoming_phone_number(*, account_sid : String = @account_sid, address_sid : String? = nil, api_version : String? = nil, area_code : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, phone_number : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = create_incoming_phone_number_with_http_info(account_sid: account_sid, address_sid: address_sid, api_version: api_version, area_code: area_code, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, phone_number: phone_number, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    # Purchase a phone-number for the account.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return [Array<(IncomingPhoneNumber, Integer, Hash)>] IncomingPhoneNumber data, response status code and response headers
    def create_incoming_phone_number_with_http_info(*, account_sid : String = @account_sid, address_sid : String? = nil, api_version : String? = nil, area_code : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, phone_number : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_create_incoming_phone_number(account_sid: account_sid, address_sid: address_sid, api_version: api_version, area_code: area_code, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, phone_number: phone_number, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_incoming_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumber.from_json(data), status_code, headers
    end

    # Purchase a phone-number for the account.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return nil
    def create_incoming_phone_number(*, account_sid : String = @account_sid, address_sid : String? = nil, api_version : String? = nil, area_code : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, phone_number : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_incoming_phone_number(account_sid: account_sid, address_sid: address_sid, api_version: api_version, area_code: area_code, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, phone_number: phone_number, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number(*, account_sid : String = @account_sid, address_sid : String? = nil, api_version : String? = nil, area_code : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, phone_number : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_incoming_phone_number ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^BU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid !~ pattern
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["Active", "Inactive"]
      if @api_client.config.client_side_validation && !emergency_status.nil? && !allowable_values.includes?(emergency_status)
        raise ArgumentError.new("invalid value for \"emergency_status\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^RI[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid !~ pattern
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_fallback_method.nil? && !allowable_values.includes?(sms_fallback_method)
        raise ArgumentError.new("invalid value for \"sms_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_method.nil? && !allowable_values.includes?(sms_method)
        raise ArgumentError.new("invalid value for \"sms_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^TK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid !~ pattern
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["voice", "fax"]
      if @api_client.config.client_side_validation && !voice_receive_mode.nil? && !allowable_values.includes?(voice_receive_mode)
        raise ArgumentError.new("invalid value for \"voice_receive_mode\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AddressSid"] = address_sid.to_s if !address_sid.nil?
      form_params["ApiVersion"] = api_version.to_s if !api_version.nil?
      form_params["AreaCode"] = area_code.to_s if !area_code.nil?
      form_params["BundleSid"] = bundle_sid.to_s if !bundle_sid.nil?
      form_params["EmergencyAddressSid"] = emergency_address_sid.to_s if !emergency_address_sid.nil?
      form_params["EmergencyStatus"] = emergency_status.to_s if !emergency_status.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["IdentitySid"] = identity_sid.to_s if !identity_sid.nil?
      form_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      form_params["SmsApplicationSid"] = sms_application_sid.to_s if !sms_application_sid.nil?
      form_params["SmsFallbackMethod"] = sms_fallback_method.to_s if !sms_fallback_method.nil?
      form_params["SmsFallbackUrl"] = sms_fallback_url.to_s if !sms_fallback_url.nil?
      form_params["SmsMethod"] = sms_method.to_s if !sms_method.nil?
      form_params["SmsUrl"] = sms_url.to_s if !sms_url.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["TrunkSid"] = trunk_sid.to_s if !trunk_sid.nil?
      form_params["VoiceApplicationSid"] = voice_application_sid.to_s if !voice_application_sid.nil?
      form_params["VoiceCallerIdLookup"] = voice_caller_id_lookup.to_s if !voice_caller_id_lookup.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceReceiveMode"] = voice_receive_mode.to_s if !voice_receive_mode.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Assign an Add-on installation to the Number specified.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param resource_sid [String] The SID of the Phone Number to assign the Add-on.
    # @param installed_add_on_sid [String] The SID that identifies the Add-on installation.
    # @return [IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn]
    def create_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, installed_add_on_sid : String)
      data, _status_code, _headers = create_incoming_phone_number_assigned_add_on_with_http_info(account_sid: account_sid, resource_sid: resource_sid, installed_add_on_sid: installed_add_on_sid)
      data
    end

    # Assign an Add-on installation to the Number specified.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param resource_sid [String] The SID of the Phone Number to assign the Add-on.
    # @param installed_add_on_sid [String] The SID that identifies the Add-on installation.
    # @return [Array<(IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn, Integer, Hash)>] IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn data, response status code and response headers
    def create_incoming_phone_number_assigned_add_on_with_http_info(*, account_sid : String = @account_sid, resource_sid : String, installed_add_on_sid : String)
      request = build_api_request_for_create_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, installed_add_on_sid: installed_add_on_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_incoming_phone_number_assigned_add_on\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn.from_json(data), status_code, headers
    end

    # Assign an Add-on installation to the Number specified.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param resource_sid [String] The SID of the Phone Number to assign the Add-on.
    # @param installed_add_on_sid [String] The SID that identifies the Add-on installation.
    # @return nil
    def create_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, installed_add_on_sid : String, &block : Crest::Response ->)
      build_api_request_for_create_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, installed_add_on_sid: installed_add_on_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, installed_add_on_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_incoming_phone_number_assigned_add_on ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && resource_sid !~ pattern
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && installed_add_on_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"installed_add_on_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && installed_add_on_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"installed_add_on_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^XE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && installed_add_on_sid !~ pattern
        raise ArgumentError.new("invalid value for \"installed_add_on_sid\" when calling DefaultApi.create_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["InstalledAddOnSid"] = installed_add_on_sid.to_s if !installed_add_on_sid.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_incoming_phone_number_assigned_add_on",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return [IncomingPhoneNumberIncomingPhoneNumberLocal]
    def create_incoming_phone_number_local(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = create_incoming_phone_number_local_with_http_info(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return [Array<(IncomingPhoneNumberIncomingPhoneNumberLocal, Integer, Hash)>] IncomingPhoneNumberIncomingPhoneNumberLocal data, response status code and response headers
    def create_incoming_phone_number_local_with_http_info(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_create_incoming_phone_number_local(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_incoming_phone_number_local\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumberIncomingPhoneNumberLocal.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return nil
    def create_incoming_phone_number_local(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_incoming_phone_number_local(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number_local(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_incoming_phone_number_local ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^BU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid !~ pattern
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["Active", "Inactive"]
      if @api_client.config.client_side_validation && !emergency_status.nil? && !allowable_values.includes?(emergency_status)
        raise ArgumentError.new("invalid value for \"emergency_status\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^RI[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid !~ pattern
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_fallback_method.nil? && !allowable_values.includes?(sms_fallback_method)
        raise ArgumentError.new("invalid value for \"sms_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_method.nil? && !allowable_values.includes?(sms_method)
        raise ArgumentError.new("invalid value for \"sms_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^TK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid !~ pattern
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["voice", "fax"]
      if @api_client.config.client_side_validation && !voice_receive_mode.nil? && !allowable_values.includes?(voice_receive_mode)
        raise ArgumentError.new("invalid value for \"voice_receive_mode\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AddressSid"] = address_sid.to_s if !address_sid.nil?
      form_params["ApiVersion"] = api_version.to_s if !api_version.nil?
      form_params["BundleSid"] = bundle_sid.to_s if !bundle_sid.nil?
      form_params["EmergencyAddressSid"] = emergency_address_sid.to_s if !emergency_address_sid.nil?
      form_params["EmergencyStatus"] = emergency_status.to_s if !emergency_status.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["IdentitySid"] = identity_sid.to_s if !identity_sid.nil?
      form_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      form_params["SmsApplicationSid"] = sms_application_sid.to_s if !sms_application_sid.nil?
      form_params["SmsFallbackMethod"] = sms_fallback_method.to_s if !sms_fallback_method.nil?
      form_params["SmsFallbackUrl"] = sms_fallback_url.to_s if !sms_fallback_url.nil?
      form_params["SmsMethod"] = sms_method.to_s if !sms_method.nil?
      form_params["SmsUrl"] = sms_url.to_s if !sms_url.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["TrunkSid"] = trunk_sid.to_s if !trunk_sid.nil?
      form_params["VoiceApplicationSid"] = voice_application_sid.to_s if !voice_application_sid.nil?
      form_params["VoiceCallerIdLookup"] = voice_caller_id_lookup.to_s if !voice_caller_id_lookup.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceReceiveMode"] = voice_receive_mode.to_s if !voice_receive_mode.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_incoming_phone_number_local",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return [IncomingPhoneNumberIncomingPhoneNumberMobile]
    def create_incoming_phone_number_mobile(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = create_incoming_phone_number_mobile_with_http_info(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return [Array<(IncomingPhoneNumberIncomingPhoneNumberMobile, Integer, Hash)>] IncomingPhoneNumberIncomingPhoneNumberMobile data, response status code and response headers
    def create_incoming_phone_number_mobile_with_http_info(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_create_incoming_phone_number_mobile(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_incoming_phone_number_mobile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumberIncomingPhoneNumberMobile.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return nil
    def create_incoming_phone_number_mobile(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_incoming_phone_number_mobile(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number_mobile(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_incoming_phone_number_mobile ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^BU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid !~ pattern
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["Active", "Inactive"]
      if @api_client.config.client_side_validation && !emergency_status.nil? && !allowable_values.includes?(emergency_status)
        raise ArgumentError.new("invalid value for \"emergency_status\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^RI[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid !~ pattern
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_fallback_method.nil? && !allowable_values.includes?(sms_fallback_method)
        raise ArgumentError.new("invalid value for \"sms_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_method.nil? && !allowable_values.includes?(sms_method)
        raise ArgumentError.new("invalid value for \"sms_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^TK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid !~ pattern
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["voice", "fax"]
      if @api_client.config.client_side_validation && !voice_receive_mode.nil? && !allowable_values.includes?(voice_receive_mode)
        raise ArgumentError.new("invalid value for \"voice_receive_mode\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AddressSid"] = address_sid.to_s if !address_sid.nil?
      form_params["ApiVersion"] = api_version.to_s if !api_version.nil?
      form_params["BundleSid"] = bundle_sid.to_s if !bundle_sid.nil?
      form_params["EmergencyAddressSid"] = emergency_address_sid.to_s if !emergency_address_sid.nil?
      form_params["EmergencyStatus"] = emergency_status.to_s if !emergency_status.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["IdentitySid"] = identity_sid.to_s if !identity_sid.nil?
      form_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      form_params["SmsApplicationSid"] = sms_application_sid.to_s if !sms_application_sid.nil?
      form_params["SmsFallbackMethod"] = sms_fallback_method.to_s if !sms_fallback_method.nil?
      form_params["SmsFallbackUrl"] = sms_fallback_url.to_s if !sms_fallback_url.nil?
      form_params["SmsMethod"] = sms_method.to_s if !sms_method.nil?
      form_params["SmsUrl"] = sms_url.to_s if !sms_url.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["TrunkSid"] = trunk_sid.to_s if !trunk_sid.nil?
      form_params["VoiceApplicationSid"] = voice_application_sid.to_s if !voice_application_sid.nil?
      form_params["VoiceCallerIdLookup"] = voice_caller_id_lookup.to_s if !voice_caller_id_lookup.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceReceiveMode"] = voice_receive_mode.to_s if !voice_receive_mode.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_incoming_phone_number_mobile",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return [IncomingPhoneNumberIncomingPhoneNumberTollFree]
    def create_incoming_phone_number_toll_free(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = create_incoming_phone_number_toll_free_with_http_info(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return [Array<(IncomingPhoneNumberIncomingPhoneNumberTollFree, Integer, Hash)>] IncomingPhoneNumberIncomingPhoneNumberTollFree data, response status code and response headers
    def create_incoming_phone_number_toll_free_with_http_info(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_create_incoming_phone_number_toll_free(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_incoming_phone_number_toll_free\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumberIncomingPhoneNumberTollFree.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param phone_number [String] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @return nil
    def create_incoming_phone_number_toll_free(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_incoming_phone_number_toll_free(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number_toll_free(*, account_sid : String = @account_sid, phone_number : String, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_incoming_phone_number_toll_free ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^BU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid !~ pattern
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["Active", "Inactive"]
      if @api_client.config.client_side_validation && !emergency_status.nil? && !allowable_values.includes?(emergency_status)
        raise ArgumentError.new("invalid value for \"emergency_status\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^RI[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid !~ pattern
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_fallback_method.nil? && !allowable_values.includes?(sms_fallback_method)
        raise ArgumentError.new("invalid value for \"sms_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_method.nil? && !allowable_values.includes?(sms_method)
        raise ArgumentError.new("invalid value for \"sms_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^TK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid !~ pattern
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.create_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["voice", "fax"]
      if @api_client.config.client_side_validation && !voice_receive_mode.nil? && !allowable_values.includes?(voice_receive_mode)
        raise ArgumentError.new("invalid value for \"voice_receive_mode\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AddressSid"] = address_sid.to_s if !address_sid.nil?
      form_params["ApiVersion"] = api_version.to_s if !api_version.nil?
      form_params["BundleSid"] = bundle_sid.to_s if !bundle_sid.nil?
      form_params["EmergencyAddressSid"] = emergency_address_sid.to_s if !emergency_address_sid.nil?
      form_params["EmergencyStatus"] = emergency_status.to_s if !emergency_status.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["IdentitySid"] = identity_sid.to_s if !identity_sid.nil?
      form_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      form_params["SmsApplicationSid"] = sms_application_sid.to_s if !sms_application_sid.nil?
      form_params["SmsFallbackMethod"] = sms_fallback_method.to_s if !sms_fallback_method.nil?
      form_params["SmsFallbackUrl"] = sms_fallback_url.to_s if !sms_fallback_url.nil?
      form_params["SmsMethod"] = sms_method.to_s if !sms_method.nil?
      form_params["SmsUrl"] = sms_url.to_s if !sms_url.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["TrunkSid"] = trunk_sid.to_s if !trunk_sid.nil?
      form_params["VoiceApplicationSid"] = voice_application_sid.to_s if !voice_application_sid.nil?
      form_params["VoiceCallerIdLookup"] = voice_caller_id_lookup.to_s if !voice_caller_id_lookup.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceReceiveMode"] = voice_receive_mode.to_s if !voice_receive_mode.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_incoming_phone_number_toll_free",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Send a message from the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param to [String] The destination phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format for SMS/MMS or [Channel user address](https://www.twilio.com/docs/sms/channels#channel-addresses) for other 3rd-party channels.
    # @return [Message]
    def create_message(*, account_sid : String = @account_sid, to : String, address_retention : String? = nil, application_sid : String? = nil, attempt : Int32? = nil, body : String? = nil, content_retention : String? = nil, force_delivery : Bool? = nil, from : String? = nil, max_price : Float64? = nil, media_url : Array(String)? = nil, messaging_service_sid : String? = nil, persistent_action : Array(String)? = nil, provide_feedback : Bool? = nil, schedule_type : String? = nil, send_as_mms : Bool? = nil, send_at : Time? = nil, smart_encoded : Bool? = nil, status_callback : String? = nil, validity_period : Int32? = nil)
      data, _status_code, _headers = create_message_with_http_info(account_sid: account_sid, to: to, address_retention: address_retention, application_sid: application_sid, attempt: attempt, body: body, content_retention: content_retention, force_delivery: force_delivery, from: from, max_price: max_price, media_url: media_url, messaging_service_sid: messaging_service_sid, persistent_action: persistent_action, provide_feedback: provide_feedback, schedule_type: schedule_type, send_as_mms: send_as_mms, send_at: send_at, smart_encoded: smart_encoded, status_callback: status_callback, validity_period: validity_period)
      data
    end

    # Send a message from the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param to [String] The destination phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format for SMS/MMS or [Channel user address](https://www.twilio.com/docs/sms/channels#channel-addresses) for other 3rd-party channels.
    # @return [Array<(Message, Integer, Hash)>] Message data, response status code and response headers
    def create_message_with_http_info(*, account_sid : String = @account_sid, to : String, address_retention : String? = nil, application_sid : String? = nil, attempt : Int32? = nil, body : String? = nil, content_retention : String? = nil, force_delivery : Bool? = nil, from : String? = nil, max_price : Float64? = nil, media_url : Array(String)? = nil, messaging_service_sid : String? = nil, persistent_action : Array(String)? = nil, provide_feedback : Bool? = nil, schedule_type : String? = nil, send_as_mms : Bool? = nil, send_at : Time? = nil, smart_encoded : Bool? = nil, status_callback : String? = nil, validity_period : Int32? = nil)
      request = build_api_request_for_create_message(account_sid: account_sid, to: to, address_retention: address_retention, application_sid: application_sid, attempt: attempt, body: body, content_retention: content_retention, force_delivery: force_delivery, from: from, max_price: max_price, media_url: media_url, messaging_service_sid: messaging_service_sid, persistent_action: persistent_action, provide_feedback: provide_feedback, schedule_type: schedule_type, send_as_mms: send_as_mms, send_at: send_at, smart_encoded: smart_encoded, status_callback: status_callback, validity_period: validity_period)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_message\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Message.from_json(data), status_code, headers
    end

    # Send a message from the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param to [String] The destination phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format for SMS/MMS or [Channel user address](https://www.twilio.com/docs/sms/channels#channel-addresses) for other 3rd-party channels.
    # @return nil
    def create_message(*, account_sid : String = @account_sid, to : String, address_retention : String? = nil, application_sid : String? = nil, attempt : Int32? = nil, body : String? = nil, content_retention : String? = nil, force_delivery : Bool? = nil, from : String? = nil, max_price : Float64? = nil, media_url : Array(String)? = nil, messaging_service_sid : String? = nil, persistent_action : Array(String)? = nil, provide_feedback : Bool? = nil, schedule_type : String? = nil, send_as_mms : Bool? = nil, send_at : Time? = nil, smart_encoded : Bool? = nil, status_callback : String? = nil, validity_period : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_create_message(account_sid: account_sid, to: to, address_retention: address_retention, application_sid: application_sid, attempt: attempt, body: body, content_retention: content_retention, force_delivery: force_delivery, from: from, max_price: max_price, media_url: media_url, messaging_service_sid: messaging_service_sid, persistent_action: persistent_action, provide_feedback: provide_feedback, schedule_type: schedule_type, send_as_mms: send_as_mms, send_at: send_at, smart_encoded: smart_encoded, status_callback: status_callback, validity_period: validity_period).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_message(*, account_sid : String = @account_sid, to : String, address_retention : String? = nil, application_sid : String? = nil, attempt : Int32? = nil, body : String? = nil, content_retention : String? = nil, force_delivery : Bool? = nil, from : String? = nil, max_price : Float64? = nil, media_url : Array(String)? = nil, messaging_service_sid : String? = nil, persistent_action : Array(String)? = nil, provide_feedback : Bool? = nil, schedule_type : String? = nil, send_as_mms : Bool? = nil, send_at : Time? = nil, smart_encoded : Bool? = nil, status_callback : String? = nil, validity_period : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_message ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_message, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_message, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["retain"]
      if @api_client.config.client_side_validation && !address_retention.nil? && !allowable_values.includes?(address_retention)
        raise ArgumentError.new("invalid value for \"address_retention\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !application_sid.nil? && application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"application_sid\" when calling DefaultApi.create_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !application_sid.nil? && application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"application_sid\" when calling DefaultApi.create_message, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !application_sid.nil? && application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"application_sid\" when calling DefaultApi.create_message, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["retain"]
      if @api_client.config.client_side_validation && !content_retention.nil? && !allowable_values.includes?(content_retention)
        raise ArgumentError.new("invalid value for \"content_retention\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !messaging_service_sid.nil? && messaging_service_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"messaging_service_sid\" when calling DefaultApi.create_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !messaging_service_sid.nil? && messaging_service_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"messaging_service_sid\" when calling DefaultApi.create_message, the character length must be great than or equal to 34.")
      end

      pattern = /^MG[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !messaging_service_sid.nil? && messaging_service_sid !~ pattern
        raise ArgumentError.new("invalid value for \"messaging_service_sid\" when calling DefaultApi.create_message, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["fixed"]
      if @api_client.config.client_side_validation && !schedule_type.nil? && !allowable_values.includes?(schedule_type)
        raise ArgumentError.new("invalid value for \"schedule_type\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AddressRetention"] = address_retention.to_s if !address_retention.nil?
      form_params["ApplicationSid"] = application_sid.to_s if !application_sid.nil?
      form_params["Attempt"] = attempt.to_s if !attempt.nil?
      form_params["Body"] = body.to_s if !body.nil?
      form_params["ContentRetention"] = content_retention.to_s if !content_retention.nil?
      form_params["ForceDelivery"] = force_delivery.to_s if !force_delivery.nil?
      form_params["From"] = from.to_s if !from.nil?
      form_params["MaxPrice"] = max_price.to_s if !max_price.nil?
      form_params["MediaUrl"] = @api_client.build_collection_param(media_url, "multi") if !media_url.nil? && !media_url.empty?
      form_params["MessagingServiceSid"] = messaging_service_sid.to_s if !messaging_service_sid.nil?
      form_params["PersistentAction"] = @api_client.build_collection_param(persistent_action, "multi") if !persistent_action.nil? && !persistent_action.empty?
      form_params["ProvideFeedback"] = provide_feedback.to_s if !provide_feedback.nil?
      form_params["ScheduleType"] = schedule_type.to_s if !schedule_type.nil?
      form_params["SendAsMms"] = send_as_mms.to_s if !send_as_mms.nil?
      form_params["SendAt"] = Time::Format::RFC_2822.format(send_at) if !send_at.nil?
      form_params["SmartEncoded"] = smart_encoded.to_s if !smart_encoded.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["To"] = to.to_s if !to.nil?
      form_params["ValidityPeriod"] = validity_period.to_s if !validity_period.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_message",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param message_sid [String] The SID of the Message resource for which the feedback was provided.
    # @return [MessageMessageFeedback]
    def create_message_feedback(*, account_sid : String = @account_sid, message_sid : String, outcome : String? = nil)
      data, _status_code, _headers = create_message_feedback_with_http_info(account_sid: account_sid, message_sid: message_sid, outcome: outcome)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param message_sid [String] The SID of the Message resource for which the feedback was provided.
    # @return [Array<(MessageMessageFeedback, Integer, Hash)>] MessageMessageFeedback data, response status code and response headers
    def create_message_feedback_with_http_info(*, account_sid : String = @account_sid, message_sid : String, outcome : String? = nil)
      request = build_api_request_for_create_message_feedback(account_sid: account_sid, message_sid: message_sid, outcome: outcome)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_message_feedback\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return MessageMessageFeedback.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param message_sid [String] The SID of the Message resource for which the feedback was provided.
    # @return nil
    def create_message_feedback(*, account_sid : String = @account_sid, message_sid : String, outcome : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_message_feedback(account_sid: account_sid, message_sid: message_sid, outcome: outcome).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_message_feedback(*, account_sid : String = @account_sid, message_sid : String, outcome : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_message_feedback ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_message_feedback, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_message_feedback, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_message_feedback, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && message_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.create_message_feedback, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && message_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.create_message_feedback, the character length must be great than or equal to 34.")
      end

      pattern = /^(SM|MM)[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && message_sid !~ pattern
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.create_message_feedback, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["confirmed", "unconfirmed"]
      if @api_client.config.client_side_validation && !outcome.nil? && !allowable_values.includes?(outcome)
        raise ArgumentError.new("invalid value for \"outcome\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Feedback.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "MessageSid" + "}", URI.encode_path(message_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Outcome"] = outcome.to_s if !outcome.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_message_feedback",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Key resource.
    # @return [NewKey]
    def create_new_key(*, account_sid : String = @account_sid, friendly_name : String? = nil)
      data, _status_code, _headers = create_new_key_with_http_info(account_sid: account_sid, friendly_name: friendly_name)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Key resource.
    # @return [Array<(NewKey, Integer, Hash)>] NewKey data, response status code and response headers
    def create_new_key_with_http_info(*, account_sid : String = @account_sid, friendly_name : String? = nil)
      request = build_api_request_for_create_new_key(account_sid: account_sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_new_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return NewKey.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Key resource.
    # @return nil
    def create_new_key(*, account_sid : String = @account_sid, friendly_name : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_new_key(account_sid: account_sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_new_key(*, account_sid : String = @account_sid, friendly_name : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_new_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_new_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_new_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_new_key, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Keys.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_new_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new Signing Key for the account making the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Key resource.
    # @return [NewSigningKey]
    def create_new_signing_key(*, account_sid : String = @account_sid, friendly_name : String? = nil)
      data, _status_code, _headers = create_new_signing_key_with_http_info(account_sid: account_sid, friendly_name: friendly_name)
      data
    end

    # Create a new Signing Key for the account making the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Key resource.
    # @return [Array<(NewSigningKey, Integer, Hash)>] NewSigningKey data, response status code and response headers
    def create_new_signing_key_with_http_info(*, account_sid : String = @account_sid, friendly_name : String? = nil)
      request = build_api_request_for_create_new_signing_key(account_sid: account_sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_new_signing_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return NewSigningKey.from_json(data), status_code, headers
    end

    # Create a new Signing Key for the account making the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will be responsible for the new Key resource.
    # @return nil
    def create_new_signing_key(*, account_sid : String = @account_sid, friendly_name : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_new_signing_key(account_sid: account_sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_new_signing_key(*, account_sid : String = @account_sid, friendly_name : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_new_signing_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_new_signing_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_new_signing_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_new_signing_key, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SigningKeys.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_new_signing_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param conference_sid [String] The SID of the participant's conference.
    # @param from [String] The phone number, Client identifier, or username portion of SIP address that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). Client identifiers are formatted `client:name`. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `from` must also be a phone number. If `to` is sip address, this value of `from` should be a username portion to be used to populate the P-Asserted-Identity header that is passed to the SIP endpoint.
    # @param to [String] The phone number, SIP address, or Client identifier that received this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `sip:name@company.com`. Client identifiers are formatted `client:name`. [Custom parameters](https://www.twilio.com/docs/voice/api/conference-participant-resource#custom-parameters) may also be specified.
    # @return [ConferenceParticipant]
    def create_participant(*, account_sid : String = @account_sid, conference_sid : String, from : String, to : String, beep : String? = nil, byoc : String? = nil, call_reason : String? = nil, call_sid_to_coach : String? = nil, caller_id : String? = nil, coaching : Bool? = nil, conference_record : String? = nil, conference_recording_status_callback : String? = nil, conference_recording_status_callback_event : Array(String)? = nil, conference_recording_status_callback_method : String? = nil, conference_status_callback : String? = nil, conference_status_callback_event : Array(String)? = nil, conference_status_callback_method : String? = nil, conference_trim : String? = nil, early_media : Bool? = nil, end_conference_on_exit : Bool? = nil, jitter_buffer_size : String? = nil, label : String? = nil, max_participants : Int32? = nil, muted : Bool? = nil, record : Bool? = nil, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, region : String? = nil, sip_auth_password : String? = nil, sip_auth_username : String? = nil, start_conference_on_enter : Bool? = nil, status_callback : String? = nil, status_callback_event : Array(String)? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, timeout : Int32? = nil, wait_method : String? = nil, wait_url : String? = nil)
      data, _status_code, _headers = create_participant_with_http_info(account_sid: account_sid, conference_sid: conference_sid, from: from, to: to, beep: beep, byoc: byoc, call_reason: call_reason, call_sid_to_coach: call_sid_to_coach, caller_id: caller_id, coaching: coaching, conference_record: conference_record, conference_recording_status_callback: conference_recording_status_callback, conference_recording_status_callback_event: conference_recording_status_callback_event, conference_recording_status_callback_method: conference_recording_status_callback_method, conference_status_callback: conference_status_callback, conference_status_callback_event: conference_status_callback_event, conference_status_callback_method: conference_status_callback_method, conference_trim: conference_trim, early_media: early_media, end_conference_on_exit: end_conference_on_exit, jitter_buffer_size: jitter_buffer_size, label: label, max_participants: max_participants, muted: muted, record: record, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, region: region, sip_auth_password: sip_auth_password, sip_auth_username: sip_auth_username, start_conference_on_enter: start_conference_on_enter, status_callback: status_callback, status_callback_event: status_callback_event, status_callback_method: status_callback_method, time_limit: time_limit, timeout: timeout, wait_method: wait_method, wait_url: wait_url)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param conference_sid [String] The SID of the participant's conference.
    # @param from [String] The phone number, Client identifier, or username portion of SIP address that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). Client identifiers are formatted `client:name`. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `from` must also be a phone number. If `to` is sip address, this value of `from` should be a username portion to be used to populate the P-Asserted-Identity header that is passed to the SIP endpoint.
    # @param to [String] The phone number, SIP address, or Client identifier that received this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `sip:name@company.com`. Client identifiers are formatted `client:name`. [Custom parameters](https://www.twilio.com/docs/voice/api/conference-participant-resource#custom-parameters) may also be specified.
    # @return [Array<(ConferenceParticipant, Integer, Hash)>] ConferenceParticipant data, response status code and response headers
    def create_participant_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, from : String, to : String, beep : String? = nil, byoc : String? = nil, call_reason : String? = nil, call_sid_to_coach : String? = nil, caller_id : String? = nil, coaching : Bool? = nil, conference_record : String? = nil, conference_recording_status_callback : String? = nil, conference_recording_status_callback_event : Array(String)? = nil, conference_recording_status_callback_method : String? = nil, conference_status_callback : String? = nil, conference_status_callback_event : Array(String)? = nil, conference_status_callback_method : String? = nil, conference_trim : String? = nil, early_media : Bool? = nil, end_conference_on_exit : Bool? = nil, jitter_buffer_size : String? = nil, label : String? = nil, max_participants : Int32? = nil, muted : Bool? = nil, record : Bool? = nil, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, region : String? = nil, sip_auth_password : String? = nil, sip_auth_username : String? = nil, start_conference_on_enter : Bool? = nil, status_callback : String? = nil, status_callback_event : Array(String)? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, timeout : Int32? = nil, wait_method : String? = nil, wait_url : String? = nil)
      request = build_api_request_for_create_participant(account_sid: account_sid, conference_sid: conference_sid, from: from, to: to, beep: beep, byoc: byoc, call_reason: call_reason, call_sid_to_coach: call_sid_to_coach, caller_id: caller_id, coaching: coaching, conference_record: conference_record, conference_recording_status_callback: conference_recording_status_callback, conference_recording_status_callback_event: conference_recording_status_callback_event, conference_recording_status_callback_method: conference_recording_status_callback_method, conference_status_callback: conference_status_callback, conference_status_callback_event: conference_status_callback_event, conference_status_callback_method: conference_status_callback_method, conference_trim: conference_trim, early_media: early_media, end_conference_on_exit: end_conference_on_exit, jitter_buffer_size: jitter_buffer_size, label: label, max_participants: max_participants, muted: muted, record: record, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, region: region, sip_auth_password: sip_auth_password, sip_auth_username: sip_auth_username, start_conference_on_enter: start_conference_on_enter, status_callback: status_callback, status_callback_event: status_callback_event, status_callback_method: status_callback_method, time_limit: time_limit, timeout: timeout, wait_method: wait_method, wait_url: wait_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_participant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ConferenceParticipant.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param conference_sid [String] The SID of the participant's conference.
    # @param from [String] The phone number, Client identifier, or username portion of SIP address that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). Client identifiers are formatted `client:name`. If using a phone number, it must be a Twilio number or a Verified [outgoing caller id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids) for your account. If the `to` parameter is a phone number, `from` must also be a phone number. If `to` is sip address, this value of `from` should be a username portion to be used to populate the P-Asserted-Identity header that is passed to the SIP endpoint.
    # @param to [String] The phone number, SIP address, or Client identifier that received this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `sip:name@company.com`. Client identifiers are formatted `client:name`. [Custom parameters](https://www.twilio.com/docs/voice/api/conference-participant-resource#custom-parameters) may also be specified.
    # @return nil
    def create_participant(*, account_sid : String = @account_sid, conference_sid : String, from : String, to : String, beep : String? = nil, byoc : String? = nil, call_reason : String? = nil, call_sid_to_coach : String? = nil, caller_id : String? = nil, coaching : Bool? = nil, conference_record : String? = nil, conference_recording_status_callback : String? = nil, conference_recording_status_callback_event : Array(String)? = nil, conference_recording_status_callback_method : String? = nil, conference_status_callback : String? = nil, conference_status_callback_event : Array(String)? = nil, conference_status_callback_method : String? = nil, conference_trim : String? = nil, early_media : Bool? = nil, end_conference_on_exit : Bool? = nil, jitter_buffer_size : String? = nil, label : String? = nil, max_participants : Int32? = nil, muted : Bool? = nil, record : Bool? = nil, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, region : String? = nil, sip_auth_password : String? = nil, sip_auth_username : String? = nil, start_conference_on_enter : Bool? = nil, status_callback : String? = nil, status_callback_event : Array(String)? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, timeout : Int32? = nil, wait_method : String? = nil, wait_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_participant(account_sid: account_sid, conference_sid: conference_sid, from: from, to: to, beep: beep, byoc: byoc, call_reason: call_reason, call_sid_to_coach: call_sid_to_coach, caller_id: caller_id, coaching: coaching, conference_record: conference_record, conference_recording_status_callback: conference_recording_status_callback, conference_recording_status_callback_event: conference_recording_status_callback_event, conference_recording_status_callback_method: conference_recording_status_callback_method, conference_status_callback: conference_status_callback, conference_status_callback_event: conference_status_callback_event, conference_status_callback_method: conference_status_callback_method, conference_trim: conference_trim, early_media: early_media, end_conference_on_exit: end_conference_on_exit, jitter_buffer_size: jitter_buffer_size, label: label, max_participants: max_participants, muted: muted, record: record, recording_channels: recording_channels, recording_status_callback: recording_status_callback, recording_status_callback_event: recording_status_callback_event, recording_status_callback_method: recording_status_callback_method, recording_track: recording_track, region: region, sip_auth_password: sip_auth_password, sip_auth_username: sip_auth_username, start_conference_on_enter: start_conference_on_enter, status_callback: status_callback, status_callback_event: status_callback_event, status_callback_method: status_callback_method, time_limit: time_limit, timeout: timeout, wait_method: wait_method, wait_url: wait_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_participant(*, account_sid : String = @account_sid, conference_sid : String, from : String, to : String, beep : String? = nil, byoc : String? = nil, call_reason : String? = nil, call_sid_to_coach : String? = nil, caller_id : String? = nil, coaching : Bool? = nil, conference_record : String? = nil, conference_recording_status_callback : String? = nil, conference_recording_status_callback_event : Array(String)? = nil, conference_recording_status_callback_method : String? = nil, conference_status_callback : String? = nil, conference_status_callback_event : Array(String)? = nil, conference_status_callback_method : String? = nil, conference_trim : String? = nil, early_media : Bool? = nil, end_conference_on_exit : Bool? = nil, jitter_buffer_size : String? = nil, label : String? = nil, max_participants : Int32? = nil, muted : Bool? = nil, record : Bool? = nil, recording_channels : String? = nil, recording_status_callback : String? = nil, recording_status_callback_event : Array(String)? = nil, recording_status_callback_method : String? = nil, recording_track : String? = nil, region : String? = nil, sip_auth_password : String? = nil, sip_auth_username : String? = nil, start_conference_on_enter : Bool? = nil, status_callback : String? = nil, status_callback_event : Array(String)? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, timeout : Int32? = nil, wait_method : String? = nil, wait_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_participant ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_participant, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !byoc.nil? && byoc.to_s.size > 34
        raise ArgumentError.new("invalid value for \"byoc\" when calling DefaultApi.create_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !byoc.nil? && byoc.to_s.size < 34
        raise ArgumentError.new("invalid value for \"byoc\" when calling DefaultApi.create_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^BY[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !byoc.nil? && byoc !~ pattern
        raise ArgumentError.new("invalid value for \"byoc\" when calling DefaultApi.create_participant, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !call_sid_to_coach.nil? && call_sid_to_coach.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid_to_coach\" when calling DefaultApi.create_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !call_sid_to_coach.nil? && call_sid_to_coach.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid_to_coach\" when calling DefaultApi.create_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !call_sid_to_coach.nil? && call_sid_to_coach !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid_to_coach\" when calling DefaultApi.create_participant, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !conference_recording_status_callback_method.nil? && !allowable_values.includes?(conference_recording_status_callback_method)
        raise ArgumentError.new("invalid value for \"conference_recording_status_callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !conference_status_callback_method.nil? && !allowable_values.includes?(conference_status_callback_method)
        raise ArgumentError.new("invalid value for \"conference_status_callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !recording_status_callback_method.nil? && !allowable_values.includes?(recording_status_callback_method)
        raise ArgumentError.new("invalid value for \"recording_status_callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !wait_method.nil? && !allowable_values.includes?(wait_method)
        raise ArgumentError.new("invalid value for \"wait_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Beep"] = beep.to_s if !beep.nil?
      form_params["Byoc"] = byoc.to_s if !byoc.nil?
      form_params["CallReason"] = call_reason.to_s if !call_reason.nil?
      form_params["CallSidToCoach"] = call_sid_to_coach.to_s if !call_sid_to_coach.nil?
      form_params["CallerId"] = caller_id.to_s if !caller_id.nil?
      form_params["Coaching"] = coaching.to_s if !coaching.nil?
      form_params["ConferenceRecord"] = conference_record.to_s if !conference_record.nil?
      form_params["ConferenceRecordingStatusCallback"] = conference_recording_status_callback.to_s if !conference_recording_status_callback.nil?
      form_params["ConferenceRecordingStatusCallbackEvent"] = @api_client.build_collection_param(conference_recording_status_callback_event, "multi") if !conference_recording_status_callback_event.nil? && !conference_recording_status_callback_event.empty?
      form_params["ConferenceRecordingStatusCallbackMethod"] = conference_recording_status_callback_method.to_s if !conference_recording_status_callback_method.nil?
      form_params["ConferenceStatusCallback"] = conference_status_callback.to_s if !conference_status_callback.nil?
      form_params["ConferenceStatusCallbackEvent"] = @api_client.build_collection_param(conference_status_callback_event, "multi") if !conference_status_callback_event.nil? && !conference_status_callback_event.empty?
      form_params["ConferenceStatusCallbackMethod"] = conference_status_callback_method.to_s if !conference_status_callback_method.nil?
      form_params["ConferenceTrim"] = conference_trim.to_s if !conference_trim.nil?
      form_params["EarlyMedia"] = early_media.to_s if !early_media.nil?
      form_params["EndConferenceOnExit"] = end_conference_on_exit.to_s if !end_conference_on_exit.nil?
      form_params["From"] = from.to_s if !from.nil?
      form_params["JitterBufferSize"] = jitter_buffer_size.to_s if !jitter_buffer_size.nil?
      form_params["Label"] = label.to_s if !label.nil?
      form_params["MaxParticipants"] = max_participants.to_s if !max_participants.nil?
      form_params["Muted"] = muted.to_s if !muted.nil?
      form_params["Record"] = record.to_s if !record.nil?
      form_params["RecordingChannels"] = recording_channels.to_s if !recording_channels.nil?
      form_params["RecordingStatusCallback"] = recording_status_callback.to_s if !recording_status_callback.nil?
      form_params["RecordingStatusCallbackEvent"] = @api_client.build_collection_param(recording_status_callback_event, "multi") if !recording_status_callback_event.nil? && !recording_status_callback_event.empty?
      form_params["RecordingStatusCallbackMethod"] = recording_status_callback_method.to_s if !recording_status_callback_method.nil?
      form_params["RecordingTrack"] = recording_track.to_s if !recording_track.nil?
      form_params["Region"] = region.to_s if !region.nil?
      form_params["SipAuthPassword"] = sip_auth_password.to_s if !sip_auth_password.nil?
      form_params["SipAuthUsername"] = sip_auth_username.to_s if !sip_auth_username.nil?
      form_params["StartConferenceOnEnter"] = start_conference_on_enter.to_s if !start_conference_on_enter.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackEvent"] = @api_client.build_collection_param(status_callback_event, "multi") if !status_callback_event.nil? && !status_callback_event.empty?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["TimeLimit"] = time_limit.to_s if !time_limit.nil?
      form_params["Timeout"] = timeout.to_s if !timeout.nil?
      form_params["To"] = to.to_s if !to.nil?
      form_params["WaitMethod"] = wait_method.to_s if !wait_method.nil?
      form_params["WaitUrl"] = wait_url.to_s if !wait_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_participant",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # create an instance of payments. This will start a new payments session
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param call_sid [String] The SID of the call that will create the resource. Call leg associated with this sid is expected to provide payment information thru DTMF.
    # @param idempotency_key [String] A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.
    # @param status_callback [String] Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [expected StatusCallback values](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback)
    # @return [CallPayments]
    def create_payments(*, account_sid : String = @account_sid, call_sid : String, idempotency_key : String, status_callback : String, bank_account_type : String? = nil, charge_amount : Float64? = nil, currency : String? = nil, description : String? = nil, input : String? = nil, min_postal_code_length : Int32? = nil, parameter : String? = nil, payment_connector : String? = nil, payment_method : String? = nil, postal_code : Bool? = nil, security_code : Bool? = nil, timeout : Int32? = nil, token_type : String? = nil, valid_card_types : String? = nil)
      data, _status_code, _headers = create_payments_with_http_info(account_sid: account_sid, call_sid: call_sid, idempotency_key: idempotency_key, status_callback: status_callback, bank_account_type: bank_account_type, charge_amount: charge_amount, currency: currency, description: description, input: input, min_postal_code_length: min_postal_code_length, parameter: parameter, payment_connector: payment_connector, payment_method: payment_method, postal_code: postal_code, security_code: security_code, timeout: timeout, token_type: token_type, valid_card_types: valid_card_types)
      data
    end

    # create an instance of payments. This will start a new payments session
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param call_sid [String] The SID of the call that will create the resource. Call leg associated with this sid is expected to provide payment information thru DTMF.
    # @param idempotency_key [String] A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.
    # @param status_callback [String] Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [expected StatusCallback values](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback)
    # @return [Array<(CallPayments, Integer, Hash)>] CallPayments data, response status code and response headers
    def create_payments_with_http_info(*, account_sid : String = @account_sid, call_sid : String, idempotency_key : String, status_callback : String, bank_account_type : String? = nil, charge_amount : Float64? = nil, currency : String? = nil, description : String? = nil, input : String? = nil, min_postal_code_length : Int32? = nil, parameter : String? = nil, payment_connector : String? = nil, payment_method : String? = nil, postal_code : Bool? = nil, security_code : Bool? = nil, timeout : Int32? = nil, token_type : String? = nil, valid_card_types : String? = nil)
      request = build_api_request_for_create_payments(account_sid: account_sid, call_sid: call_sid, idempotency_key: idempotency_key, status_callback: status_callback, bank_account_type: bank_account_type, charge_amount: charge_amount, currency: currency, description: description, input: input, min_postal_code_length: min_postal_code_length, parameter: parameter, payment_connector: payment_connector, payment_method: payment_method, postal_code: postal_code, security_code: security_code, timeout: timeout, token_type: token_type, valid_card_types: valid_card_types)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_payments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallPayments.from_json(data), status_code, headers
    end

    # create an instance of payments. This will start a new payments session
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param call_sid [String] The SID of the call that will create the resource. Call leg associated with this sid is expected to provide payment information thru DTMF.
    # @param idempotency_key [String] A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.
    # @param status_callback [String] Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [expected StatusCallback values](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback)
    # @return nil
    def create_payments(*, account_sid : String = @account_sid, call_sid : String, idempotency_key : String, status_callback : String, bank_account_type : String? = nil, charge_amount : Float64? = nil, currency : String? = nil, description : String? = nil, input : String? = nil, min_postal_code_length : Int32? = nil, parameter : String? = nil, payment_connector : String? = nil, payment_method : String? = nil, postal_code : Bool? = nil, security_code : Bool? = nil, timeout : Int32? = nil, token_type : String? = nil, valid_card_types : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_payments(account_sid: account_sid, call_sid: call_sid, idempotency_key: idempotency_key, status_callback: status_callback, bank_account_type: bank_account_type, charge_amount: charge_amount, currency: currency, description: description, input: input, min_postal_code_length: min_postal_code_length, parameter: parameter, payment_connector: payment_connector, payment_method: payment_method, postal_code: postal_code, security_code: security_code, timeout: timeout, token_type: token_type, valid_card_types: valid_card_types).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_payments(*, account_sid : String = @account_sid, call_sid : String, idempotency_key : String, status_callback : String, bank_account_type : String? = nil, charge_amount : Float64? = nil, currency : String? = nil, description : String? = nil, input : String? = nil, min_postal_code_length : Int32? = nil, parameter : String? = nil, payment_connector : String? = nil, payment_method : String? = nil, postal_code : Bool? = nil, security_code : Bool? = nil, timeout : Int32? = nil, token_type : String? = nil, valid_card_types : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_payments ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_payments, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_payments, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_payments, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.create_payments, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.create_payments, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.create_payments, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["consumer-checking", "consumer-savings", "commercial-checking"]
      if @api_client.config.client_side_validation && !bank_account_type.nil? && !allowable_values.includes?(bank_account_type)
        raise ArgumentError.new("invalid value for \"bank_account_type\", must be one of #{allowable_values}")
      end
      allowable_values = ["credit-card", "ach-debit"]
      if @api_client.config.client_side_validation && !payment_method.nil? && !allowable_values.includes?(payment_method)
        raise ArgumentError.new("invalid value for \"payment_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["one-time", "reusable"]
      if @api_client.config.client_side_validation && !token_type.nil? && !allowable_values.includes?(token_type)
        raise ArgumentError.new("invalid value for \"token_type\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Payments.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["BankAccountType"] = bank_account_type.to_s if !bank_account_type.nil?
      form_params["ChargeAmount"] = charge_amount.to_s if !charge_amount.nil?
      form_params["Currency"] = currency.to_s if !currency.nil?
      form_params["Description"] = description.to_s if !description.nil?
      form_params["IdempotencyKey"] = idempotency_key.to_s if !idempotency_key.nil?
      form_params["Input"] = input.to_s if !input.nil?
      form_params["MinPostalCodeLength"] = min_postal_code_length.to_s if !min_postal_code_length.nil?
      form_params["Parameter"] = parameter.to_s if !parameter.nil?
      form_params["PaymentConnector"] = payment_connector.to_s if !payment_connector.nil?
      form_params["PaymentMethod"] = payment_method.to_s if !payment_method.nil?
      form_params["PostalCode"] = postal_code.to_s if !postal_code.nil?
      form_params["SecurityCode"] = security_code.to_s if !security_code.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["Timeout"] = timeout.to_s if !timeout.nil?
      form_params["TokenType"] = token_type.to_s if !token_type.nil?
      form_params["ValidCardTypes"] = valid_card_types.to_s if !valid_card_types.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_payments",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param friendly_name [String] A descriptive string that you created to describe this resource. It can be up to 64 characters long.
    # @return [Queue]
    def create_queue(*, account_sid : String = @account_sid, friendly_name : String, max_size : Int32? = nil)
      data, _status_code, _headers = create_queue_with_http_info(account_sid: account_sid, friendly_name: friendly_name, max_size: max_size)
      data
    end

    # Create a queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param friendly_name [String] A descriptive string that you created to describe this resource. It can be up to 64 characters long.
    # @return [Array<(Queue, Integer, Hash)>] Queue data, response status code and response headers
    def create_queue_with_http_info(*, account_sid : String = @account_sid, friendly_name : String, max_size : Int32? = nil)
      request = build_api_request_for_create_queue(account_sid: account_sid, friendly_name: friendly_name, max_size: max_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Queue.from_json(data), status_code, headers
    end

    # Create a queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param friendly_name [String] A descriptive string that you created to describe this resource. It can be up to 64 characters long.
    # @return nil
    def create_queue(*, account_sid : String = @account_sid, friendly_name : String, max_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_create_queue(account_sid: account_sid, friendly_name: friendly_name, max_size: max_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_queue(*, account_sid : String = @account_sid, friendly_name : String, max_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_queue ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_queue, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_queue, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_queue, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Queues.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["MaxSize"] = max_size.to_s if !max_size.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_queue",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new credential list mapping resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param credential_list_sid [String] The SID of the CredentialList resource to map to the SIP domain.
    # @return [SipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping]
    def create_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String)
      data, _status_code, _headers = create_sip_auth_calls_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid)
      data
    end

    # Create a new credential list mapping resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param credential_list_sid [String] The SID of the CredentialList resource to map to the SIP domain.
    # @return [Array<(SipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping, Integer, Hash)>] SipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping data, response status code and response headers
    def create_sip_auth_calls_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String)
      request = build_api_request_for_create_sip_auth_calls_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_auth_calls_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping.from_json(data), status_code, headers
    end

    # Create a new credential list mapping resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param credential_list_sid [String] The SID of the CredentialList resource to map to the SIP domain.
    # @return nil
    def create_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String, &block : Crest::Response ->)
      build_api_request_for_create_sip_auth_calls_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_auth_calls_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && credential_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["CredentialListSid"] = credential_list_sid.to_s if !credential_list_sid.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_auth_calls_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new IP Access Control List mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param ip_access_control_list_sid [String] The SID of the IpAccessControlList resource to map to the SIP domain.
    # @return [SipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping]
    def create_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, ip_access_control_list_sid : String)
      data, _status_code, _headers = create_sip_auth_calls_ip_access_control_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, ip_access_control_list_sid: ip_access_control_list_sid)
      data
    end

    # Create a new IP Access Control List mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param ip_access_control_list_sid [String] The SID of the IpAccessControlList resource to map to the SIP domain.
    # @return [Array<(SipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping, Integer, Hash)>] SipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping data, response status code and response headers
    def create_sip_auth_calls_ip_access_control_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, ip_access_control_list_sid : String)
      request = build_api_request_for_create_sip_auth_calls_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, ip_access_control_list_sid: ip_access_control_list_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_auth_calls_ip_access_control_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping.from_json(data), status_code, headers
    end

    # Create a new IP Access Control List mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param ip_access_control_list_sid [String] The SID of the IpAccessControlList resource to map to the SIP domain.
    # @return nil
    def create_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, ip_access_control_list_sid : String, &block : Crest::Response ->)
      build_api_request_for_create_sip_auth_calls_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, ip_access_control_list_sid: ip_access_control_list_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, ip_access_control_list_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && ip_access_control_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["IpAccessControlListSid"] = ip_access_control_list_sid.to_s if !ip_access_control_list_sid.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_auth_calls_ip_access_control_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new credential list mapping resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param credential_list_sid [String] The SID of the CredentialList resource to map to the SIP domain.
    # @return [SipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping]
    def create_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String)
      data, _status_code, _headers = create_sip_auth_registrations_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid)
      data
    end

    # Create a new credential list mapping resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param credential_list_sid [String] The SID of the CredentialList resource to map to the SIP domain.
    # @return [Array<(SipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping, Integer, Hash)>] SipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping data, response status code and response headers
    def create_sip_auth_registrations_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String)
      request = build_api_request_for_create_sip_auth_registrations_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_auth_registrations_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping.from_json(data), status_code, headers
    end

    # Create a new credential list mapping resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_sid [String] The SID of the SIP domain that will contain the new resource.
    # @param credential_list_sid [String] The SID of the CredentialList resource to map to the SIP domain.
    # @return nil
    def create_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String, &block : Crest::Response ->)
      build_api_request_for_create_sip_auth_registrations_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_auth_registrations_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && credential_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["CredentialListSid"] = credential_list_sid.to_s if !credential_list_sid.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_auth_registrations_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list to include the created credential.
    # @param password [String] The password that the username will use when authenticating SIP requests. The password must be a minimum of 12 characters, contain at least 1 digit, and have mixed case. (eg `IWasAtSignal2018`)
    # @param username [String] The username that will be passed when authenticating SIP requests. The username should be sent in response to Twilio's challenge of the initial INVITE. It can be up to 32 characters long.
    # @return [SipSipCredentialListSipCredential]
    def create_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, password : String, username : String)
      data, _status_code, _headers = create_sip_credential_with_http_info(account_sid: account_sid, credential_list_sid: credential_list_sid, password: password, username: username)
      data
    end

    # Create a new credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list to include the created credential.
    # @param password [String] The password that the username will use when authenticating SIP requests. The password must be a minimum of 12 characters, contain at least 1 digit, and have mixed case. (eg `IWasAtSignal2018`)
    # @param username [String] The username that will be passed when authenticating SIP requests. The username should be sent in response to Twilio's challenge of the initial INVITE. It can be up to 32 characters long.
    # @return [Array<(SipSipCredentialListSipCredential, Integer, Hash)>] SipSipCredentialListSipCredential data, response status code and response headers
    def create_sip_credential_with_http_info(*, account_sid : String = @account_sid, credential_list_sid : String, password : String, username : String)
      request = build_api_request_for_create_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, password: password, username: username)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipCredentialListSipCredential.from_json(data), status_code, headers
    end

    # Create a new credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list to include the created credential.
    # @param password [String] The password that the username will use when authenticating SIP requests. The password must be a minimum of 12 characters, contain at least 1 digit, and have mixed case. (eg `IWasAtSignal2018`)
    # @param username [String] The username that will be passed when authenticating SIP requests. The username should be sent in response to Twilio's challenge of the initial INVITE. It can be up to 32 characters long.
    # @return nil
    def create_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, password : String, username : String, &block : Crest::Response ->)
      build_api_request_for_create_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, password: password, username: username).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, password : String, username : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_credential ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && credential_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_credential, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CredentialListSid" + "}", URI.encode_path(credential_list_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Password"] = password.to_s if !password.nil?
      form_params["Username"] = username.to_s if !username.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_credential",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param friendly_name [String] A human readable descriptive text that describes the CredentialList, up to 64 characters long.
    # @return [SipSipCredentialList]
    def create_sip_credential_list(*, account_sid : String = @account_sid, friendly_name : String)
      data, _status_code, _headers = create_sip_credential_list_with_http_info(account_sid: account_sid, friendly_name: friendly_name)
      data
    end

    # Create a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param friendly_name [String] A human readable descriptive text that describes the CredentialList, up to 64 characters long.
    # @return [Array<(SipSipCredentialList, Integer, Hash)>] SipSipCredentialList data, response status code and response headers
    def create_sip_credential_list_with_http_info(*, account_sid : String = @account_sid, friendly_name : String)
      request = build_api_request_for_create_sip_credential_list(account_sid: account_sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_credential_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipCredentialList.from_json(data), status_code, headers
    end

    # Create a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param friendly_name [String] A human readable descriptive text that describes the CredentialList, up to 64 characters long.
    # @return nil
    def create_sip_credential_list(*, account_sid : String = @account_sid, friendly_name : String, &block : Crest::Response ->)
      build_api_request_for_create_sip_credential_list(account_sid: account_sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_credential_list(*, account_sid : String = @account_sid, friendly_name : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_credential_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_credential_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a CredentialListMapping resource for an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain for which the CredentialList resource will be mapped.
    # @param credential_list_sid [String] A 34 character string that uniquely identifies the CredentialList resource to map to the SIP domain.
    # @return [SipSipDomainSipCredentialListMapping]
    def create_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String)
      data, _status_code, _headers = create_sip_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid)
      data
    end

    # Create a CredentialListMapping resource for an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain for which the CredentialList resource will be mapped.
    # @param credential_list_sid [String] A 34 character string that uniquely identifies the CredentialList resource to map to the SIP domain.
    # @return [Array<(SipSipDomainSipCredentialListMapping, Integer, Hash)>] SipSipDomainSipCredentialListMapping data, response status code and response headers
    def create_sip_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String)
      request = build_api_request_for_create_sip_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipCredentialListMapping.from_json(data), status_code, headers
    end

    # Create a CredentialListMapping resource for an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain for which the CredentialList resource will be mapped.
    # @param credential_list_sid [String] A 34 character string that uniquely identifies the CredentialList resource to map to the SIP domain.
    # @return nil
    def create_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String, &block : Crest::Response ->)
      build_api_request_for_create_sip_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, credential_list_sid: credential_list_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, credential_list_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && credential_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.create_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["CredentialListSid"] = credential_list_sid.to_s if !credential_list_sid.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_name [String] The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \\\"-\\\" and must end with `sip.twilio.com`.
    # @return [SipSipDomain]
    def create_sip_domain(*, account_sid : String = @account_sid, domain_name : String, byoc_trunk_sid : String? = nil, emergency_caller_sid : String? = nil, emergency_calling_enabled : Bool? = nil, friendly_name : String? = nil, secure : Bool? = nil, sip_registration : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_status_callback_method : String? = nil, voice_status_callback_url : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = create_sip_domain_with_http_info(account_sid: account_sid, domain_name: domain_name, byoc_trunk_sid: byoc_trunk_sid, emergency_caller_sid: emergency_caller_sid, emergency_calling_enabled: emergency_calling_enabled, friendly_name: friendly_name, secure: secure, sip_registration: sip_registration, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_status_callback_method: voice_status_callback_method, voice_status_callback_url: voice_status_callback_url, voice_url: voice_url)
      data
    end

    # Create a new Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_name [String] The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \\\"-\\\" and must end with `sip.twilio.com`.
    # @return [Array<(SipSipDomain, Integer, Hash)>] SipSipDomain data, response status code and response headers
    def create_sip_domain_with_http_info(*, account_sid : String = @account_sid, domain_name : String, byoc_trunk_sid : String? = nil, emergency_caller_sid : String? = nil, emergency_calling_enabled : Bool? = nil, friendly_name : String? = nil, secure : Bool? = nil, sip_registration : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_status_callback_method : String? = nil, voice_status_callback_url : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_create_sip_domain(account_sid: account_sid, domain_name: domain_name, byoc_trunk_sid: byoc_trunk_sid, emergency_caller_sid: emergency_caller_sid, emergency_calling_enabled: emergency_calling_enabled, friendly_name: friendly_name, secure: secure, sip_registration: sip_registration, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_status_callback_method: voice_status_callback_method, voice_status_callback_url: voice_status_callback_url, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomain.from_json(data), status_code, headers
    end

    # Create a new Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param domain_name [String] The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \\\"-\\\" and must end with `sip.twilio.com`.
    # @return nil
    def create_sip_domain(*, account_sid : String = @account_sid, domain_name : String, byoc_trunk_sid : String? = nil, emergency_caller_sid : String? = nil, emergency_calling_enabled : Bool? = nil, friendly_name : String? = nil, secure : Bool? = nil, sip_registration : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_status_callback_method : String? = nil, voice_status_callback_url : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_sip_domain(account_sid: account_sid, domain_name: domain_name, byoc_trunk_sid: byoc_trunk_sid, emergency_caller_sid: emergency_caller_sid, emergency_calling_enabled: emergency_calling_enabled, friendly_name: friendly_name, secure: secure, sip_registration: sip_registration, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_status_callback_method: voice_status_callback_method, voice_status_callback_url: voice_status_callback_url, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_domain(*, account_sid : String = @account_sid, domain_name : String, byoc_trunk_sid : String? = nil, emergency_caller_sid : String? = nil, emergency_calling_enabled : Bool? = nil, friendly_name : String? = nil, secure : Bool? = nil, sip_registration : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_status_callback_method : String? = nil, voice_status_callback_url : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_domain ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_domain, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !byoc_trunk_sid.nil? && byoc_trunk_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"byoc_trunk_sid\" when calling DefaultApi.create_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !byoc_trunk_sid.nil? && byoc_trunk_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"byoc_trunk_sid\" when calling DefaultApi.create_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^BY[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !byoc_trunk_sid.nil? && byoc_trunk_sid !~ pattern
        raise ArgumentError.new("invalid value for \"byoc_trunk_sid\" when calling DefaultApi.create_sip_domain, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !emergency_caller_sid.nil? && emergency_caller_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"emergency_caller_sid\" when calling DefaultApi.create_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !emergency_caller_sid.nil? && emergency_caller_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"emergency_caller_sid\" when calling DefaultApi.create_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !emergency_caller_sid.nil? && emergency_caller_sid !~ pattern
        raise ArgumentError.new("invalid value for \"emergency_caller_sid\" when calling DefaultApi.create_sip_domain, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_status_callback_method.nil? && !allowable_values.includes?(voice_status_callback_method)
        raise ArgumentError.new("invalid value for \"voice_status_callback_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["ByocTrunkSid"] = byoc_trunk_sid.to_s if !byoc_trunk_sid.nil?
      form_params["DomainName"] = domain_name.to_s if !domain_name.nil?
      form_params["EmergencyCallerSid"] = emergency_caller_sid.to_s if !emergency_caller_sid.nil?
      form_params["EmergencyCallingEnabled"] = emergency_calling_enabled.to_s if !emergency_calling_enabled.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["Secure"] = secure.to_s if !secure.nil?
      form_params["SipRegistration"] = sip_registration.to_s if !sip_registration.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceStatusCallbackMethod"] = voice_status_callback_method.to_s if !voice_status_callback_method.nil?
      form_params["VoiceStatusCallbackUrl"] = voice_status_callback_url.to_s if !voice_status_callback_url.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_domain",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new IpAccessControlList resource
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param friendly_name [String] A human readable descriptive text that describes the IpAccessControlList, up to 64 characters long.
    # @return [SipSipIpAccessControlList]
    def create_sip_ip_access_control_list(*, account_sid : String = @account_sid, friendly_name : String)
      data, _status_code, _headers = create_sip_ip_access_control_list_with_http_info(account_sid: account_sid, friendly_name: friendly_name)
      data
    end

    # Create a new IpAccessControlList resource
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param friendly_name [String] A human readable descriptive text that describes the IpAccessControlList, up to 64 characters long.
    # @return [Array<(SipSipIpAccessControlList, Integer, Hash)>] SipSipIpAccessControlList data, response status code and response headers
    def create_sip_ip_access_control_list_with_http_info(*, account_sid : String = @account_sid, friendly_name : String)
      request = build_api_request_for_create_sip_ip_access_control_list(account_sid: account_sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_ip_access_control_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipIpAccessControlList.from_json(data), status_code, headers
    end

    # Create a new IpAccessControlList resource
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param friendly_name [String] A human readable descriptive text that describes the IpAccessControlList, up to 64 characters long.
    # @return nil
    def create_sip_ip_access_control_list(*, account_sid : String = @account_sid, friendly_name : String, &block : Crest::Response ->)
      build_api_request_for_create_sip_ip_access_control_list(account_sid: account_sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_ip_access_control_list(*, account_sid : String = @account_sid, friendly_name : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_ip_access_control_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_access_control_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_access_control_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_access_control_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_ip_access_control_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param ip_access_control_list_sid [String] The unique id of the IP access control list to map to the SIP domain.
    # @return [SipSipDomainSipIpAccessControlListMapping]
    def create_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, ip_access_control_list_sid : String)
      data, _status_code, _headers = create_sip_ip_access_control_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, ip_access_control_list_sid: ip_access_control_list_sid)
      data
    end

    # Create a new IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param ip_access_control_list_sid [String] The unique id of the IP access control list to map to the SIP domain.
    # @return [Array<(SipSipDomainSipIpAccessControlListMapping, Integer, Hash)>] SipSipDomainSipIpAccessControlListMapping data, response status code and response headers
    def create_sip_ip_access_control_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, ip_access_control_list_sid : String)
      request = build_api_request_for_create_sip_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, ip_access_control_list_sid: ip_access_control_list_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_ip_access_control_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipIpAccessControlListMapping.from_json(data), status_code, headers
    end

    # Create a new IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param ip_access_control_list_sid [String] The unique id of the IP access control list to map to the SIP domain.
    # @return nil
    def create_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, ip_access_control_list_sid : String, &block : Crest::Response ->)
      build_api_request_for_create_sip_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, ip_access_control_list_sid: ip_access_control_list_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, ip_access_control_list_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_ip_access_control_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && ip_access_control_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["IpAccessControlListSid"] = ip_access_control_list_sid.to_s if !ip_access_control_list_sid.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_ip_access_control_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid with which to associate the created IpAddress resource.
    # @param friendly_name [String] A human readable descriptive text for this resource, up to 64 characters long.
    # @param ip_address [String] An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.
    # @return [SipSipIpAccessControlListSipIpAddress]
    def create_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, friendly_name : String, ip_address : String, cidr_prefix_length : Int32? = nil)
      data, _status_code, _headers = create_sip_ip_address_with_http_info(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, friendly_name: friendly_name, ip_address: ip_address, cidr_prefix_length: cidr_prefix_length)
      data
    end

    # Create a new IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid with which to associate the created IpAddress resource.
    # @param friendly_name [String] A human readable descriptive text for this resource, up to 64 characters long.
    # @param ip_address [String] An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.
    # @return [Array<(SipSipIpAccessControlListSipIpAddress, Integer, Hash)>] SipSipIpAccessControlListSipIpAddress data, response status code and response headers
    def create_sip_ip_address_with_http_info(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, friendly_name : String, ip_address : String, cidr_prefix_length : Int32? = nil)
      request = build_api_request_for_create_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, friendly_name: friendly_name, ip_address: ip_address, cidr_prefix_length: cidr_prefix_length)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_sip_ip_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipIpAccessControlListSipIpAddress.from_json(data), status_code, headers
    end

    # Create a new IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid with which to associate the created IpAddress resource.
    # @param friendly_name [String] A human readable descriptive text for this resource, up to 64 characters long.
    # @param ip_address [String] An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.
    # @return nil
    def create_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, friendly_name : String, ip_address : String, cidr_prefix_length : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_create_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, friendly_name: friendly_name, ip_address: ip_address, cidr_prefix_length: cidr_prefix_length).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, friendly_name : String, ip_address : String, cidr_prefix_length : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_sip_ip_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && ip_access_control_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.create_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "IpAccessControlListSid" + "}", URI.encode_path(ip_access_control_list_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["CidrPrefixLength"] = cidr_prefix_length.to_s if !cidr_prefix_length.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["IpAddress"] = ip_address.to_s if !ip_address.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_sip_ip_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new token for ICE servers
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return [Token]
    def create_token(*, account_sid : String = @account_sid, ttl : Int32? = nil)
      data, _status_code, _headers = create_token_with_http_info(account_sid: account_sid, ttl: ttl)
      data
    end

    # Create a new token for ICE servers
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return [Array<(Token, Integer, Hash)>] Token data, response status code and response headers
    def create_token_with_http_info(*, account_sid : String = @account_sid, ttl : Int32? = nil)
      request = build_api_request_for_create_token(account_sid: account_sid, ttl: ttl)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_token\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Token.from_json(data), status_code, headers
    end

    # Create a new token for ICE servers
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @return nil
    def create_token(*, account_sid : String = @account_sid, ttl : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_create_token(account_sid: account_sid, ttl: ttl).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_token(*, account_sid : String = @account_sid, ttl : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_token ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_token, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_token, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_token, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Tokens.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Ttl"] = ttl.to_s if !ttl.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_token",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Create a new UsageTrigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param callback_url [String] The URL we should call using `callback_method` when the trigger fires.
    # @param trigger_value [String] The usage value at which the trigger should fire.  For convenience, you can use an offset value such as `+30` to specify a trigger_value that is 30 units more than the current usage value. Be sure to urlencode a `+` as `%2B`.
    # @param usage_category [String] The usage category that the trigger should watch.  Use one of the supported [usage categories](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) for this value.
    # @return [UsageUsageTrigger]
    def create_usage_trigger(*, account_sid : String = @account_sid, callback_url : String, trigger_value : String, usage_category : String, callback_method : String? = nil, friendly_name : String? = nil, recurring : String? = nil, trigger_by : String? = nil)
      data, _status_code, _headers = create_usage_trigger_with_http_info(account_sid: account_sid, callback_url: callback_url, trigger_value: trigger_value, usage_category: usage_category, callback_method: callback_method, friendly_name: friendly_name, recurring: recurring, trigger_by: trigger_by)
      data
    end

    # Create a new UsageTrigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param callback_url [String] The URL we should call using `callback_method` when the trigger fires.
    # @param trigger_value [String] The usage value at which the trigger should fire.  For convenience, you can use an offset value such as `+30` to specify a trigger_value that is 30 units more than the current usage value. Be sure to urlencode a `+` as `%2B`.
    # @param usage_category [String] The usage category that the trigger should watch.  Use one of the supported [usage categories](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) for this value.
    # @return [Array<(UsageUsageTrigger, Integer, Hash)>] UsageUsageTrigger data, response status code and response headers
    def create_usage_trigger_with_http_info(*, account_sid : String = @account_sid, callback_url : String, trigger_value : String, usage_category : String, callback_method : String? = nil, friendly_name : String? = nil, recurring : String? = nil, trigger_by : String? = nil)
      request = build_api_request_for_create_usage_trigger(account_sid: account_sid, callback_url: callback_url, trigger_value: trigger_value, usage_category: usage_category, callback_method: callback_method, friendly_name: friendly_name, recurring: recurring, trigger_by: trigger_by)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_usage_trigger\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return UsageUsageTrigger.from_json(data), status_code, headers
    end

    # Create a new UsageTrigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @param callback_url [String] The URL we should call using `callback_method` when the trigger fires.
    # @param trigger_value [String] The usage value at which the trigger should fire.  For convenience, you can use an offset value such as `+30` to specify a trigger_value that is 30 units more than the current usage value. Be sure to urlencode a `+` as `%2B`.
    # @param usage_category [String] The usage category that the trigger should watch.  Use one of the supported [usage categories](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) for this value.
    # @return nil
    def create_usage_trigger(*, account_sid : String = @account_sid, callback_url : String, trigger_value : String, usage_category : String, callback_method : String? = nil, friendly_name : String? = nil, recurring : String? = nil, trigger_by : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_usage_trigger(account_sid: account_sid, callback_url: callback_url, trigger_value: trigger_value, usage_category: usage_category, callback_method: callback_method, friendly_name: friendly_name, recurring: recurring, trigger_by: trigger_by).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_usage_trigger(*, account_sid : String = @account_sid, callback_url : String, trigger_value : String, usage_category : String, callback_method : String? = nil, friendly_name : String? = nil, recurring : String? = nil, trigger_by : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_usage_trigger ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_usage_trigger, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_usage_trigger, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_usage_trigger, must conform to the pattern #{pattern}.")
      end

      # verify enum value
      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !allowable_values.includes?(usage_category)
        raise ArgumentError.new("invalid value for \"usage_category\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !callback_method.nil? && !allowable_values.includes?(callback_method)
        raise ArgumentError.new("invalid value for \"callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["daily", "monthly", "yearly", "alltime"]
      if @api_client.config.client_side_validation && !recurring.nil? && !allowable_values.includes?(recurring)
        raise ArgumentError.new("invalid value for \"recurring\", must be one of #{allowable_values}")
      end
      allowable_values = ["count", "usage", "price"]
      if @api_client.config.client_side_validation && !trigger_by.nil? && !allowable_values.includes?(trigger_by)
        raise ArgumentError.new("invalid value for \"trigger_by\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["CallbackMethod"] = callback_method.to_s if !callback_method.nil?
      form_params["CallbackUrl"] = callback_url.to_s if !callback_url.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["Recurring"] = recurring.to_s if !recurring.nil?
      form_params["TriggerBy"] = trigger_by.to_s if !trigger_by.nil?
      form_params["TriggerValue"] = trigger_value.to_s if !trigger_value.nil?
      form_params["UsageCategory"] = usage_category.to_s if !usage_category.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_usage_trigger",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for the new caller ID resource.
    # @param phone_number [String] The phone number to verify in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
    # @return [ValidationRequest]
    def create_validation_request(*, account_sid : String = @account_sid, phone_number : String, call_delay : Int32? = nil, extension : String? = nil, friendly_name : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil)
      data, _status_code, _headers = create_validation_request_with_http_info(account_sid: account_sid, phone_number: phone_number, call_delay: call_delay, extension: extension, friendly_name: friendly_name, status_callback: status_callback, status_callback_method: status_callback_method)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for the new caller ID resource.
    # @param phone_number [String] The phone number to verify in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
    # @return [Array<(ValidationRequest, Integer, Hash)>] ValidationRequest data, response status code and response headers
    def create_validation_request_with_http_info(*, account_sid : String = @account_sid, phone_number : String, call_delay : Int32? = nil, extension : String? = nil, friendly_name : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil)
      request = build_api_request_for_create_validation_request(account_sid: account_sid, phone_number: phone_number, call_delay: call_delay, extension: extension, friendly_name: friendly_name, status_callback: status_callback, status_callback_method: status_callback_method)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#create_validation_request\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ValidationRequest.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for the new caller ID resource.
    # @param phone_number [String] The phone number to verify in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
    # @return nil
    def create_validation_request(*, account_sid : String = @account_sid, phone_number : String, call_delay : Int32? = nil, extension : String? = nil, friendly_name : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, &block : Crest::Response ->)
      build_api_request_for_create_validation_request(account_sid: account_sid, phone_number: phone_number, call_delay: call_delay, extension: extension, friendly_name: friendly_name, status_callback: status_callback, status_callback_method: status_callback_method).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_create_validation_request(*, account_sid : String = @account_sid, phone_number : String, call_delay : Int32? = nil, extension : String? = nil, friendly_name : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.create_validation_request ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_validation_request, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_validation_request, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.create_validation_request, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["CallDelay"] = call_delay.to_s if !call_delay.nil?
      form_params["Extension"] = extension.to_s if !extension.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.create_validation_request",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to delete.
    # @return [nil]
    def delete_address(*, account_sid : String = @account_sid, sid : String)
      delete_address_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_address_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_address(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to delete.
    # @return nil
    def delete_address(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_address(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_address(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_address, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete the application by the specified application sid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to delete.
    # @return [nil]
    def delete_application(*, account_sid : String = @account_sid, sid : String)
      delete_application_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete the application by the specified application sid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_application_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_application(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_application\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete the application by the specified application sid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to delete.
    # @return nil
    def delete_application(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_application(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_application(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_application ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_application, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_application, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_application, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_application, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_application, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_application, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_application",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a Call record from your account. Once the record is deleted, it will no longer appear in the API and Account Portal logs.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to delete.
    # @param sid [String] The Twilio-provided Call SID that uniquely identifies the Call resource to delete
    # @return [nil]
    def delete_call(*, account_sid : String = @account_sid, sid : String)
      delete_call_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete a Call record from your account. Once the record is deleted, it will no longer appear in the API and Account Portal logs.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to delete.
    # @param sid [String] The Twilio-provided Call SID that uniquely identifies the Call resource to delete
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_call_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_call(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_call\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a Call record from your account. Once the record is deleted, it will no longer appear in the API and Account Portal logs.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to delete.
    # @param sid [String] The Twilio-provided Call SID that uniquely identifies the Call resource to delete
    # @return nil
    def delete_call(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_call(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_call(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_call ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_call",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a FeedbackSummary resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies this resource.
    # @return [nil]
    def delete_call_feedback_summary(*, account_sid : String = @account_sid, sid : String)
      delete_call_feedback_summary_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete a FeedbackSummary resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies this resource.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_call_feedback_summary_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_call_feedback_summary(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_call_feedback_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a FeedbackSummary resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies this resource.
    # @return nil
    def delete_call_feedback_summary(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_call_feedback_summary(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_call_feedback_summary(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_call_feedback_summary ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call_feedback_summary, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call_feedback_summary, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call_feedback_summary, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call_feedback_summary, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call_feedback_summary, the character length must be great than or equal to 34.")
      end

      pattern = /^FS[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call_feedback_summary, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_call_feedback_summary",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to delete.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to delete.
    # @return [nil]
    def delete_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String)
      delete_call_recording_with_http_info(account_sid: account_sid, call_sid: call_sid, sid: sid)
      nil
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to delete.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_call_recording_with_http_info(*, account_sid : String = @account_sid, call_sid : String, sid : String)
      request = build_api_request_for_delete_call_recording(account_sid: account_sid, call_sid: call_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_call_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to delete.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to delete.
    # @return nil
    def delete_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_call_recording(account_sid: account_sid, call_sid: call_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_call_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_call_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.delete_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.delete_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.delete_call_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_call_recording, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_call_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resources to delete.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to delete.
    # @return [nil]
    def delete_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String)
      delete_conference_recording_with_http_info(account_sid: account_sid, conference_sid: conference_sid, sid: sid)
      nil
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resources to delete.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_conference_recording_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, sid : String)
      request = build_api_request_for_delete_conference_recording(account_sid: account_sid, conference_sid: conference_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_conference_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resources to delete.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to delete.
    # @return nil
    def delete_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_conference_recording(account_sid: account_sid, conference_sid: conference_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_conference_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_conference_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.delete_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.delete_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.delete_conference_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_conference_recording, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_conference_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete an instance of a connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to fetch.
    # @return [nil]
    def delete_connect_app(*, account_sid : String = @account_sid, sid : String)
      delete_connect_app_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete an instance of a connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to fetch.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_connect_app_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_connect_app(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_connect_app\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete an instance of a connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to fetch.
    # @return nil
    def delete_connect_app(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_connect_app(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_connect_app(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_connect_app ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_connect_app, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^CN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_connect_app, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_connect_app",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a phone-numbers belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to delete.
    # @return [nil]
    def delete_incoming_phone_number(*, account_sid : String = @account_sid, sid : String)
      delete_incoming_phone_number_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete a phone-numbers belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_incoming_phone_number_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_incoming_phone_number(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_incoming_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a phone-numbers belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to delete.
    # @return nil
    def delete_incoming_phone_number(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_incoming_phone_number(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_incoming_phone_number(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_incoming_phone_number ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Remove the assignment of an Add-on installation from the Number specified.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to delete.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to delete.
    # @return [nil]
    def delete_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, sid : String)
      delete_incoming_phone_number_assigned_add_on_with_http_info(account_sid: account_sid, resource_sid: resource_sid, sid: sid)
      nil
    end

    # Remove the assignment of an Add-on installation from the Number specified.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to delete.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_incoming_phone_number_assigned_add_on_with_http_info(*, account_sid : String = @account_sid, resource_sid : String, sid : String)
      request = build_api_request_for_delete_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_incoming_phone_number_assigned_add_on\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Remove the assignment of an Add-on installation from the Number specified.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to delete.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to delete.
    # @return nil
    def delete_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_incoming_phone_number_assigned_add_on ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && resource_sid !~ pattern
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^XE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_incoming_phone_number_assigned_add_on",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to delete.
    # @return [nil]
    def delete_key(*, account_sid : String = @account_sid, sid : String)
      delete_key_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_key_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_key(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to delete.
    # @return nil
    def delete_key(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_key(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_key(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_key, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_key, the character length must be great than or equal to 34.")
      end

      pattern = /^SK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_key, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete media from your account. Once delete, you will no longer be billed
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to delete.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Media resource to delete
    # @return [nil]
    def delete_media(*, account_sid : String = @account_sid, message_sid : String, sid : String)
      delete_media_with_http_info(account_sid: account_sid, message_sid: message_sid, sid: sid)
      nil
    end

    # Delete media from your account. Once delete, you will no longer be billed
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to delete.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Media resource to delete
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_media_with_http_info(*, account_sid : String = @account_sid, message_sid : String, sid : String)
      request = build_api_request_for_delete_media(account_sid: account_sid, message_sid: message_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_media\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete media from your account. Once delete, you will no longer be billed
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to delete.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Media resource to delete
    # @return nil
    def delete_media(*, account_sid : String = @account_sid, message_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_media(account_sid: account_sid, message_sid: message_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_media(*, account_sid : String = @account_sid, message_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_media ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_media, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_media, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_media, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && message_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.delete_media, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && message_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.delete_media, the character length must be great than or equal to 34.")
      end

      pattern = /^(SM|MM)[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && message_sid !~ pattern
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.delete_media, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_media, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_media, the character length must be great than or equal to 34.")
      end

      pattern = /^ME[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_media, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "MessageSid" + "}", URI.encode_path(message_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_media",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Deletes a message record from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to delete.
    # @return [nil]
    def delete_message(*, account_sid : String = @account_sid, sid : String)
      delete_message_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Deletes a message record from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_message_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_message(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_message\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Deletes a message record from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to delete.
    # @return nil
    def delete_message(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_message(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_message(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_message ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_message, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_message, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_message, the character length must be great than or equal to 34.")
      end

      pattern = /^(SM|MM)[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_message, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_message",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete the caller-id specified from the account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to delete.
    # @return [nil]
    def delete_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String)
      delete_outgoing_caller_id_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete the caller-id specified from the account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_outgoing_caller_id_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_outgoing_caller_id(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_outgoing_caller_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete the caller-id specified from the account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to delete.
    # @return nil
    def delete_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_outgoing_caller_id(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_outgoing_caller_id ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_outgoing_caller_id, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_outgoing_caller_id, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_outgoing_caller_id, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_outgoing_caller_id, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_outgoing_caller_id, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_outgoing_caller_id, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_outgoing_caller_id",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Kick a participant from a given conference
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to delete.
    # @param conference_sid [String] The SID of the conference with the participants to delete.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to delete. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return [nil]
    def delete_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String)
      delete_participant_with_http_info(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid)
      nil
    end

    # Kick a participant from a given conference
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to delete.
    # @param conference_sid [String] The SID of the conference with the participants to delete.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to delete. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_participant_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String)
      request = build_api_request_for_delete_participant(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_participant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Kick a participant from a given conference
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to delete.
    # @param conference_sid [String] The SID of the conference with the participants to delete.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to delete. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return nil
    def delete_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_participant(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_participant ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_participant, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.delete_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.delete_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.delete_participant, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_participant",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Remove an empty queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to delete
    # @return [nil]
    def delete_queue(*, account_sid : String = @account_sid, sid : String)
      delete_queue_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Remove an empty queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to delete
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_queue_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_queue(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Remove an empty queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to delete
    # @return nil
    def delete_queue(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_queue(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_queue(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_queue ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_queue, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_queue, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_queue, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_queue, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_queue, the character length must be great than or equal to 34.")
      end

      pattern = /^QU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_queue, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_queue",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to delete.
    # @return [nil]
    def delete_recording(*, account_sid : String = @account_sid, sid : String)
      delete_recording_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_recording_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_recording(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a recording from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to delete.
    # @return nil
    def delete_recording(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_recording(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_recording(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a result and purge all associated Payloads
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resources to delete.
    # @param reference_sid [String] The SID of the recording to which the result to delete belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult resource to delete.
    # @return [nil]
    def delete_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, sid : String)
      delete_recording_add_on_result_with_http_info(account_sid: account_sid, reference_sid: reference_sid, sid: sid)
      nil
    end

    # Delete a result and purge all associated Payloads
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resources to delete.
    # @param reference_sid [String] The SID of the recording to which the result to delete belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_recording_add_on_result_with_http_info(*, account_sid : String = @account_sid, reference_sid : String, sid : String)
      request = build_api_request_for_delete_recording_add_on_result(account_sid: account_sid, reference_sid: reference_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_recording_add_on_result\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a result and purge all associated Payloads
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resources to delete.
    # @param reference_sid [String] The SID of the recording to which the result to delete belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult resource to delete.
    # @return nil
    def delete_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_recording_add_on_result(account_sid: account_sid, reference_sid: reference_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_recording_add_on_result ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_add_on_result, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_add_on_result, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_add_on_result, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.delete_recording_add_on_result, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.delete_recording_add_on_result, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && reference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.delete_recording_add_on_result, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_add_on_result, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_add_on_result, the character length must be great than or equal to 34.")
      end

      pattern = /^XR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_add_on_result, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ReferenceSid" + "}", URI.encode_path(reference_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_recording_add_on_result",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a payload from the result along with all associated Data
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resources to delete.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payloads to delete belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payloads to delete belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult Payload resource to delete.
    # @return [nil]
    def delete_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, sid : String)
      delete_recording_add_on_result_payload_with_http_info(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, sid: sid)
      nil
    end

    # Delete a payload from the result along with all associated Data
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resources to delete.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payloads to delete belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payloads to delete belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult Payload resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_recording_add_on_result_payload_with_http_info(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, sid : String)
      request = build_api_request_for_delete_recording_add_on_result_payload(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_recording_add_on_result_payload\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a payload from the result along with all associated Data
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resources to delete.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payloads to delete belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payloads to delete belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult Payload resource to delete.
    # @return nil
    def delete_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_recording_add_on_result_payload(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_recording_add_on_result_payload ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && reference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && add_on_result_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && add_on_result_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^XR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && add_on_result_sid !~ pattern
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.delete_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^XH[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ReferenceSid" + "}", URI.encode_path(reference_sid.to_s)).sub("{" + "AddOnResultSid" + "}", URI.encode_path(add_on_result_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_recording_add_on_result_payload",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to delete.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcription to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to delete.
    # @return [nil]
    def delete_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, sid : String)
      delete_recording_transcription_with_http_info(account_sid: account_sid, recording_sid: recording_sid, sid: sid)
      nil
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to delete.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcription to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_recording_transcription_with_http_info(*, account_sid : String = @account_sid, recording_sid : String, sid : String)
      request = build_api_request_for_delete_recording_transcription(account_sid: account_sid, recording_sid: recording_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_recording_transcription\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to delete.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcription to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to delete.
    # @return nil
    def delete_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_recording_transcription(account_sid: account_sid, recording_sid: recording_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_recording_transcription ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_recording_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && recording_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.delete_recording_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && recording_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.delete_recording_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && recording_sid !~ pattern
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.delete_recording_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^TR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_recording_transcription, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "RecordingSid" + "}", URI.encode_path(recording_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_recording_transcription",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return [nil]
    def delete_signing_key(*, account_sid : String = @account_sid, sid : String)
      delete_signing_key_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_signing_key_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_signing_key(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_signing_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return nil
    def delete_signing_key(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_signing_key(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_signing_key(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_signing_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_signing_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_signing_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_signing_key, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_signing_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_signing_key, the character length must be great than or equal to 34.")
      end

      pattern = /^SK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_signing_key, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_signing_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a credential list mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to delete.
    # @return [nil]
    def delete_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      delete_sip_auth_calls_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      nil
    end

    # Delete a credential list mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_auth_calls_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_delete_sip_auth_calls_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_auth_calls_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a credential list mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to delete.
    # @return nil
    def delete_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_auth_calls_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_auth_calls_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_auth_calls_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete an IP Access Control List mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IpAccessControlListMapping resource to delete.
    # @return [nil]
    def delete_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      delete_sip_auth_calls_ip_access_control_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      nil
    end

    # Delete an IP Access Control List mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IpAccessControlListMapping resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_auth_calls_ip_access_control_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_delete_sip_auth_calls_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_auth_calls_ip_access_control_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete an IP Access Control List mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IpAccessControlListMapping resource to delete.
    # @return nil
    def delete_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_auth_calls_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_auth_calls_ip_access_control_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a credential list mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to delete.
    # @return [nil]
    def delete_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      delete_sip_auth_registrations_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      nil
    end

    # Delete a credential list mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_auth_registrations_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_delete_sip_auth_registrations_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_auth_registrations_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a credential list mapping from the requested domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to delete.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to delete.
    # @return nil
    def delete_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_auth_registrations_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_auth_registrations_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_auth_registrations_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credentials.
    # @param sid [String] The unique id that identifies the resource to delete.
    # @return [nil]
    def delete_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String)
      delete_sip_credential_with_http_info(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid)
      nil
    end

    # Delete a credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credentials.
    # @param sid [String] The unique id that identifies the resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_credential_with_http_info(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String)
      request = build_api_request_for_delete_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credentials.
    # @param sid [String] The unique id that identifies the resource to delete.
    # @return nil
    def delete_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_credential ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.delete_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.delete_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && credential_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.delete_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^CR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CredentialListSid" + "}", URI.encode_path(credential_list_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_credential",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @return [nil]
    def delete_sip_credential_list(*, account_sid : String = @account_sid, sid : String)
      delete_sip_credential_list_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_credential_list_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_sip_credential_list(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_credential_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @return nil
    def delete_sip_credential_list(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_credential_list(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_credential_list(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_credential_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential_list, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_credential_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a CredentialListMapping resource from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to delete.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return [nil]
    def delete_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      delete_sip_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      nil
    end

    # Delete a CredentialListMapping resource from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to delete.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_delete_sip_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a CredentialListMapping resource from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to delete.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return nil
    def delete_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete an instance of a Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to delete.
    # @return [nil]
    def delete_sip_domain(*, account_sid : String = @account_sid, sid : String)
      delete_sip_domain_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete an instance of a Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_domain_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_sip_domain(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete an instance of a Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to delete.
    # @return nil
    def delete_sip_domain(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_domain(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_domain(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_domain ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_domain, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_domain, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_domain",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete an IpAccessControlList from the requested account
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return [nil]
    def delete_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String)
      delete_sip_ip_access_control_list_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete an IpAccessControlList from the requested account
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_ip_access_control_list_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_sip_ip_access_control_list(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_ip_access_control_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete an IpAccessControlList from the requested account
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return nil
    def delete_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_ip_access_control_list(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_ip_access_control_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_access_control_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_access_control_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_access_control_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_access_control_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_access_control_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_access_control_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_ip_access_control_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete an IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return [nil]
    def delete_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      delete_sip_ip_access_control_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      nil
    end

    # Delete an IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_ip_access_control_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_delete_sip_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_ip_access_control_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete an IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return nil
    def delete_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_ip_access_control_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_ip_access_control_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete an IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to delete.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return [nil]
    def delete_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String)
      delete_sip_ip_address_with_http_info(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid)
      nil
    end

    # Delete an IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to delete.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_sip_ip_address_with_http_info(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String)
      request = build_api_request_for_delete_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_sip_ip_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete an IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to delete.
    # @param sid [String] A 34 character string that uniquely identifies the resource to delete.
    # @return nil
    def delete_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_sip_ip_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.delete_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.delete_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && ip_access_control_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.delete_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^IP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "IpAccessControlListSid" + "}", URI.encode_path(ip_access_control_list_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_sip_ip_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a transcription from the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to delete.
    # @return [nil]
    def delete_transcription(*, account_sid : String = @account_sid, sid : String)
      delete_transcription_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete a transcription from the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_transcription_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_transcription(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_transcription\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    # Delete a transcription from the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to delete.
    # @return nil
    def delete_transcription(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_transcription(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_transcription(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_transcription ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^TR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_transcription, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Transcriptions/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_transcription",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to delete.
    # @return [nil]
    def delete_usage_trigger(*, account_sid : String = @account_sid, sid : String)
      delete_usage_trigger_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to delete.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_usage_trigger_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_delete_usage_trigger(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#delete_usage_trigger\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return nil, status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to delete.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to delete.
    # @return nil
    def delete_usage_trigger(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_delete_usage_trigger(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_delete_usage_trigger(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.delete_usage_trigger ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_usage_trigger, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_usage_trigger, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.delete_usage_trigger, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_usage_trigger, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_usage_trigger, the character length must be great than or equal to 34.")
      end

      pattern = /^UT[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.delete_usage_trigger, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "DefaultApi.delete_usage_trigger",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch the account specified by the provided Account Sid
    # @param sid [String] The Account Sid that uniquely identifies the account to fetch
    # @return [Account]
    def fetch_account(*, sid : String)
      data, _status_code, _headers = fetch_account_with_http_info(sid: sid)
      data
    end

    # Fetch the account specified by the provided Account Sid
    # @param sid [String] The Account Sid that uniquely identifies the account to fetch
    # @return [Array<(Account, Integer, Hash)>] Account data, response status code and response headers
    def fetch_account_with_http_info(*, sid : String)
      request = build_api_request_for_fetch_account(sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Account.from_json(data), status_code, headers
    end

    # Fetch the account specified by the provided Account Sid
    # @param sid [String] The Account Sid that uniquely identifies the account to fetch
    # @return nil
    def fetch_account(*, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_account(sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_account(*, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_account ..." }
      end
      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_account, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_account, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_account, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{Sid}.json".sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_account",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to fetch.
    # @return [Address]
    def fetch_address(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_address_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to fetch.
    # @return [Array<(Address, Integer, Hash)>] Address data, response status code and response headers
    def fetch_address_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_address(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Address.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to fetch.
    # @return nil
    def fetch_address(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_address(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_address(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_address, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch the application specified by the provided sid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to fetch.
    # @return [Application]
    def fetch_application(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_application_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch the application specified by the provided sid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to fetch.
    # @return [Array<(Application, Integer, Hash)>] Application data, response status code and response headers
    def fetch_application_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_application(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_application\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Application.from_json(data), status_code, headers
    end

    # Fetch the application specified by the provided sid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to fetch.
    # @return nil
    def fetch_application(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_application(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_application(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_application ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_application, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_application, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_application, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_application, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_application, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_application, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_application",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of an authorized-connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resource to fetch.
    # @param connect_app_sid [String] The SID of the Connect App to fetch.
    # @return [AuthorizedConnectApp]
    def fetch_authorized_connect_app(*, account_sid : String = @account_sid, connect_app_sid : String)
      data, _status_code, _headers = fetch_authorized_connect_app_with_http_info(account_sid: account_sid, connect_app_sid: connect_app_sid)
      data
    end

    # Fetch an instance of an authorized-connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resource to fetch.
    # @param connect_app_sid [String] The SID of the Connect App to fetch.
    # @return [Array<(AuthorizedConnectApp, Integer, Hash)>] AuthorizedConnectApp data, response status code and response headers
    def fetch_authorized_connect_app_with_http_info(*, account_sid : String = @account_sid, connect_app_sid : String)
      request = build_api_request_for_fetch_authorized_connect_app(account_sid: account_sid, connect_app_sid: connect_app_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_authorized_connect_app\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return AuthorizedConnectApp.from_json(data), status_code, headers
    end

    # Fetch an instance of an authorized-connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resource to fetch.
    # @param connect_app_sid [String] The SID of the Connect App to fetch.
    # @return nil
    def fetch_authorized_connect_app(*, account_sid : String = @account_sid, connect_app_sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_authorized_connect_app(account_sid: account_sid, connect_app_sid: connect_app_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_authorized_connect_app(*, account_sid : String = @account_sid, connect_app_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_authorized_connect_app ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_authorized_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_authorized_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_authorized_connect_app, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && connect_app_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"connect_app_sid\" when calling DefaultApi.fetch_authorized_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && connect_app_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"connect_app_sid\" when calling DefaultApi.fetch_authorized_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^CN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && connect_app_sid !~ pattern
        raise ArgumentError.new("invalid value for \"connect_app_sid\" when calling DefaultApi.fetch_authorized_connect_app, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConnectAppSid" + "}", URI.encode_path(connect_app_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_authorized_connect_app",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the available phone number Country resource.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country to fetch available phone number information about.
    # @return [AvailablePhoneNumberCountry]
    def fetch_available_phone_number_country(*, account_sid : String = @account_sid, country_code : String)
      data, _status_code, _headers = fetch_available_phone_number_country_with_http_info(account_sid: account_sid, country_code: country_code)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the available phone number Country resource.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country to fetch available phone number information about.
    # @return [Array<(AvailablePhoneNumberCountry, Integer, Hash)>] AvailablePhoneNumberCountry data, response status code and response headers
    def fetch_available_phone_number_country_with_http_info(*, account_sid : String = @account_sid, country_code : String)
      request = build_api_request_for_fetch_available_phone_number_country(account_sid: account_sid, country_code: country_code)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_available_phone_number_country\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return AvailablePhoneNumberCountry.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the available phone number Country resource.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country to fetch available phone number information about.
    # @return nil
    def fetch_available_phone_number_country(*, account_sid : String = @account_sid, country_code : String, &block : Crest::Response ->)
      build_api_request_for_fetch_available_phone_number_country(account_sid: account_sid, country_code: country_code).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_available_phone_number_country(*, account_sid : String = @account_sid, country_code : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_available_phone_number_country ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_available_phone_number_country, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_available_phone_number_country, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_available_phone_number_country, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CountryCode" + "}", URI.encode_path(country_code.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_available_phone_number_country",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch the balance for an Account based on Account Sid. Balance changes may not be reflected immediately. Child accounts do not contain balance information
    # @param account_sid [String] The unique SID identifier of the Account.
    # @return [Balance]
    def fetch_balance(*, account_sid : String = @account_sid)
      data, _status_code, _headers = fetch_balance_with_http_info(account_sid: account_sid)
      data
    end

    # Fetch the balance for an Account based on Account Sid. Balance changes may not be reflected immediately. Child accounts do not contain balance information
    # @param account_sid [String] The unique SID identifier of the Account.
    # @return [Array<(Balance, Integer, Hash)>] Balance data, response status code and response headers
    def fetch_balance_with_http_info(*, account_sid : String = @account_sid)
      request = build_api_request_for_fetch_balance(account_sid: account_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_balance\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Balance.from_json(data), status_code, headers
    end

    # Fetch the balance for an Account based on Account Sid. Balance changes may not be reflected immediately. Child accounts do not contain balance information
    # @param account_sid [String] The unique SID identifier of the Account.
    # @return nil
    def fetch_balance(*, account_sid : String = @account_sid, &block : Crest::Response ->)
      build_api_request_for_fetch_balance(account_sid: account_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_balance(*, account_sid : String = @account_sid) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_balance ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_balance, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_balance, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_balance, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Balance.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_balance",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch the call specified by the provided Call SID
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to fetch.
    # @param sid [String] The SID of the Call resource to fetch.
    # @return [Call]
    def fetch_call(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_call_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch the call specified by the provided Call SID
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to fetch.
    # @param sid [String] The SID of the Call resource to fetch.
    # @return [Array<(Call, Integer, Hash)>] Call data, response status code and response headers
    def fetch_call_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_call(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_call\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Call.from_json(data), status_code, headers
    end

    # Fetch the call specified by the provided Call SID
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to fetch.
    # @param sid [String] The SID of the Call resource to fetch.
    # @return nil
    def fetch_call(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_call(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_call(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_call ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_call",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a Feedback resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param call_sid [String] The call sid that uniquely identifies the call
    # @return [CallCallFeedback]
    def fetch_call_feedback(*, account_sid : String = @account_sid, call_sid : String)
      data, _status_code, _headers = fetch_call_feedback_with_http_info(account_sid: account_sid, call_sid: call_sid)
      data
    end

    # Fetch a Feedback resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param call_sid [String] The call sid that uniquely identifies the call
    # @return [Array<(CallCallFeedback, Integer, Hash)>] CallCallFeedback data, response status code and response headers
    def fetch_call_feedback_with_http_info(*, account_sid : String = @account_sid, call_sid : String)
      request = build_api_request_for_fetch_call_feedback(account_sid: account_sid, call_sid: call_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_call_feedback\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallCallFeedback.from_json(data), status_code, headers
    end

    # Fetch a Feedback resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param call_sid [String] The call sid that uniquely identifies the call
    # @return nil
    def fetch_call_feedback(*, account_sid : String = @account_sid, call_sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_call_feedback(account_sid: account_sid, call_sid: call_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_call_feedback(*, account_sid : String = @account_sid, call_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_call_feedback ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_feedback, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_feedback, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_feedback, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_feedback, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_feedback, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_feedback, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Feedback.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_call_feedback",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a FeedbackSummary resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies this resource.
    # @return [CallCallFeedbackSummary]
    def fetch_call_feedback_summary(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_call_feedback_summary_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch a FeedbackSummary resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies this resource.
    # @return [Array<(CallCallFeedbackSummary, Integer, Hash)>] CallCallFeedbackSummary data, response status code and response headers
    def fetch_call_feedback_summary_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_call_feedback_summary(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_call_feedback_summary\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallCallFeedbackSummary.from_json(data), status_code, headers
    end

    # Fetch a FeedbackSummary resource from a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies this resource.
    # @return nil
    def fetch_call_feedback_summary(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_call_feedback_summary(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_call_feedback_summary(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_call_feedback_summary ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_feedback_summary, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_feedback_summary, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_feedback_summary, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_feedback_summary, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_feedback_summary, the character length must be great than or equal to 34.")
      end

      pattern = /^FS[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_feedback_summary, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_call_feedback_summary",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resource to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the Call Notification resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Call Notification resource to fetch.
    # @return [CallCallNotificationInstance]
    def fetch_call_notification(*, account_sid : String = @account_sid, call_sid : String, sid : String)
      data, _status_code, _headers = fetch_call_notification_with_http_info(account_sid: account_sid, call_sid: call_sid, sid: sid)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resource to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the Call Notification resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Call Notification resource to fetch.
    # @return [Array<(CallCallNotificationInstance, Integer, Hash)>] CallCallNotificationInstance data, response status code and response headers
    def fetch_call_notification_with_http_info(*, account_sid : String = @account_sid, call_sid : String, sid : String)
      request = build_api_request_for_fetch_call_notification(account_sid: account_sid, call_sid: call_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_call_notification\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallCallNotificationInstance.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resource to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the Call Notification resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Call Notification resource to fetch.
    # @return nil
    def fetch_call_notification(*, account_sid : String = @account_sid, call_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_call_notification(account_sid: account_sid, call_sid: call_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_call_notification(*, account_sid : String = @account_sid, call_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_call_notification ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_notification, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_notification, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_notification, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_notification, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_notification, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_notification, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_notification, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_notification, the character length must be great than or equal to 34.")
      end

      pattern = /^NO[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_notification, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_call_notification",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a recording for a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to fetch.
    # @return [CallCallRecording]
    def fetch_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String)
      data, _status_code, _headers = fetch_call_recording_with_http_info(account_sid: account_sid, call_sid: call_sid, sid: sid)
      data
    end

    # Fetch an instance of a recording for a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to fetch.
    # @return [Array<(CallCallRecording, Integer, Hash)>] CallCallRecording data, response status code and response headers
    def fetch_call_recording_with_http_info(*, account_sid : String = @account_sid, call_sid : String, sid : String)
      request = build_api_request_for_fetch_call_recording(account_sid: account_sid, call_sid: call_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_call_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallCallRecording.from_json(data), status_code, headers
    end

    # Fetch an instance of a recording for a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to fetch.
    # @return nil
    def fetch_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_call_recording(account_sid: account_sid, call_sid: call_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_call_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_call_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.fetch_call_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_call_recording, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_call_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a conference
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference resource to fetch
    # @return [Conference]
    def fetch_conference(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_conference_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an instance of a conference
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference resource to fetch
    # @return [Array<(Conference, Integer, Hash)>] Conference data, response status code and response headers
    def fetch_conference_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_conference(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_conference\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Conference.from_json(data), status_code, headers
    end

    # Fetch an instance of a conference
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference resource to fetch
    # @return nil
    def fetch_conference(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_conference(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_conference(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_conference ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_conference, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_conference, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_conference, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_conference, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_conference, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_conference, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_conference",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a recording for a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource to fetch.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to fetch.
    # @return [ConferenceConferenceRecording]
    def fetch_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String)
      data, _status_code, _headers = fetch_conference_recording_with_http_info(account_sid: account_sid, conference_sid: conference_sid, sid: sid)
      data
    end

    # Fetch an instance of a recording for a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource to fetch.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to fetch.
    # @return [Array<(ConferenceConferenceRecording, Integer, Hash)>] ConferenceConferenceRecording data, response status code and response headers
    def fetch_conference_recording_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, sid : String)
      request = build_api_request_for_fetch_conference_recording(account_sid: account_sid, conference_sid: conference_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_conference_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ConferenceConferenceRecording.from_json(data), status_code, headers
    end

    # Fetch an instance of a recording for a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource to fetch.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to fetch.
    # @return nil
    def fetch_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_conference_recording(account_sid: account_sid, conference_sid: conference_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_conference_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_conference_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.fetch_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.fetch_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.fetch_conference_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_conference_recording, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_conference_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to fetch.
    # @return [ConnectApp]
    def fetch_connect_app(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_connect_app_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an instance of a connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to fetch.
    # @return [Array<(ConnectApp, Integer, Hash)>] ConnectApp data, response status code and response headers
    def fetch_connect_app_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_connect_app(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_connect_app\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ConnectApp.from_json(data), status_code, headers
    end

    # Fetch an instance of a connect-app
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to fetch.
    # @return nil
    def fetch_connect_app(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_connect_app(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_connect_app(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_connect_app ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_connect_app, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^CN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_connect_app, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_connect_app",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an incoming-phone-number belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to fetch.
    # @return [IncomingPhoneNumber]
    def fetch_incoming_phone_number(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_incoming_phone_number_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an incoming-phone-number belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to fetch.
    # @return [Array<(IncomingPhoneNumber, Integer, Hash)>] IncomingPhoneNumber data, response status code and response headers
    def fetch_incoming_phone_number_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_incoming_phone_number(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_incoming_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumber.from_json(data), status_code, headers
    end

    # Fetch an incoming-phone-number belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to fetch.
    # @return nil
    def fetch_incoming_phone_number(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_incoming_phone_number(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_incoming_phone_number(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_incoming_phone_number ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of an Add-on installation currently assigned to this Number.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return [IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn]
    def fetch_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, sid : String)
      data, _status_code, _headers = fetch_incoming_phone_number_assigned_add_on_with_http_info(account_sid: account_sid, resource_sid: resource_sid, sid: sid)
      data
    end

    # Fetch an instance of an Add-on installation currently assigned to this Number.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return [Array<(IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn, Integer, Hash)>] IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn data, response status code and response headers
    def fetch_incoming_phone_number_assigned_add_on_with_http_info(*, account_sid : String = @account_sid, resource_sid : String, sid : String)
      request = build_api_request_for_fetch_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_incoming_phone_number_assigned_add_on\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn.from_json(data), status_code, headers
    end

    # Fetch an instance of an Add-on installation currently assigned to this Number.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return nil
    def fetch_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_incoming_phone_number_assigned_add_on ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && resource_sid !~ pattern
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^XE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_incoming_phone_number_assigned_add_on",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of an Extension for the Assigned Add-on.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param assigned_add_on_sid [String] The SID that uniquely identifies the assigned Add-on installation.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return [IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension]
    def fetch_incoming_phone_number_assigned_add_on_extension(*, account_sid : String = @account_sid, resource_sid : String, assigned_add_on_sid : String, sid : String)
      data, _status_code, _headers = fetch_incoming_phone_number_assigned_add_on_extension_with_http_info(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, sid: sid)
      data
    end

    # Fetch an instance of an Extension for the Assigned Add-on.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param assigned_add_on_sid [String] The SID that uniquely identifies the assigned Add-on installation.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return [Array<(IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension, Integer, Hash)>] IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension data, response status code and response headers
    def fetch_incoming_phone_number_assigned_add_on_extension_with_http_info(*, account_sid : String = @account_sid, resource_sid : String, assigned_add_on_sid : String, sid : String)
      request = build_api_request_for_fetch_incoming_phone_number_assigned_add_on_extension(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_incoming_phone_number_assigned_add_on_extension\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension.from_json(data), status_code, headers
    end

    # Fetch an instance of an Extension for the Assigned Add-on.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param assigned_add_on_sid [String] The SID that uniquely identifies the assigned Add-on installation.
    # @param sid [String] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return nil
    def fetch_incoming_phone_number_assigned_add_on_extension(*, account_sid : String = @account_sid, resource_sid : String, assigned_add_on_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_incoming_phone_number_assigned_add_on_extension(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_incoming_phone_number_assigned_add_on_extension(*, account_sid : String = @account_sid, resource_sid : String, assigned_add_on_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && resource_sid !~ pattern
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && assigned_add_on_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"assigned_add_on_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && assigned_add_on_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"assigned_add_on_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, the character length must be great than or equal to 34.")
      end

      pattern = /^XE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && assigned_add_on_sid !~ pattern
        raise ArgumentError.new("invalid value for \"assigned_add_on_sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, the character length must be great than or equal to 34.")
      end

      pattern = /^XF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s)).sub("{" + "AssignedAddOnSid" + "}", URI.encode_path(assigned_add_on_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_incoming_phone_number_assigned_add_on_extension",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to fetch.
    # @return [Key]
    def fetch_key(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_key_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to fetch.
    # @return [Array<(Key, Integer, Hash)>] Key data, response status code and response headers
    def fetch_key_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_key(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Key.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to fetch.
    # @return nil
    def fetch_key(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_key(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_key(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_key, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_key, the character length must be great than or equal to 34.")
      end

      pattern = /^SK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_key, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a single media instance belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to fetch.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Media resource to fetch
    # @return [MessageMedia]
    def fetch_media(*, account_sid : String = @account_sid, message_sid : String, sid : String)
      data, _status_code, _headers = fetch_media_with_http_info(account_sid: account_sid, message_sid: message_sid, sid: sid)
      data
    end

    # Fetch a single media instance belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to fetch.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Media resource to fetch
    # @return [Array<(MessageMedia, Integer, Hash)>] MessageMedia data, response status code and response headers
    def fetch_media_with_http_info(*, account_sid : String = @account_sid, message_sid : String, sid : String)
      request = build_api_request_for_fetch_media(account_sid: account_sid, message_sid: message_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_media\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return MessageMedia.from_json(data), status_code, headers
    end

    # Fetch a single media instance belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to fetch.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Media resource to fetch
    # @return nil
    def fetch_media(*, account_sid : String = @account_sid, message_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_media(account_sid: account_sid, message_sid: message_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_media(*, account_sid : String = @account_sid, message_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_media ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_media, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_media, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_media, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && message_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.fetch_media, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && message_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.fetch_media, the character length must be great than or equal to 34.")
      end

      pattern = /^(SM|MM)[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && message_sid !~ pattern
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.fetch_media, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_media, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_media, the character length must be great than or equal to 34.")
      end

      pattern = /^ME[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_media, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "MessageSid" + "}", URI.encode_path(message_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_media",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a specific member from the queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to fetch.
    # @param queue_sid [String] The SID of the Queue in which to find the members to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource(s) to fetch.
    # @return [QueueMember]
    def fetch_member(*, account_sid : String = @account_sid, queue_sid : String, call_sid : String)
      data, _status_code, _headers = fetch_member_with_http_info(account_sid: account_sid, queue_sid: queue_sid, call_sid: call_sid)
      data
    end

    # Fetch a specific member from the queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to fetch.
    # @param queue_sid [String] The SID of the Queue in which to find the members to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource(s) to fetch.
    # @return [Array<(QueueMember, Integer, Hash)>] QueueMember data, response status code and response headers
    def fetch_member_with_http_info(*, account_sid : String = @account_sid, queue_sid : String, call_sid : String)
      request = build_api_request_for_fetch_member(account_sid: account_sid, queue_sid: queue_sid, call_sid: call_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_member\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return QueueMember.from_json(data), status_code, headers
    end

    # Fetch a specific member from the queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to fetch.
    # @param queue_sid [String] The SID of the Queue in which to find the members to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource(s) to fetch.
    # @return nil
    def fetch_member(*, account_sid : String = @account_sid, queue_sid : String, call_sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_member(account_sid: account_sid, queue_sid: queue_sid, call_sid: call_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_member(*, account_sid : String = @account_sid, queue_sid : String, call_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_member ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_member, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_member, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_member, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && queue_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.fetch_member, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && queue_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.fetch_member, the character length must be great than or equal to 34.")
      end

      pattern = /^QU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && queue_sid !~ pattern
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.fetch_member, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "QueueSid" + "}", URI.encode_path(queue_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_member",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a message belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to fetch.
    # @return [Message]
    def fetch_message(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_message_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch a message belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to fetch.
    # @return [Array<(Message, Integer, Hash)>] Message data, response status code and response headers
    def fetch_message_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_message(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_message\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Message.from_json(data), status_code, headers
    end

    # Fetch a message belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to fetch.
    # @return nil
    def fetch_message(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_message(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_message(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_message ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_message, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_message, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_message, the character length must be great than or equal to 34.")
      end

      pattern = /^(SM|MM)[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_message, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_message",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a notification belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Notification resource to fetch.
    # @return [NotificationInstance]
    def fetch_notification(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_notification_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch a notification belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Notification resource to fetch.
    # @return [Array<(NotificationInstance, Integer, Hash)>] NotificationInstance data, response status code and response headers
    def fetch_notification_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_notification(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_notification\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return NotificationInstance.from_json(data), status_code, headers
    end

    # Fetch a notification belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Notification resource to fetch.
    # @return nil
    def fetch_notification(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_notification(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_notification(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_notification ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_notification, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_notification, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_notification, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_notification, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_notification, the character length must be great than or equal to 34.")
      end

      pattern = /^NO[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_notification, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Notifications/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_notification",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an outgoing-caller-id belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to fetch.
    # @return [OutgoingCallerId]
    def fetch_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_outgoing_caller_id_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an outgoing-caller-id belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to fetch.
    # @return [Array<(OutgoingCallerId, Integer, Hash)>] OutgoingCallerId data, response status code and response headers
    def fetch_outgoing_caller_id_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_outgoing_caller_id(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_outgoing_caller_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return OutgoingCallerId.from_json(data), status_code, headers
    end

    # Fetch an outgoing-caller-id belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to fetch.
    # @return nil
    def fetch_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_outgoing_caller_id(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_outgoing_caller_id ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_outgoing_caller_id, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_outgoing_caller_id, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_outgoing_caller_id, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_outgoing_caller_id, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_outgoing_caller_id, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_outgoing_caller_id, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_outgoing_caller_id",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a participant
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource to fetch.
    # @param conference_sid [String] The SID of the conference with the participant to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to fetch. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return [ConferenceParticipant]
    def fetch_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String)
      data, _status_code, _headers = fetch_participant_with_http_info(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid)
      data
    end

    # Fetch an instance of a participant
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource to fetch.
    # @param conference_sid [String] The SID of the conference with the participant to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to fetch. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return [Array<(ConferenceParticipant, Integer, Hash)>] ConferenceParticipant data, response status code and response headers
    def fetch_participant_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String)
      request = build_api_request_for_fetch_participant(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_participant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ConferenceParticipant.from_json(data), status_code, headers
    end

    # Fetch an instance of a participant
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource to fetch.
    # @param conference_sid [String] The SID of the conference with the participant to fetch.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to fetch. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return nil
    def fetch_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_participant(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_participant ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_participant, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.fetch_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.fetch_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.fetch_participant, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_participant",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a queue identified by the QueueSid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to fetch
    # @return [Queue]
    def fetch_queue(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_queue_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an instance of a queue identified by the QueueSid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to fetch
    # @return [Array<(Queue, Integer, Hash)>] Queue data, response status code and response headers
    def fetch_queue_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_queue(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Queue.from_json(data), status_code, headers
    end

    # Fetch an instance of a queue identified by the QueueSid
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to fetch
    # @return nil
    def fetch_queue(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_queue(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_queue(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_queue ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_queue, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_queue, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_queue, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_queue, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_queue, the character length must be great than or equal to 34.")
      end

      pattern = /^QU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_queue, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_queue",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a recording
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to fetch.
    # @return [Recording]
    def fetch_recording(*, account_sid : String = @account_sid, sid : String, include_soft_deleted : Bool? = nil)
      data, _status_code, _headers = fetch_recording_with_http_info(account_sid: account_sid, sid: sid, include_soft_deleted: include_soft_deleted)
      data
    end

    # Fetch an instance of a recording
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to fetch.
    # @return [Array<(Recording, Integer, Hash)>] Recording data, response status code and response headers
    def fetch_recording_with_http_info(*, account_sid : String = @account_sid, sid : String, include_soft_deleted : Bool? = nil)
      request = build_api_request_for_fetch_recording(account_sid: account_sid, sid: sid, include_soft_deleted: include_soft_deleted)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Recording.from_json(data), status_code, headers
    end

    # Fetch an instance of a recording
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to fetch.
    # @return nil
    def fetch_recording(*, account_sid : String = @account_sid, sid : String, include_soft_deleted : Bool? = nil, &block : Crest::Response ->)
      build_api_request_for_fetch_recording(account_sid: account_sid, sid: sid, include_soft_deleted: include_soft_deleted).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_recording(*, account_sid : String = @account_sid, sid : String, include_soft_deleted : Bool? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["IncludeSoftDeleted"] = include_soft_deleted.to_s if !include_soft_deleted.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of an AddOnResult
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resource to fetch.
    # @param reference_sid [String] The SID of the recording to which the result to fetch belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult resource to fetch.
    # @return [RecordingRecordingAddOnResult]
    def fetch_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, sid : String)
      data, _status_code, _headers = fetch_recording_add_on_result_with_http_info(account_sid: account_sid, reference_sid: reference_sid, sid: sid)
      data
    end

    # Fetch an instance of an AddOnResult
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resource to fetch.
    # @param reference_sid [String] The SID of the recording to which the result to fetch belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult resource to fetch.
    # @return [Array<(RecordingRecordingAddOnResult, Integer, Hash)>] RecordingRecordingAddOnResult data, response status code and response headers
    def fetch_recording_add_on_result_with_http_info(*, account_sid : String = @account_sid, reference_sid : String, sid : String)
      request = build_api_request_for_fetch_recording_add_on_result(account_sid: account_sid, reference_sid: reference_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_recording_add_on_result\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return RecordingRecordingAddOnResult.from_json(data), status_code, headers
    end

    # Fetch an instance of an AddOnResult
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resource to fetch.
    # @param reference_sid [String] The SID of the recording to which the result to fetch belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult resource to fetch.
    # @return nil
    def fetch_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_recording_add_on_result(account_sid: account_sid, reference_sid: reference_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_recording_add_on_result ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_add_on_result, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_add_on_result, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_add_on_result, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.fetch_recording_add_on_result, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.fetch_recording_add_on_result, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && reference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.fetch_recording_add_on_result, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_add_on_result, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_add_on_result, the character length must be great than or equal to 34.")
      end

      pattern = /^XR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_add_on_result, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ReferenceSid" + "}", URI.encode_path(reference_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_recording_add_on_result",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a result payload
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resource to fetch.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payload to fetch belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payload to fetch belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult Payload resource to fetch.
    # @return [RecordingRecordingAddOnResultRecordingAddOnResultPayload]
    def fetch_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, sid : String)
      data, _status_code, _headers = fetch_recording_add_on_result_payload_with_http_info(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, sid: sid)
      data
    end

    # Fetch an instance of a result payload
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resource to fetch.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payload to fetch belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payload to fetch belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult Payload resource to fetch.
    # @return [Array<(RecordingRecordingAddOnResultRecordingAddOnResultPayload, Integer, Hash)>] RecordingRecordingAddOnResultRecordingAddOnResultPayload data, response status code and response headers
    def fetch_recording_add_on_result_payload_with_http_info(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, sid : String)
      request = build_api_request_for_fetch_recording_add_on_result_payload(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_recording_add_on_result_payload\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return RecordingRecordingAddOnResultRecordingAddOnResultPayload.from_json(data), status_code, headers
    end

    # Fetch an instance of a result payload
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resource to fetch.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payload to fetch belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payload to fetch belongs.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording AddOnResult Payload resource to fetch.
    # @return nil
    def fetch_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_recording_add_on_result_payload(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_recording_add_on_result_payload ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && reference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && add_on_result_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && add_on_result_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^XR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && add_on_result_sid !~ pattern
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^XH[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ReferenceSid" + "}", URI.encode_path(reference_sid.to_s)).sub("{" + "AddOnResultSid" + "}", URI.encode_path(add_on_result_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_recording_add_on_result_payload",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource to fetch.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcription to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to fetch.
    # @return [RecordingRecordingTranscription]
    def fetch_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, sid : String)
      data, _status_code, _headers = fetch_recording_transcription_with_http_info(account_sid: account_sid, recording_sid: recording_sid, sid: sid)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource to fetch.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcription to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to fetch.
    # @return [Array<(RecordingRecordingTranscription, Integer, Hash)>] RecordingRecordingTranscription data, response status code and response headers
    def fetch_recording_transcription_with_http_info(*, account_sid : String = @account_sid, recording_sid : String, sid : String)
      request = build_api_request_for_fetch_recording_transcription(account_sid: account_sid, recording_sid: recording_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_recording_transcription\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return RecordingRecordingTranscription.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource to fetch.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcription to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to fetch.
    # @return nil
    def fetch_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_recording_transcription(account_sid: account_sid, recording_sid: recording_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_recording_transcription ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_recording_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && recording_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.fetch_recording_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && recording_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.fetch_recording_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && recording_sid !~ pattern
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.fetch_recording_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^TR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_recording_transcription, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "RecordingSid" + "}", URI.encode_path(recording_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_recording_transcription",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a short code
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ShortCode resource to fetch
    # @return [ShortCode]
    def fetch_short_code(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_short_code_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an instance of a short code
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ShortCode resource to fetch
    # @return [Array<(ShortCode, Integer, Hash)>] ShortCode data, response status code and response headers
    def fetch_short_code_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_short_code(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_short_code\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ShortCode.from_json(data), status_code, headers
    end

    # Fetch an instance of a short code
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ShortCode resource to fetch
    # @return nil
    def fetch_short_code(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_short_code(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_short_code(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_short_code ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_short_code, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_short_code, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_short_code, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_short_code, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_short_code, the character length must be great than or equal to 34.")
      end

      pattern = /^SC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_short_code, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_short_code",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return [SigningKey]
    def fetch_signing_key(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_signing_key_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return [Array<(SigningKey, Integer, Hash)>] SigningKey data, response status code and response headers
    def fetch_signing_key_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_signing_key(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_signing_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SigningKey.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return nil
    def fetch_signing_key(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_signing_key(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_signing_key(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_signing_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_signing_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_signing_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_signing_key, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_signing_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_signing_key, the character length must be great than or equal to 34.")
      end

      pattern = /^SK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_signing_key, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_signing_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a specific instance of a credential list mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to fetch.
    # @return [SipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping]
    def fetch_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      data, _status_code, _headers = fetch_sip_auth_calls_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      data
    end

    # Fetch a specific instance of a credential list mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to fetch.
    # @return [Array<(SipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping, Integer, Hash)>] SipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping data, response status code and response headers
    def fetch_sip_auth_calls_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_fetch_sip_auth_calls_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_auth_calls_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipAuthSipAuthCallsSipAuthCallsCredentialListMapping.from_json(data), status_code, headers
    end

    # Fetch a specific instance of a credential list mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to fetch.
    # @return nil
    def fetch_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_auth_calls_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_auth_calls_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_auth_calls_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a specific instance of an IP Access Control List mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IpAccessControlListMapping resource to fetch.
    # @return [SipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping]
    def fetch_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      data, _status_code, _headers = fetch_sip_auth_calls_ip_access_control_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      data
    end

    # Fetch a specific instance of an IP Access Control List mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IpAccessControlListMapping resource to fetch.
    # @return [Array<(SipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping, Integer, Hash)>] SipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping data, response status code and response headers
    def fetch_sip_auth_calls_ip_access_control_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_fetch_sip_auth_calls_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_auth_calls_ip_access_control_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipAuthSipAuthCallsSipAuthCallsIpAccessControlListMapping.from_json(data), status_code, headers
    end

    # Fetch a specific instance of an IP Access Control List mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the IpAccessControlListMapping resource to fetch.
    # @return nil
    def fetch_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_auth_calls_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_auth_calls_ip_access_control_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a specific instance of a credential list mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to fetch.
    # @return [SipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping]
    def fetch_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      data, _status_code, _headers = fetch_sip_auth_registrations_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      data
    end

    # Fetch a specific instance of a credential list mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to fetch.
    # @return [Array<(SipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping, Integer, Hash)>] SipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping data, response status code and response headers
    def fetch_sip_auth_registrations_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_fetch_sip_auth_registrations_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_auth_registrations_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipAuthSipAuthRegistrationsSipAuthRegistrationsCredentialListMapping.from_json(data), status_code, headers
    end

    # Fetch a specific instance of a credential list mapping
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resource to fetch.
    # @param domain_sid [String] The SID of the SIP domain that contains the resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the CredentialListMapping resource to fetch.
    # @return nil
    def fetch_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_auth_registrations_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_auth_registrations_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_auth_registrations_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a single credential.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credential.
    # @param sid [String] The unique id that identifies the resource to fetch.
    # @return [SipSipCredentialListSipCredential]
    def fetch_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String)
      data, _status_code, _headers = fetch_sip_credential_with_http_info(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid)
      data
    end

    # Fetch a single credential.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credential.
    # @param sid [String] The unique id that identifies the resource to fetch.
    # @return [Array<(SipSipCredentialListSipCredential, Integer, Hash)>] SipSipCredentialListSipCredential data, response status code and response headers
    def fetch_sip_credential_with_http_info(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String)
      request = build_api_request_for_fetch_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipCredentialListSipCredential.from_json(data), status_code, headers
    end

    # Fetch a single credential.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credential.
    # @param sid [String] The unique id that identifies the resource to fetch.
    # @return nil
    def fetch_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_credential ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.fetch_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.fetch_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && credential_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.fetch_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^CR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CredentialListSid" + "}", URI.encode_path(credential_list_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_credential",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Get a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @return [SipSipCredentialList]
    def fetch_sip_credential_list(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_sip_credential_list_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Get a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @return [Array<(SipSipCredentialList, Integer, Hash)>] SipSipCredentialList data, response status code and response headers
    def fetch_sip_credential_list_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_sip_credential_list(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_credential_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipCredentialList.from_json(data), status_code, headers
    end

    # Get a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @return nil
    def fetch_sip_credential_list(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_credential_list(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_credential_list(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_credential_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential_list, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_credential_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a single CredentialListMapping resource from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to fetch.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return [SipSipDomainSipCredentialListMapping]
    def fetch_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      data, _status_code, _headers = fetch_sip_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      data
    end

    # Fetch a single CredentialListMapping resource from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to fetch.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return [Array<(SipSipDomainSipCredentialListMapping, Integer, Hash)>] SipSipDomainSipCredentialListMapping data, response status code and response headers
    def fetch_sip_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_fetch_sip_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipCredentialListMapping.from_json(data), status_code, headers
    end

    # Fetch a single CredentialListMapping resource from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to fetch.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return nil
    def fetch_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to fetch.
    # @return [SipSipDomain]
    def fetch_sip_domain(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_sip_domain_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an instance of a Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to fetch.
    # @return [Array<(SipSipDomain, Integer, Hash)>] SipSipDomain data, response status code and response headers
    def fetch_sip_domain_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_sip_domain(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomain.from_json(data), status_code, headers
    end

    # Fetch an instance of a Domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to fetch.
    # @return nil
    def fetch_sip_domain(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_domain(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_domain(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_domain ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_domain, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_domain, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_domain",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch a specific instance of an IpAccessControlList
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return [SipSipIpAccessControlList]
    def fetch_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_sip_ip_access_control_list_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch a specific instance of an IpAccessControlList
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return [Array<(SipSipIpAccessControlList, Integer, Hash)>] SipSipIpAccessControlList data, response status code and response headers
    def fetch_sip_ip_access_control_list_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_sip_ip_access_control_list(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_ip_access_control_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipIpAccessControlList.from_json(data), status_code, headers
    end

    # Fetch a specific instance of an IpAccessControlList
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return nil
    def fetch_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_ip_access_control_list(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_ip_access_control_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_access_control_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_access_control_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_access_control_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_ip_access_control_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return [SipSipDomainSipIpAccessControlListMapping]
    def fetch_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      data, _status_code, _headers = fetch_sip_ip_access_control_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, sid: sid)
      data
    end

    # Fetch an IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return [Array<(SipSipDomainSipIpAccessControlListMapping, Integer, Hash)>] SipSipDomainSipIpAccessControlListMapping data, response status code and response headers
    def fetch_sip_ip_access_control_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, sid : String)
      request = build_api_request_for_fetch_sip_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_ip_access_control_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomainSipIpAccessControlListMapping.from_json(data), status_code, headers
    end

    # Fetch an IpAccessControlListMapping resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @param sid [String] A 34 character string that uniquely identifies the resource to fetch.
    # @return nil
    def fetch_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_ip_access_control_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_ip_access_control_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Read one IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to fetch.
    # @param sid [String] A 34 character string that uniquely identifies the IpAddress resource to fetch.
    # @return [SipSipIpAccessControlListSipIpAddress]
    def fetch_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String)
      data, _status_code, _headers = fetch_sip_ip_address_with_http_info(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid)
      data
    end

    # Read one IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to fetch.
    # @param sid [String] A 34 character string that uniquely identifies the IpAddress resource to fetch.
    # @return [Array<(SipSipIpAccessControlListSipIpAddress, Integer, Hash)>] SipSipIpAccessControlListSipIpAddress data, response status code and response headers
    def fetch_sip_ip_address_with_http_info(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String)
      request = build_api_request_for_fetch_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_sip_ip_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipIpAccessControlListSipIpAddress.from_json(data), status_code, headers
    end

    # Read one IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to fetch.
    # @param sid [String] A 34 character string that uniquely identifies the IpAddress resource to fetch.
    # @return nil
    def fetch_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_sip_ip_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.fetch_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.fetch_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && ip_access_control_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.fetch_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^IP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "IpAccessControlListSid" + "}", URI.encode_path(ip_access_control_list_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_sip_ip_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of a Transcription
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to fetch.
    # @return [Transcription]
    def fetch_transcription(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_transcription_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an instance of a Transcription
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to fetch.
    # @return [Array<(Transcription, Integer, Hash)>] Transcription data, response status code and response headers
    def fetch_transcription_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_transcription(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_transcription\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Transcription.from_json(data), status_code, headers
    end

    # Fetch an instance of a Transcription
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Transcription resource to fetch.
    # @return nil
    def fetch_transcription(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_transcription(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_transcription(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_transcription ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^TR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_transcription, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Transcriptions/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_transcription",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch and instance of a usage-trigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to fetch.
    # @return [UsageUsageTrigger]
    def fetch_usage_trigger(*, account_sid : String = @account_sid, sid : String)
      data, _status_code, _headers = fetch_usage_trigger_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch and instance of a usage-trigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to fetch.
    # @return [Array<(UsageUsageTrigger, Integer, Hash)>] UsageUsageTrigger data, response status code and response headers
    def fetch_usage_trigger_with_http_info(*, account_sid : String = @account_sid, sid : String)
      request = build_api_request_for_fetch_usage_trigger(account_sid: account_sid, sid: sid)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#fetch_usage_trigger\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return UsageUsageTrigger.from_json(data), status_code, headers
    end

    # Fetch and instance of a usage-trigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resource to fetch.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to fetch.
    # @return nil
    def fetch_usage_trigger(*, account_sid : String = @account_sid, sid : String, &block : Crest::Response ->)
      build_api_request_for_fetch_usage_trigger(account_sid: account_sid, sid: sid).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_fetch_usage_trigger(*, account_sid : String = @account_sid, sid : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.fetch_usage_trigger ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_usage_trigger, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_usage_trigger, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.fetch_usage_trigger, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_usage_trigger, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_usage_trigger, the character length must be great than or equal to 34.")
      end

      pattern = /^UT[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.fetch_usage_trigger, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.fetch_usage_trigger",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieves a collection of Accounts belonging to the account used to make the request
    # @return [ListAccountResponse]
    def list_account(*, friendly_name : String? = nil, status : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_account_with_http_info(friendly_name: friendly_name, status: status, page_size: page_size)
      data
    end

    # Retrieves a collection of Accounts belonging to the account used to make the request
    # @return [Array<(ListAccountResponse, Integer, Hash)>] ListAccountResponse data, response status code and response headers
    def list_account_with_http_info(*, friendly_name : String? = nil, status : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_account(friendly_name: friendly_name, status: status, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAccountResponse.from_json(data), status_code, headers
    end

    # Retrieves a collection of Accounts belonging to the account used to make the request
    # @return nil
    def list_account(*, friendly_name : String? = nil, status : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_account(friendly_name: friendly_name, status: status, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_account(*, friendly_name : String? = nil, status : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_account ..." }
      end
      allowable_values = ["active", "suspended", "closed"]
      if @api_client.config.client_side_validation && !status.nil? && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_account, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_account, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts.json"

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["Status"] = status.to_s if !status.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_account",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to read.
    # @return [ListAddressResponse]
    def list_address(*, account_sid : String = @account_sid, customer_name : String? = nil, friendly_name : String? = nil, iso_country : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_address_with_http_info(account_sid: account_sid, customer_name: customer_name, friendly_name: friendly_name, iso_country: iso_country, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to read.
    # @return [Array<(ListAddressResponse, Integer, Hash)>] ListAddressResponse data, response status code and response headers
    def list_address_with_http_info(*, account_sid : String = @account_sid, customer_name : String? = nil, friendly_name : String? = nil, iso_country : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_address(account_sid: account_sid, customer_name: customer_name, friendly_name: friendly_name, iso_country: iso_country, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAddressResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to read.
    # @return nil
    def list_address(*, account_sid : String = @account_sid, customer_name : String? = nil, friendly_name : String? = nil, iso_country : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_address(account_sid: account_sid, customer_name: customer_name, friendly_name: friendly_name, iso_country: iso_country, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_address(*, account_sid : String = @account_sid, customer_name : String? = nil, friendly_name : String? = nil, iso_country : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_address, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_address, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Addresses.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["CustomerName"] = customer_name.to_s if !customer_name.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["IsoCountry"] = iso_country.to_s if !iso_country.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of applications representing an application within the requesting account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to read.
    # @return [ListApplicationResponse]
    def list_application(*, account_sid : String = @account_sid, friendly_name : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_application_with_http_info(account_sid: account_sid, friendly_name: friendly_name, page_size: page_size)
      data
    end

    # Retrieve a list of applications representing an application within the requesting account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to read.
    # @return [Array<(ListApplicationResponse, Integer, Hash)>] ListApplicationResponse data, response status code and response headers
    def list_application_with_http_info(*, account_sid : String = @account_sid, friendly_name : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_application(account_sid: account_sid, friendly_name: friendly_name, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_application\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListApplicationResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of applications representing an application within the requesting account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to read.
    # @return nil
    def list_application(*, account_sid : String = @account_sid, friendly_name : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_application(account_sid: account_sid, friendly_name: friendly_name, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_application(*, account_sid : String = @account_sid, friendly_name : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_application ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_application, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_application, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_application, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_application, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_application, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Applications.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_application",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of authorized-connect-apps belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resources to read.
    # @return [ListAuthorizedConnectAppResponse]
    def list_authorized_connect_app(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_authorized_connect_app_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    # Retrieve a list of authorized-connect-apps belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resources to read.
    # @return [Array<(ListAuthorizedConnectAppResponse, Integer, Hash)>] ListAuthorizedConnectAppResponse data, response status code and response headers
    def list_authorized_connect_app_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_authorized_connect_app(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_authorized_connect_app\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAuthorizedConnectAppResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of authorized-connect-apps belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resources to read.
    # @return nil
    def list_authorized_connect_app(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_authorized_connect_app(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_authorized_connect_app(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_authorized_connect_app ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_authorized_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_authorized_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_authorized_connect_app, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_authorized_connect_app, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_authorized_connect_app, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_authorized_connect_app",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the available phone number Country resources.
    # @return [ListAvailablePhoneNumberCountryResponse]
    def list_available_phone_number_country(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_available_phone_number_country_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the available phone number Country resources.
    # @return [Array<(ListAvailablePhoneNumberCountryResponse, Integer, Hash)>] ListAvailablePhoneNumberCountryResponse data, response status code and response headers
    def list_available_phone_number_country_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_available_phone_number_country(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_available_phone_number_country\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAvailablePhoneNumberCountryResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the available phone number Country resources.
    # @return nil
    def list_available_phone_number_country(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_available_phone_number_country(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_available_phone_number_country(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_available_phone_number_country ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_country, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_country, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_country, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_country, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_country, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_available_phone_number_country",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [ListAvailablePhoneNumberLocalResponse]
    def list_available_phone_number_local(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_available_phone_number_local_with_http_info(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [Array<(ListAvailablePhoneNumberLocalResponse, Integer, Hash)>] ListAvailablePhoneNumberLocalResponse data, response status code and response headers
    def list_available_phone_number_local_with_http_info(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_available_phone_number_local(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_available_phone_number_local\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAvailablePhoneNumberLocalResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return nil
    def list_available_phone_number_local(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_available_phone_number_local(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_available_phone_number_local(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_available_phone_number_local ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_local, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_local, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_local, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Local.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CountryCode" + "}", URI.encode_path(country_code.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["AreaCode"] = area_code.to_s if !area_code.nil?
      query_params["Contains"] = contains.to_s if !contains.nil?
      query_params["SmsEnabled"] = sms_enabled.to_s if !sms_enabled.nil?
      query_params["MmsEnabled"] = mms_enabled.to_s if !mms_enabled.nil?
      query_params["VoiceEnabled"] = voice_enabled.to_s if !voice_enabled.nil?
      query_params["ExcludeAllAddressRequired"] = exclude_all_address_required.to_s if !exclude_all_address_required.nil?
      query_params["ExcludeLocalAddressRequired"] = exclude_local_address_required.to_s if !exclude_local_address_required.nil?
      query_params["ExcludeForeignAddressRequired"] = exclude_foreign_address_required.to_s if !exclude_foreign_address_required.nil?
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["NearNumber"] = near_number.to_s if !near_number.nil?
      query_params["NearLatLong"] = near_lat_long.to_s if !near_lat_long.nil?
      query_params["Distance"] = distance.to_s if !distance.nil?
      query_params["InPostalCode"] = in_postal_code.to_s if !in_postal_code.nil?
      query_params["InRegion"] = in_region.to_s if !in_region.nil?
      query_params["InRateCenter"] = in_rate_center.to_s if !in_rate_center.nil?
      query_params["InLata"] = in_lata.to_s if !in_lata.nil?
      query_params["InLocality"] = in_locality.to_s if !in_locality.nil?
      query_params["FaxEnabled"] = fax_enabled.to_s if !fax_enabled.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_available_phone_number_local",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [ListAvailablePhoneNumberMachineToMachineResponse]
    def list_available_phone_number_machine_to_machine(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_available_phone_number_machine_to_machine_with_http_info(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [Array<(ListAvailablePhoneNumberMachineToMachineResponse, Integer, Hash)>] ListAvailablePhoneNumberMachineToMachineResponse data, response status code and response headers
    def list_available_phone_number_machine_to_machine_with_http_info(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_available_phone_number_machine_to_machine(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_available_phone_number_machine_to_machine\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAvailablePhoneNumberMachineToMachineResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return nil
    def list_available_phone_number_machine_to_machine(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_available_phone_number_machine_to_machine(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_available_phone_number_machine_to_machine(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_available_phone_number_machine_to_machine ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_machine_to_machine, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_machine_to_machine, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_machine_to_machine, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_machine_to_machine, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_machine_to_machine, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/MachineToMachine.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CountryCode" + "}", URI.encode_path(country_code.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["AreaCode"] = area_code.to_s if !area_code.nil?
      query_params["Contains"] = contains.to_s if !contains.nil?
      query_params["SmsEnabled"] = sms_enabled.to_s if !sms_enabled.nil?
      query_params["MmsEnabled"] = mms_enabled.to_s if !mms_enabled.nil?
      query_params["VoiceEnabled"] = voice_enabled.to_s if !voice_enabled.nil?
      query_params["ExcludeAllAddressRequired"] = exclude_all_address_required.to_s if !exclude_all_address_required.nil?
      query_params["ExcludeLocalAddressRequired"] = exclude_local_address_required.to_s if !exclude_local_address_required.nil?
      query_params["ExcludeForeignAddressRequired"] = exclude_foreign_address_required.to_s if !exclude_foreign_address_required.nil?
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["NearNumber"] = near_number.to_s if !near_number.nil?
      query_params["NearLatLong"] = near_lat_long.to_s if !near_lat_long.nil?
      query_params["Distance"] = distance.to_s if !distance.nil?
      query_params["InPostalCode"] = in_postal_code.to_s if !in_postal_code.nil?
      query_params["InRegion"] = in_region.to_s if !in_region.nil?
      query_params["InRateCenter"] = in_rate_center.to_s if !in_rate_center.nil?
      query_params["InLata"] = in_lata.to_s if !in_lata.nil?
      query_params["InLocality"] = in_locality.to_s if !in_locality.nil?
      query_params["FaxEnabled"] = fax_enabled.to_s if !fax_enabled.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_available_phone_number_machine_to_machine",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [ListAvailablePhoneNumberMobileResponse]
    def list_available_phone_number_mobile(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_available_phone_number_mobile_with_http_info(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [Array<(ListAvailablePhoneNumberMobileResponse, Integer, Hash)>] ListAvailablePhoneNumberMobileResponse data, response status code and response headers
    def list_available_phone_number_mobile_with_http_info(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_available_phone_number_mobile(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_available_phone_number_mobile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAvailablePhoneNumberMobileResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return nil
    def list_available_phone_number_mobile(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_available_phone_number_mobile(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_available_phone_number_mobile(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_available_phone_number_mobile ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_mobile, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_mobile, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Mobile.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CountryCode" + "}", URI.encode_path(country_code.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["AreaCode"] = area_code.to_s if !area_code.nil?
      query_params["Contains"] = contains.to_s if !contains.nil?
      query_params["SmsEnabled"] = sms_enabled.to_s if !sms_enabled.nil?
      query_params["MmsEnabled"] = mms_enabled.to_s if !mms_enabled.nil?
      query_params["VoiceEnabled"] = voice_enabled.to_s if !voice_enabled.nil?
      query_params["ExcludeAllAddressRequired"] = exclude_all_address_required.to_s if !exclude_all_address_required.nil?
      query_params["ExcludeLocalAddressRequired"] = exclude_local_address_required.to_s if !exclude_local_address_required.nil?
      query_params["ExcludeForeignAddressRequired"] = exclude_foreign_address_required.to_s if !exclude_foreign_address_required.nil?
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["NearNumber"] = near_number.to_s if !near_number.nil?
      query_params["NearLatLong"] = near_lat_long.to_s if !near_lat_long.nil?
      query_params["Distance"] = distance.to_s if !distance.nil?
      query_params["InPostalCode"] = in_postal_code.to_s if !in_postal_code.nil?
      query_params["InRegion"] = in_region.to_s if !in_region.nil?
      query_params["InRateCenter"] = in_rate_center.to_s if !in_rate_center.nil?
      query_params["InLata"] = in_lata.to_s if !in_lata.nil?
      query_params["InLocality"] = in_locality.to_s if !in_locality.nil?
      query_params["FaxEnabled"] = fax_enabled.to_s if !fax_enabled.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_available_phone_number_mobile",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [ListAvailablePhoneNumberNationalResponse]
    def list_available_phone_number_national(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_available_phone_number_national_with_http_info(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [Array<(ListAvailablePhoneNumberNationalResponse, Integer, Hash)>] ListAvailablePhoneNumberNationalResponse data, response status code and response headers
    def list_available_phone_number_national_with_http_info(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_available_phone_number_national(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_available_phone_number_national\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAvailablePhoneNumberNationalResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return nil
    def list_available_phone_number_national(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_available_phone_number_national(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_available_phone_number_national(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_available_phone_number_national ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_national, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_national, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_national, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_national, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_national, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/National.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CountryCode" + "}", URI.encode_path(country_code.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["AreaCode"] = area_code.to_s if !area_code.nil?
      query_params["Contains"] = contains.to_s if !contains.nil?
      query_params["SmsEnabled"] = sms_enabled.to_s if !sms_enabled.nil?
      query_params["MmsEnabled"] = mms_enabled.to_s if !mms_enabled.nil?
      query_params["VoiceEnabled"] = voice_enabled.to_s if !voice_enabled.nil?
      query_params["ExcludeAllAddressRequired"] = exclude_all_address_required.to_s if !exclude_all_address_required.nil?
      query_params["ExcludeLocalAddressRequired"] = exclude_local_address_required.to_s if !exclude_local_address_required.nil?
      query_params["ExcludeForeignAddressRequired"] = exclude_foreign_address_required.to_s if !exclude_foreign_address_required.nil?
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["NearNumber"] = near_number.to_s if !near_number.nil?
      query_params["NearLatLong"] = near_lat_long.to_s if !near_lat_long.nil?
      query_params["Distance"] = distance.to_s if !distance.nil?
      query_params["InPostalCode"] = in_postal_code.to_s if !in_postal_code.nil?
      query_params["InRegion"] = in_region.to_s if !in_region.nil?
      query_params["InRateCenter"] = in_rate_center.to_s if !in_rate_center.nil?
      query_params["InLata"] = in_lata.to_s if !in_lata.nil?
      query_params["InLocality"] = in_locality.to_s if !in_locality.nil?
      query_params["FaxEnabled"] = fax_enabled.to_s if !fax_enabled.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_available_phone_number_national",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [ListAvailablePhoneNumberSharedCostResponse]
    def list_available_phone_number_shared_cost(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_available_phone_number_shared_cost_with_http_info(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [Array<(ListAvailablePhoneNumberSharedCostResponse, Integer, Hash)>] ListAvailablePhoneNumberSharedCostResponse data, response status code and response headers
    def list_available_phone_number_shared_cost_with_http_info(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_available_phone_number_shared_cost(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_available_phone_number_shared_cost\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAvailablePhoneNumberSharedCostResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return nil
    def list_available_phone_number_shared_cost(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_available_phone_number_shared_cost(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_available_phone_number_shared_cost(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_available_phone_number_shared_cost ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_shared_cost, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_shared_cost, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_shared_cost, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_shared_cost, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_shared_cost, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/SharedCost.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CountryCode" + "}", URI.encode_path(country_code.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["AreaCode"] = area_code.to_s if !area_code.nil?
      query_params["Contains"] = contains.to_s if !contains.nil?
      query_params["SmsEnabled"] = sms_enabled.to_s if !sms_enabled.nil?
      query_params["MmsEnabled"] = mms_enabled.to_s if !mms_enabled.nil?
      query_params["VoiceEnabled"] = voice_enabled.to_s if !voice_enabled.nil?
      query_params["ExcludeAllAddressRequired"] = exclude_all_address_required.to_s if !exclude_all_address_required.nil?
      query_params["ExcludeLocalAddressRequired"] = exclude_local_address_required.to_s if !exclude_local_address_required.nil?
      query_params["ExcludeForeignAddressRequired"] = exclude_foreign_address_required.to_s if !exclude_foreign_address_required.nil?
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["NearNumber"] = near_number.to_s if !near_number.nil?
      query_params["NearLatLong"] = near_lat_long.to_s if !near_lat_long.nil?
      query_params["Distance"] = distance.to_s if !distance.nil?
      query_params["InPostalCode"] = in_postal_code.to_s if !in_postal_code.nil?
      query_params["InRegion"] = in_region.to_s if !in_region.nil?
      query_params["InRateCenter"] = in_rate_center.to_s if !in_rate_center.nil?
      query_params["InLata"] = in_lata.to_s if !in_lata.nil?
      query_params["InLocality"] = in_locality.to_s if !in_locality.nil?
      query_params["FaxEnabled"] = fax_enabled.to_s if !fax_enabled.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_available_phone_number_shared_cost",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [ListAvailablePhoneNumberTollFreeResponse]
    def list_available_phone_number_toll_free(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_available_phone_number_toll_free_with_http_info(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [Array<(ListAvailablePhoneNumberTollFreeResponse, Integer, Hash)>] ListAvailablePhoneNumberTollFreeResponse data, response status code and response headers
    def list_available_phone_number_toll_free_with_http_info(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_available_phone_number_toll_free(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_available_phone_number_toll_free\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAvailablePhoneNumberTollFreeResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return nil
    def list_available_phone_number_toll_free(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_available_phone_number_toll_free(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_available_phone_number_toll_free(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_available_phone_number_toll_free ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_toll_free, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_toll_free, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/TollFree.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CountryCode" + "}", URI.encode_path(country_code.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["AreaCode"] = area_code.to_s if !area_code.nil?
      query_params["Contains"] = contains.to_s if !contains.nil?
      query_params["SmsEnabled"] = sms_enabled.to_s if !sms_enabled.nil?
      query_params["MmsEnabled"] = mms_enabled.to_s if !mms_enabled.nil?
      query_params["VoiceEnabled"] = voice_enabled.to_s if !voice_enabled.nil?
      query_params["ExcludeAllAddressRequired"] = exclude_all_address_required.to_s if !exclude_all_address_required.nil?
      query_params["ExcludeLocalAddressRequired"] = exclude_local_address_required.to_s if !exclude_local_address_required.nil?
      query_params["ExcludeForeignAddressRequired"] = exclude_foreign_address_required.to_s if !exclude_foreign_address_required.nil?
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["NearNumber"] = near_number.to_s if !near_number.nil?
      query_params["NearLatLong"] = near_lat_long.to_s if !near_lat_long.nil?
      query_params["Distance"] = distance.to_s if !distance.nil?
      query_params["InPostalCode"] = in_postal_code.to_s if !in_postal_code.nil?
      query_params["InRegion"] = in_region.to_s if !in_region.nil?
      query_params["InRateCenter"] = in_rate_center.to_s if !in_rate_center.nil?
      query_params["InLata"] = in_lata.to_s if !in_lata.nil?
      query_params["InLocality"] = in_locality.to_s if !in_locality.nil?
      query_params["FaxEnabled"] = fax_enabled.to_s if !fax_enabled.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_available_phone_number_toll_free",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [ListAvailablePhoneNumberVoipResponse]
    def list_available_phone_number_voip(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_available_phone_number_voip_with_http_info(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return [Array<(ListAvailablePhoneNumberVoipResponse, Integer, Hash)>] ListAvailablePhoneNumberVoipResponse data, response status code and response headers
    def list_available_phone_number_voip_with_http_info(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_available_phone_number_voip(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_available_phone_number_voip\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListAvailablePhoneNumberVoipResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
    # @param country_code [String] The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
    # @return nil
    def list_available_phone_number_voip(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_available_phone_number_voip(account_sid: account_sid, country_code: country_code, area_code: area_code, contains: contains, sms_enabled: sms_enabled, mms_enabled: mms_enabled, voice_enabled: voice_enabled, exclude_all_address_required: exclude_all_address_required, exclude_local_address_required: exclude_local_address_required, exclude_foreign_address_required: exclude_foreign_address_required, beta: beta, near_number: near_number, near_lat_long: near_lat_long, distance: distance, in_postal_code: in_postal_code, in_region: in_region, in_rate_center: in_rate_center, in_lata: in_lata, in_locality: in_locality, fax_enabled: fax_enabled, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_available_phone_number_voip(*, account_sid : String = @account_sid, country_code : String, area_code : Int32? = nil, contains : String? = nil, sms_enabled : Bool? = nil, mms_enabled : Bool? = nil, voice_enabled : Bool? = nil, exclude_all_address_required : Bool? = nil, exclude_local_address_required : Bool? = nil, exclude_foreign_address_required : Bool? = nil, beta : Bool? = nil, near_number : String? = nil, near_lat_long : String? = nil, distance : Int32? = nil, in_postal_code : String? = nil, in_region : String? = nil, in_rate_center : String? = nil, in_lata : String? = nil, in_locality : String? = nil, fax_enabled : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_available_phone_number_voip ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_voip, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_voip, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_available_phone_number_voip, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_voip, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_available_phone_number_voip, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Voip.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CountryCode" + "}", URI.encode_path(country_code.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["AreaCode"] = area_code.to_s if !area_code.nil?
      query_params["Contains"] = contains.to_s if !contains.nil?
      query_params["SmsEnabled"] = sms_enabled.to_s if !sms_enabled.nil?
      query_params["MmsEnabled"] = mms_enabled.to_s if !mms_enabled.nil?
      query_params["VoiceEnabled"] = voice_enabled.to_s if !voice_enabled.nil?
      query_params["ExcludeAllAddressRequired"] = exclude_all_address_required.to_s if !exclude_all_address_required.nil?
      query_params["ExcludeLocalAddressRequired"] = exclude_local_address_required.to_s if !exclude_local_address_required.nil?
      query_params["ExcludeForeignAddressRequired"] = exclude_foreign_address_required.to_s if !exclude_foreign_address_required.nil?
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["NearNumber"] = near_number.to_s if !near_number.nil?
      query_params["NearLatLong"] = near_lat_long.to_s if !near_lat_long.nil?
      query_params["Distance"] = distance.to_s if !distance.nil?
      query_params["InPostalCode"] = in_postal_code.to_s if !in_postal_code.nil?
      query_params["InRegion"] = in_region.to_s if !in_region.nil?
      query_params["InRateCenter"] = in_rate_center.to_s if !in_rate_center.nil?
      query_params["InLata"] = in_lata.to_s if !in_lata.nil?
      query_params["InLocality"] = in_locality.to_s if !in_locality.nil?
      query_params["FaxEnabled"] = fax_enabled.to_s if !fax_enabled.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_available_phone_number_voip",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieves a collection of calls made to and from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to read.
    # @return [ListCallResponse]
    def list_call(*, account_sid : String = @account_sid, to : String? = nil, from : String? = nil, parent_call_sid : String? = nil, status : String? = nil, start_time : Time? = nil, start_time_before : Time? = nil, start_time_after : Time? = nil, end_time : Time? = nil, end_time_before : Time? = nil, end_time_after : Time? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_call_with_http_info(account_sid: account_sid, to: to, from: from, parent_call_sid: parent_call_sid, status: status, start_time: start_time, start_time_before: start_time_before, start_time_after: start_time_after, end_time: end_time, end_time_before: end_time_before, end_time_after: end_time_after, page_size: page_size)
      data
    end

    # Retrieves a collection of calls made to and from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to read.
    # @return [Array<(ListCallResponse, Integer, Hash)>] ListCallResponse data, response status code and response headers
    def list_call_with_http_info(*, account_sid : String = @account_sid, to : String? = nil, from : String? = nil, parent_call_sid : String? = nil, status : String? = nil, start_time : Time? = nil, start_time_before : Time? = nil, start_time_after : Time? = nil, end_time : Time? = nil, end_time_before : Time? = nil, end_time_after : Time? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_call(account_sid: account_sid, to: to, from: from, parent_call_sid: parent_call_sid, status: status, start_time: start_time, start_time_before: start_time_before, start_time_after: start_time_after, end_time: end_time, end_time_before: end_time_before, end_time_after: end_time_after, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_call\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListCallResponse.from_json(data), status_code, headers
    end

    # Retrieves a collection of calls made to and from your account
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to read.
    # @return nil
    def list_call(*, account_sid : String = @account_sid, to : String? = nil, from : String? = nil, parent_call_sid : String? = nil, status : String? = nil, start_time : Time? = nil, start_time_before : Time? = nil, start_time_after : Time? = nil, end_time : Time? = nil, end_time_before : Time? = nil, end_time_after : Time? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_call(account_sid: account_sid, to: to, from: from, parent_call_sid: parent_call_sid, status: status, start_time: start_time, start_time_before: start_time_before, start_time_after: start_time_after, end_time: end_time, end_time_before: end_time_before, end_time_after: end_time_after, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_call(*, account_sid : String = @account_sid, to : String? = nil, from : String? = nil, parent_call_sid : String? = nil, status : String? = nil, start_time : Time? = nil, start_time_before : Time? = nil, start_time_after : Time? = nil, end_time : Time? = nil, end_time_before : Time? = nil, end_time_after : Time? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_call ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !parent_call_sid.nil? && parent_call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"parent_call_sid\" when calling DefaultApi.list_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !parent_call_sid.nil? && parent_call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"parent_call_sid\" when calling DefaultApi.list_call, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !parent_call_sid.nil? && parent_call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"parent_call_sid\" when calling DefaultApi.list_call, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["queued", "ringing", "in-progress", "completed", "busy", "failed", "no-answer", "canceled"]
      if @api_client.config.client_side_validation && !status.nil? && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_call, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_call, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["To"] = to.to_s if !to.nil?
      query_params["From"] = from.to_s if !from.nil?
      query_params["ParentCallSid"] = parent_call_sid.to_s if !parent_call_sid.nil?
      query_params["Status"] = status.to_s if !status.nil?
      query_params["StartTime"] = Time::Format::RFC_2822.format(start_time) if !start_time.nil?
      query_params["StartTime<"] = Time::Format::RFC_2822.format(start_time_before) if !start_time_before.nil?
      query_params["StartTime>"] = Time::Format::RFC_2822.format(start_time_after) if !start_time_after.nil?
      query_params["EndTime"] = Time::Format::RFC_2822.format(end_time) if !end_time.nil?
      query_params["EndTime<"] = Time::Format::RFC_2822.format(end_time_before) if !end_time_before.nil?
      query_params["EndTime>"] = Time::Format::RFC_2822.format(end_time_after) if !end_time_after.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_call",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of all events for a call.
    # @param account_sid [String] The unique SID identifier of the Account.
    # @param call_sid [String] The unique SID identifier of the Call.
    # @return [ListCallEventResponse]
    def list_call_event(*, account_sid : String = @account_sid, call_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_call_event_with_http_info(account_sid: account_sid, call_sid: call_sid, page_size: page_size)
      data
    end

    # Retrieve a list of all events for a call.
    # @param account_sid [String] The unique SID identifier of the Account.
    # @param call_sid [String] The unique SID identifier of the Call.
    # @return [Array<(ListCallEventResponse, Integer, Hash)>] ListCallEventResponse data, response status code and response headers
    def list_call_event_with_http_info(*, account_sid : String = @account_sid, call_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_call_event(account_sid: account_sid, call_sid: call_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_call_event\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListCallEventResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of all events for a call.
    # @param account_sid [String] The unique SID identifier of the Account.
    # @param call_sid [String] The unique SID identifier of the Call.
    # @return nil
    def list_call_event(*, account_sid : String = @account_sid, call_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_call_event(account_sid: account_sid, call_sid: call_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_call_event(*, account_sid : String = @account_sid, call_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_call_event ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_event, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_event, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_event, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_event, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_event, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_event, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_call_event, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_call_event, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Events.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_call_event",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resources to read.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the Call Notification resources to read.
    # @return [ListCallNotificationResponse]
    def list_call_notification(*, account_sid : String = @account_sid, call_sid : String, log : Int32? = nil, message_date : Time? = nil, message_date_before : Time? = nil, message_date_after : Time? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_call_notification_with_http_info(account_sid: account_sid, call_sid: call_sid, log: log, message_date: message_date, message_date_before: message_date_before, message_date_after: message_date_after, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resources to read.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the Call Notification resources to read.
    # @return [Array<(ListCallNotificationResponse, Integer, Hash)>] ListCallNotificationResponse data, response status code and response headers
    def list_call_notification_with_http_info(*, account_sid : String = @account_sid, call_sid : String, log : Int32? = nil, message_date : Time? = nil, message_date_before : Time? = nil, message_date_after : Time? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_call_notification(account_sid: account_sid, call_sid: call_sid, log: log, message_date: message_date, message_date_before: message_date_before, message_date_after: message_date_after, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_call_notification\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListCallNotificationResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call Notification resources to read.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the Call Notification resources to read.
    # @return nil
    def list_call_notification(*, account_sid : String = @account_sid, call_sid : String, log : Int32? = nil, message_date : Time? = nil, message_date_before : Time? = nil, message_date_after : Time? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_call_notification(account_sid: account_sid, call_sid: call_sid, log: log, message_date: message_date, message_date_before: message_date_before, message_date_after: message_date_after, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_call_notification(*, account_sid : String = @account_sid, call_sid : String, log : Int32? = nil, message_date : Time? = nil, message_date_before : Time? = nil, message_date_after : Time? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_call_notification ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_notification, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_notification, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_notification, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_notification, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_notification, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_notification, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_call_notification, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_call_notification, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Log"] = log.to_s if !log.nil?
      query_params["MessageDate"] = Time::Format::ISO_8601_DATE.format(message_date) if !message_date.nil?
      query_params["MessageDate<"] = Time::Format::ISO_8601_DATE.format(message_date_before) if !message_date_before.nil?
      query_params["MessageDate>"] = Time::Format::ISO_8601_DATE.format(message_date_after) if !message_date_after.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_call_notification",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of recordings belonging to the call used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to read.
    # @return [ListCallRecordingResponse]
    def list_call_recording(*, account_sid : String = @account_sid, call_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_call_recording_with_http_info(account_sid: account_sid, call_sid: call_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size)
      data
    end

    # Retrieve a list of recordings belonging to the call used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to read.
    # @return [Array<(ListCallRecordingResponse, Integer, Hash)>] ListCallRecordingResponse data, response status code and response headers
    def list_call_recording_with_http_info(*, account_sid : String = @account_sid, call_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_call_recording(account_sid: account_sid, call_sid: call_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_call_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListCallRecordingResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of recordings belonging to the call used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to read.
    # @return nil
    def list_call_recording(*, account_sid : String = @account_sid, call_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_call_recording(account_sid: account_sid, call_sid: call_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_call_recording(*, account_sid : String = @account_sid, call_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_call_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_call_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_call_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_call_recording, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_call_recording, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["DateCreated"] = Time::Format::ISO_8601_DATE.format(date_created) if !date_created.nil?
      query_params["DateCreated<"] = Time::Format::ISO_8601_DATE.format(date_created_before) if !date_created_before.nil?
      query_params["DateCreated>"] = Time::Format::ISO_8601_DATE.format(date_created_after) if !date_created_after.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_call_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of conferences belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to read.
    # @return [ListConferenceResponse]
    def list_conference(*, account_sid : String = @account_sid, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, date_updated : Time? = nil, date_updated_before : Time? = nil, date_updated_after : Time? = nil, friendly_name : String? = nil, status : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_conference_with_http_info(account_sid: account_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, date_updated: date_updated, date_updated_before: date_updated_before, date_updated_after: date_updated_after, friendly_name: friendly_name, status: status, page_size: page_size)
      data
    end

    # Retrieve a list of conferences belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to read.
    # @return [Array<(ListConferenceResponse, Integer, Hash)>] ListConferenceResponse data, response status code and response headers
    def list_conference_with_http_info(*, account_sid : String = @account_sid, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, date_updated : Time? = nil, date_updated_before : Time? = nil, date_updated_after : Time? = nil, friendly_name : String? = nil, status : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_conference(account_sid: account_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, date_updated: date_updated, date_updated_before: date_updated_before, date_updated_after: date_updated_after, friendly_name: friendly_name, status: status, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_conference\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListConferenceResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of conferences belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to read.
    # @return nil
    def list_conference(*, account_sid : String = @account_sid, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, date_updated : Time? = nil, date_updated_before : Time? = nil, date_updated_after : Time? = nil, friendly_name : String? = nil, status : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_conference(account_sid: account_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, date_updated: date_updated, date_updated_before: date_updated_before, date_updated_after: date_updated_after, friendly_name: friendly_name, status: status, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_conference(*, account_sid : String = @account_sid, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, date_updated : Time? = nil, date_updated_before : Time? = nil, date_updated_after : Time? = nil, friendly_name : String? = nil, status : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_conference ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_conference, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_conference, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_conference, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["init", "in-progress", "completed"]
      if @api_client.config.client_side_validation && !status.nil? && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_conference, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_conference, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["DateCreated"] = Time::Format::ISO_8601_DATE.format(date_created) if !date_created.nil?
      query_params["DateCreated<"] = Time::Format::ISO_8601_DATE.format(date_created_before) if !date_created_before.nil?
      query_params["DateCreated>"] = Time::Format::ISO_8601_DATE.format(date_created_after) if !date_created_after.nil?
      query_params["DateUpdated"] = Time::Format::ISO_8601_DATE.format(date_updated) if !date_updated.nil?
      query_params["DateUpdated<"] = Time::Format::ISO_8601_DATE.format(date_updated_before) if !date_updated_before.nil?
      query_params["DateUpdated>"] = Time::Format::ISO_8601_DATE.format(date_updated_after) if !date_updated_after.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["Status"] = status.to_s if !status.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_conference",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of recordings belonging to the call used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resources to read.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to read.
    # @return [ListConferenceRecordingResponse]
    def list_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_conference_recording_with_http_info(account_sid: account_sid, conference_sid: conference_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size)
      data
    end

    # Retrieve a list of recordings belonging to the call used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resources to read.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to read.
    # @return [Array<(ListConferenceRecordingResponse, Integer, Hash)>] ListConferenceRecordingResponse data, response status code and response headers
    def list_conference_recording_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_conference_recording(account_sid: account_sid, conference_sid: conference_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_conference_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListConferenceRecordingResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of recordings belonging to the call used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resources to read.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to read.
    # @return nil
    def list_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_conference_recording(account_sid: account_sid, conference_sid: conference_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_conference_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_conference_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_conference_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_conference_recording, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_conference_recording, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["DateCreated"] = Time::Format::ISO_8601_DATE.format(date_created) if !date_created.nil?
      query_params["DateCreated<"] = Time::Format::ISO_8601_DATE.format(date_created_before) if !date_created_before.nil?
      query_params["DateCreated>"] = Time::Format::ISO_8601_DATE.format(date_created_after) if !date_created_after.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_conference_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of connect-apps belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to read.
    # @return [ListConnectAppResponse]
    def list_connect_app(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_connect_app_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    # Retrieve a list of connect-apps belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to read.
    # @return [Array<(ListConnectAppResponse, Integer, Hash)>] ListConnectAppResponse data, response status code and response headers
    def list_connect_app_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_connect_app(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_connect_app\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListConnectAppResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of connect-apps belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to read.
    # @return nil
    def list_connect_app(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_connect_app(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_connect_app(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_connect_app ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_connect_app, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_connect_app, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_connect_app, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/ConnectApps.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_connect_app",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the DependentPhoneNumber resources to read.
    # @param address_sid [String] The SID of the Address resource associated with the phone number.
    # @return [ListDependentPhoneNumberResponse]
    def list_dependent_phone_number(*, account_sid : String = @account_sid, address_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_dependent_phone_number_with_http_info(account_sid: account_sid, address_sid: address_sid, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the DependentPhoneNumber resources to read.
    # @param address_sid [String] The SID of the Address resource associated with the phone number.
    # @return [Array<(ListDependentPhoneNumberResponse, Integer, Hash)>] ListDependentPhoneNumberResponse data, response status code and response headers
    def list_dependent_phone_number_with_http_info(*, account_sid : String = @account_sid, address_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_dependent_phone_number(account_sid: account_sid, address_sid: address_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_dependent_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListDependentPhoneNumberResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the DependentPhoneNumber resources to read.
    # @param address_sid [String] The SID of the Address resource associated with the phone number.
    # @return nil
    def list_dependent_phone_number(*, account_sid : String = @account_sid, address_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_dependent_phone_number(account_sid: account_sid, address_sid: address_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_dependent_phone_number(*, account_sid : String = @account_sid, address_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_dependent_phone_number ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_dependent_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_dependent_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_dependent_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.list_dependent_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.list_dependent_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.list_dependent_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_dependent_phone_number, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_dependent_phone_number, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Addresses/{AddressSid}/DependentPhoneNumbers.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "AddressSid" + "}", URI.encode_path(address_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_dependent_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to read.
    # @return [ListIncomingPhoneNumberResponse]
    def list_incoming_phone_number(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_incoming_phone_number_with_http_info(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)
      data
    end

    # Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to read.
    # @return [Array<(ListIncomingPhoneNumberResponse, Integer, Hash)>] ListIncomingPhoneNumberResponse data, response status code and response headers
    def list_incoming_phone_number_with_http_info(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_incoming_phone_number(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_incoming_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListIncomingPhoneNumberResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to read.
    # @return nil
    def list_incoming_phone_number(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_incoming_phone_number(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_incoming_phone_number ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["Origin"] = origin.to_s if !origin.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of Add-on installations currently assigned to this Number.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @return [ListIncomingPhoneNumberAssignedAddOnResponse]
    def list_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_incoming_phone_number_assigned_add_on_with_http_info(account_sid: account_sid, resource_sid: resource_sid, page_size: page_size)
      data
    end

    # Retrieve a list of Add-on installations currently assigned to this Number.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @return [Array<(ListIncomingPhoneNumberAssignedAddOnResponse, Integer, Hash)>] ListIncomingPhoneNumberAssignedAddOnResponse data, response status code and response headers
    def list_incoming_phone_number_assigned_add_on_with_http_info(*, account_sid : String = @account_sid, resource_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_incoming_phone_number_assigned_add_on\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListIncomingPhoneNumberAssignedAddOnResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of Add-on installations currently assigned to this Number.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @return nil
    def list_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_assigned_add_on(*, account_sid : String = @account_sid, resource_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_incoming_phone_number_assigned_add_on ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && resource_sid !~ pattern
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_incoming_phone_number_assigned_add_on",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of Extensions for the Assigned Add-on.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param assigned_add_on_sid [String] The SID that uniquely identifies the assigned Add-on installation.
    # @return [ListIncomingPhoneNumberAssignedAddOnExtensionResponse]
    def list_incoming_phone_number_assigned_add_on_extension(*, account_sid : String = @account_sid, resource_sid : String, assigned_add_on_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_incoming_phone_number_assigned_add_on_extension_with_http_info(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, page_size: page_size)
      data
    end

    # Retrieve a list of Extensions for the Assigned Add-on.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param assigned_add_on_sid [String] The SID that uniquely identifies the assigned Add-on installation.
    # @return [Array<(ListIncomingPhoneNumberAssignedAddOnExtensionResponse, Integer, Hash)>] ListIncomingPhoneNumberAssignedAddOnExtensionResponse data, response status code and response headers
    def list_incoming_phone_number_assigned_add_on_extension_with_http_info(*, account_sid : String = @account_sid, resource_sid : String, assigned_add_on_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_incoming_phone_number_assigned_add_on_extension(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_incoming_phone_number_assigned_add_on_extension\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListIncomingPhoneNumberAssignedAddOnExtensionResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of Extensions for the Assigned Add-on.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @param resource_sid [String] The SID of the Phone Number to which the Add-on is assigned.
    # @param assigned_add_on_sid [String] The SID that uniquely identifies the assigned Add-on installation.
    # @return nil
    def list_incoming_phone_number_assigned_add_on_extension(*, account_sid : String = @account_sid, resource_sid : String, assigned_add_on_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_incoming_phone_number_assigned_add_on_extension(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_assigned_add_on_extension(*, account_sid : String = @account_sid, resource_sid : String, assigned_add_on_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_incoming_phone_number_assigned_add_on_extension ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && resource_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && resource_sid !~ pattern
        raise ArgumentError.new("invalid value for \"resource_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && assigned_add_on_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"assigned_add_on_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && assigned_add_on_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"assigned_add_on_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, the character length must be great than or equal to 34.")
      end

      pattern = /^XE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && assigned_add_on_sid !~ pattern
        raise ArgumentError.new("invalid value for \"assigned_add_on_sid\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_assigned_add_on_extension, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s)).sub("{" + "AssignedAddOnSid" + "}", URI.encode_path(assigned_add_on_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_incoming_phone_number_assigned_add_on_extension",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return [ListIncomingPhoneNumberLocalResponse]
    def list_incoming_phone_number_local(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_incoming_phone_number_local_with_http_info(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return [Array<(ListIncomingPhoneNumberLocalResponse, Integer, Hash)>] ListIncomingPhoneNumberLocalResponse data, response status code and response headers
    def list_incoming_phone_number_local_with_http_info(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_incoming_phone_number_local(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_incoming_phone_number_local\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListIncomingPhoneNumberLocalResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return nil
    def list_incoming_phone_number_local(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_incoming_phone_number_local(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_local(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_incoming_phone_number_local ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_local, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_local, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_local, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_local, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_local, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["Origin"] = origin.to_s if !origin.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_incoming_phone_number_local",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return [ListIncomingPhoneNumberMobileResponse]
    def list_incoming_phone_number_mobile(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_incoming_phone_number_mobile_with_http_info(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return [Array<(ListIncomingPhoneNumberMobileResponse, Integer, Hash)>] ListIncomingPhoneNumberMobileResponse data, response status code and response headers
    def list_incoming_phone_number_mobile_with_http_info(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_incoming_phone_number_mobile(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_incoming_phone_number_mobile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListIncomingPhoneNumberMobileResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return nil
    def list_incoming_phone_number_mobile(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_incoming_phone_number_mobile(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_mobile(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_incoming_phone_number_mobile ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_mobile, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_mobile, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_mobile, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_mobile, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_mobile, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["Origin"] = origin.to_s if !origin.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_incoming_phone_number_mobile",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return [ListIncomingPhoneNumberTollFreeResponse]
    def list_incoming_phone_number_toll_free(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_incoming_phone_number_toll_free_with_http_info(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return [Array<(ListIncomingPhoneNumberTollFreeResponse, Integer, Hash)>] ListIncomingPhoneNumberTollFreeResponse data, response status code and response headers
    def list_incoming_phone_number_toll_free_with_http_info(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_incoming_phone_number_toll_free(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_incoming_phone_number_toll_free\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListIncomingPhoneNumberTollFreeResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @return nil
    def list_incoming_phone_number_toll_free(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_incoming_phone_number_toll_free(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_toll_free(*, account_sid : String = @account_sid, beta : Bool? = nil, friendly_name : String? = nil, phone_number : String? = nil, origin : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_incoming_phone_number_toll_free ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_toll_free, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_toll_free, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_incoming_phone_number_toll_free, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_toll_free, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_incoming_phone_number_toll_free, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["Origin"] = origin.to_s if !origin.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_incoming_phone_number_toll_free",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to read.
    # @return [ListKeyResponse]
    def list_key(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_key_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to read.
    # @return [Array<(ListKeyResponse, Integer, Hash)>] ListKeyResponse data, response status code and response headers
    def list_key_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_key(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListKeyResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to read.
    # @return nil
    def list_key(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_key(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_key(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_key, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_key, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_key, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Keys.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of Media resources belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to read.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @return [ListMediaResponse]
    def list_media(*, account_sid : String = @account_sid, message_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_media_with_http_info(account_sid: account_sid, message_sid: message_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size)
      data
    end

    # Retrieve a list of Media resources belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to read.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @return [Array<(ListMediaResponse, Integer, Hash)>] ListMediaResponse data, response status code and response headers
    def list_media_with_http_info(*, account_sid : String = @account_sid, message_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_media(account_sid: account_sid, message_sid: message_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_media\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListMediaResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of Media resources belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to read.
    # @param message_sid [String] The SID of the Message resource that this Media resource belongs to.
    # @return nil
    def list_media(*, account_sid : String = @account_sid, message_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_media(account_sid: account_sid, message_sid: message_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_media(*, account_sid : String = @account_sid, message_sid : String, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_media ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_media, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_media, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_media, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && message_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.list_media, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && message_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.list_media, the character length must be great than or equal to 34.")
      end

      pattern = /^(SM|MM)[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && message_sid !~ pattern
        raise ArgumentError.new("invalid value for \"message_sid\" when calling DefaultApi.list_media, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_media, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_media, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "MessageSid" + "}", URI.encode_path(message_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["DateCreated"] = Time::Format::RFC_2822.format(date_created) if !date_created.nil?
      query_params["DateCreated<"] = Time::Format::RFC_2822.format(date_created_before) if !date_created_before.nil?
      query_params["DateCreated>"] = Time::Format::RFC_2822.format(date_created_after) if !date_created_after.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_media",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve the members of the queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to read.
    # @param queue_sid [String] The SID of the Queue in which to find the members
    # @return [ListMemberResponse]
    def list_member(*, account_sid : String = @account_sid, queue_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_member_with_http_info(account_sid: account_sid, queue_sid: queue_sid, page_size: page_size)
      data
    end

    # Retrieve the members of the queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to read.
    # @param queue_sid [String] The SID of the Queue in which to find the members
    # @return [Array<(ListMemberResponse, Integer, Hash)>] ListMemberResponse data, response status code and response headers
    def list_member_with_http_info(*, account_sid : String = @account_sid, queue_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_member(account_sid: account_sid, queue_sid: queue_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_member\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListMemberResponse.from_json(data), status_code, headers
    end

    # Retrieve the members of the queue
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to read.
    # @param queue_sid [String] The SID of the Queue in which to find the members
    # @return nil
    def list_member(*, account_sid : String = @account_sid, queue_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_member(account_sid: account_sid, queue_sid: queue_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_member(*, account_sid : String = @account_sid, queue_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_member ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_member, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_member, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_member, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && queue_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.list_member, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && queue_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.list_member, the character length must be great than or equal to 34.")
      end

      pattern = /^QU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && queue_sid !~ pattern
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.list_member, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_member, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_member, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "QueueSid" + "}", URI.encode_path(queue_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_member",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of messages belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to read.
    # @return [ListMessageResponse]
    def list_message(*, account_sid : String = @account_sid, to : String? = nil, from : String? = nil, date_sent : Time? = nil, date_sent_before : Time? = nil, date_sent_after : Time? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_message_with_http_info(account_sid: account_sid, to: to, from: from, date_sent: date_sent, date_sent_before: date_sent_before, date_sent_after: date_sent_after, page_size: page_size)
      data
    end

    # Retrieve a list of messages belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to read.
    # @return [Array<(ListMessageResponse, Integer, Hash)>] ListMessageResponse data, response status code and response headers
    def list_message_with_http_info(*, account_sid : String = @account_sid, to : String? = nil, from : String? = nil, date_sent : Time? = nil, date_sent_before : Time? = nil, date_sent_after : Time? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_message(account_sid: account_sid, to: to, from: from, date_sent: date_sent, date_sent_before: date_sent_before, date_sent_after: date_sent_after, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_message\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListMessageResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of messages belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to read.
    # @return nil
    def list_message(*, account_sid : String = @account_sid, to : String? = nil, from : String? = nil, date_sent : Time? = nil, date_sent_before : Time? = nil, date_sent_after : Time? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_message(account_sid: account_sid, to: to, from: from, date_sent: date_sent, date_sent_before: date_sent_before, date_sent_after: date_sent_after, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_message(*, account_sid : String = @account_sid, to : String? = nil, from : String? = nil, date_sent : Time? = nil, date_sent_before : Time? = nil, date_sent_after : Time? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_message ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_message, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_message, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_message, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_message, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["To"] = to.to_s if !to.nil?
      query_params["From"] = from.to_s if !from.nil?
      query_params["DateSent"] = Time::Format::RFC_2822.format(date_sent) if !date_sent.nil?
      query_params["DateSent<"] = Time::Format::RFC_2822.format(date_sent_before) if !date_sent_before.nil?
      query_params["DateSent>"] = Time::Format::RFC_2822.format(date_sent_after) if !date_sent_after.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_message",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of notifications belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resources to read.
    # @return [ListNotificationResponse]
    def list_notification(*, account_sid : String = @account_sid, log : Int32? = nil, message_date : Time? = nil, message_date_before : Time? = nil, message_date_after : Time? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_notification_with_http_info(account_sid: account_sid, log: log, message_date: message_date, message_date_before: message_date_before, message_date_after: message_date_after, page_size: page_size)
      data
    end

    # Retrieve a list of notifications belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resources to read.
    # @return [Array<(ListNotificationResponse, Integer, Hash)>] ListNotificationResponse data, response status code and response headers
    def list_notification_with_http_info(*, account_sid : String = @account_sid, log : Int32? = nil, message_date : Time? = nil, message_date_before : Time? = nil, message_date_after : Time? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_notification(account_sid: account_sid, log: log, message_date: message_date, message_date_before: message_date_before, message_date_after: message_date_after, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_notification\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListNotificationResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of notifications belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resources to read.
    # @return nil
    def list_notification(*, account_sid : String = @account_sid, log : Int32? = nil, message_date : Time? = nil, message_date_before : Time? = nil, message_date_after : Time? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_notification(account_sid: account_sid, log: log, message_date: message_date, message_date_before: message_date_before, message_date_after: message_date_after, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_notification(*, account_sid : String = @account_sid, log : Int32? = nil, message_date : Time? = nil, message_date_before : Time? = nil, message_date_after : Time? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_notification ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_notification, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_notification, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_notification, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_notification, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_notification, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Notifications.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Log"] = log.to_s if !log.nil?
      query_params["MessageDate"] = Time::Format::ISO_8601_DATE.format(message_date) if !message_date.nil?
      query_params["MessageDate<"] = Time::Format::ISO_8601_DATE.format(message_date_before) if !message_date_before.nil?
      query_params["MessageDate>"] = Time::Format::ISO_8601_DATE.format(message_date_after) if !message_date_after.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_notification",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of outgoing-caller-ids belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to read.
    # @return [ListOutgoingCallerIdResponse]
    def list_outgoing_caller_id(*, account_sid : String = @account_sid, phone_number : String? = nil, friendly_name : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_outgoing_caller_id_with_http_info(account_sid: account_sid, phone_number: phone_number, friendly_name: friendly_name, page_size: page_size)
      data
    end

    # Retrieve a list of outgoing-caller-ids belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to read.
    # @return [Array<(ListOutgoingCallerIdResponse, Integer, Hash)>] ListOutgoingCallerIdResponse data, response status code and response headers
    def list_outgoing_caller_id_with_http_info(*, account_sid : String = @account_sid, phone_number : String? = nil, friendly_name : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_outgoing_caller_id(account_sid: account_sid, phone_number: phone_number, friendly_name: friendly_name, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_outgoing_caller_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListOutgoingCallerIdResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of outgoing-caller-ids belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to read.
    # @return nil
    def list_outgoing_caller_id(*, account_sid : String = @account_sid, phone_number : String? = nil, friendly_name : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_outgoing_caller_id(account_sid: account_sid, phone_number: phone_number, friendly_name: friendly_name, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_outgoing_caller_id(*, account_sid : String = @account_sid, phone_number : String? = nil, friendly_name : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_outgoing_caller_id ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_outgoing_caller_id, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_outgoing_caller_id, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_outgoing_caller_id, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_outgoing_caller_id, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_outgoing_caller_id, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_outgoing_caller_id",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of participants belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to read.
    # @param conference_sid [String] The SID of the conference with the participants to read.
    # @return [ListParticipantResponse]
    def list_participant(*, account_sid : String = @account_sid, conference_sid : String, muted : Bool? = nil, hold : Bool? = nil, coaching : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_participant_with_http_info(account_sid: account_sid, conference_sid: conference_sid, muted: muted, hold: hold, coaching: coaching, page_size: page_size)
      data
    end

    # Retrieve a list of participants belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to read.
    # @param conference_sid [String] The SID of the conference with the participants to read.
    # @return [Array<(ListParticipantResponse, Integer, Hash)>] ListParticipantResponse data, response status code and response headers
    def list_participant_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, muted : Bool? = nil, hold : Bool? = nil, coaching : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_participant(account_sid: account_sid, conference_sid: conference_sid, muted: muted, hold: hold, coaching: coaching, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_participant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListParticipantResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of participants belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to read.
    # @param conference_sid [String] The SID of the conference with the participants to read.
    # @return nil
    def list_participant(*, account_sid : String = @account_sid, conference_sid : String, muted : Bool? = nil, hold : Bool? = nil, coaching : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_participant(account_sid: account_sid, conference_sid: conference_sid, muted: muted, hold: hold, coaching: coaching, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_participant(*, account_sid : String = @account_sid, conference_sid : String, muted : Bool? = nil, hold : Bool? = nil, coaching : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_participant ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_participant, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_participant, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_participant, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_participant, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Muted"] = muted.to_s if !muted.nil?
      query_params["Hold"] = hold.to_s if !hold.nil?
      query_params["Coaching"] = coaching.to_s if !coaching.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_participant",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of queues belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resources to read.
    # @return [ListQueueResponse]
    def list_queue(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_queue_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    # Retrieve a list of queues belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resources to read.
    # @return [Array<(ListQueueResponse, Integer, Hash)>] ListQueueResponse data, response status code and response headers
    def list_queue_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_queue(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListQueueResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of queues belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resources to read.
    # @return nil
    def list_queue(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_queue(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_queue(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_queue ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_queue, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_queue, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_queue, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_queue, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_queue, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Queues.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_queue",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of recordings belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.
    # @return [ListRecordingResponse]
    def list_recording(*, account_sid : String = @account_sid, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, call_sid : String? = nil, conference_sid : String? = nil, include_soft_deleted : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_recording_with_http_info(account_sid: account_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, call_sid: call_sid, conference_sid: conference_sid, include_soft_deleted: include_soft_deleted, page_size: page_size)
      data
    end

    # Retrieve a list of recordings belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.
    # @return [Array<(ListRecordingResponse, Integer, Hash)>] ListRecordingResponse data, response status code and response headers
    def list_recording_with_http_info(*, account_sid : String = @account_sid, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, call_sid : String? = nil, conference_sid : String? = nil, include_soft_deleted : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_recording(account_sid: account_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, call_sid: call_sid, conference_sid: conference_sid, include_soft_deleted: include_soft_deleted, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListRecordingResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of recordings belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.
    # @return nil
    def list_recording(*, account_sid : String = @account_sid, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, call_sid : String? = nil, conference_sid : String? = nil, include_soft_deleted : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_recording(account_sid: account_sid, date_created: date_created, date_created_before: date_created_before, date_created_after: date_created_after, call_sid: call_sid, conference_sid: conference_sid, include_soft_deleted: include_soft_deleted, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_recording(*, account_sid : String = @account_sid, date_created : Time? = nil, date_created_before : Time? = nil, date_created_after : Time? = nil, call_sid : String? = nil, conference_sid : String? = nil, include_soft_deleted : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !call_sid.nil? && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !call_sid.nil? && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !call_sid.nil? && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.list_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !conference_sid.nil? && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !conference_sid.nil? && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !conference_sid.nil? && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.list_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_recording, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_recording, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["DateCreated"] = Time::Format::RFC_2822.format(date_created) if !date_created.nil?
      query_params["DateCreated<"] = Time::Format::RFC_2822.format(date_created_before) if !date_created_before.nil?
      query_params["DateCreated>"] = Time::Format::RFC_2822.format(date_created_after) if !date_created_after.nil?
      query_params["CallSid"] = call_sid.to_s if !call_sid.nil?
      query_params["ConferenceSid"] = conference_sid.to_s if !conference_sid.nil?
      query_params["IncludeSoftDeleted"] = include_soft_deleted.to_s if !include_soft_deleted.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of results belonging to the recording
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resources to read.
    # @param reference_sid [String] The SID of the recording to which the result to read belongs.
    # @return [ListRecordingAddOnResultResponse]
    def list_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_recording_add_on_result_with_http_info(account_sid: account_sid, reference_sid: reference_sid, page_size: page_size)
      data
    end

    # Retrieve a list of results belonging to the recording
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resources to read.
    # @param reference_sid [String] The SID of the recording to which the result to read belongs.
    # @return [Array<(ListRecordingAddOnResultResponse, Integer, Hash)>] ListRecordingAddOnResultResponse data, response status code and response headers
    def list_recording_add_on_result_with_http_info(*, account_sid : String = @account_sid, reference_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_recording_add_on_result(account_sid: account_sid, reference_sid: reference_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_recording_add_on_result\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListRecordingAddOnResultResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of results belonging to the recording
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult resources to read.
    # @param reference_sid [String] The SID of the recording to which the result to read belongs.
    # @return nil
    def list_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_recording_add_on_result(account_sid: account_sid, reference_sid: reference_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_recording_add_on_result(*, account_sid : String = @account_sid, reference_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_recording_add_on_result ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_add_on_result, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_add_on_result, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_add_on_result, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.list_recording_add_on_result, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.list_recording_add_on_result, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && reference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.list_recording_add_on_result, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_recording_add_on_result, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_recording_add_on_result, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ReferenceSid" + "}", URI.encode_path(reference_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_recording_add_on_result",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of payloads belonging to the AddOnResult
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resources to read.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payloads to read belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payloads to read belongs.
    # @return [ListRecordingAddOnResultPayloadResponse]
    def list_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_recording_add_on_result_payload_with_http_info(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, page_size: page_size)
      data
    end

    # Retrieve a list of payloads belonging to the AddOnResult
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resources to read.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payloads to read belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payloads to read belongs.
    # @return [Array<(ListRecordingAddOnResultPayloadResponse, Integer, Hash)>] ListRecordingAddOnResultPayloadResponse data, response status code and response headers
    def list_recording_add_on_result_payload_with_http_info(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_recording_add_on_result_payload(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_recording_add_on_result_payload\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListRecordingAddOnResultPayloadResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of payloads belonging to the AddOnResult
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording AddOnResult Payload resources to read.
    # @param reference_sid [String] The SID of the recording to which the AddOnResult resource that contains the payloads to read belongs.
    # @param add_on_result_sid [String] The SID of the AddOnResult to which the payloads to read belongs.
    # @return nil
    def list_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_recording_add_on_result_payload(account_sid: account_sid, reference_sid: reference_sid, add_on_result_sid: add_on_result_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_recording_add_on_result_payload(*, account_sid : String = @account_sid, reference_sid : String, add_on_result_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_recording_add_on_result_payload ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.list_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && reference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.list_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && reference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"reference_sid\" when calling DefaultApi.list_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && add_on_result_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.list_recording_add_on_result_payload, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && add_on_result_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.list_recording_add_on_result_payload, the character length must be great than or equal to 34.")
      end

      pattern = /^XR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && add_on_result_sid !~ pattern
        raise ArgumentError.new("invalid value for \"add_on_result_sid\" when calling DefaultApi.list_recording_add_on_result_payload, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_recording_add_on_result_payload, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_recording_add_on_result_payload, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ReferenceSid" + "}", URI.encode_path(reference_sid.to_s)).sub("{" + "AddOnResultSid" + "}", URI.encode_path(add_on_result_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_recording_add_on_result_payload",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to read.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcriptions to read.
    # @return [ListRecordingTranscriptionResponse]
    def list_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_recording_transcription_with_http_info(account_sid: account_sid, recording_sid: recording_sid, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to read.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcriptions to read.
    # @return [Array<(ListRecordingTranscriptionResponse, Integer, Hash)>] ListRecordingTranscriptionResponse data, response status code and response headers
    def list_recording_transcription_with_http_info(*, account_sid : String = @account_sid, recording_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_recording_transcription(account_sid: account_sid, recording_sid: recording_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_recording_transcription\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListRecordingTranscriptionResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to read.
    # @param recording_sid [String] The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) that created the transcriptions to read.
    # @return nil
    def list_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_recording_transcription(account_sid: account_sid, recording_sid: recording_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_recording_transcription(*, account_sid : String = @account_sid, recording_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_recording_transcription ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_recording_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && recording_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.list_recording_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && recording_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.list_recording_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^RE[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && recording_sid !~ pattern
        raise ArgumentError.new("invalid value for \"recording_sid\" when calling DefaultApi.list_recording_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_recording_transcription, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_recording_transcription, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "RecordingSid" + "}", URI.encode_path(recording_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_recording_transcription",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of short-codes belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to read.
    # @return [ListShortCodeResponse]
    def list_short_code(*, account_sid : String = @account_sid, friendly_name : String? = nil, short_code : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_short_code_with_http_info(account_sid: account_sid, friendly_name: friendly_name, short_code: short_code, page_size: page_size)
      data
    end

    # Retrieve a list of short-codes belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to read.
    # @return [Array<(ListShortCodeResponse, Integer, Hash)>] ListShortCodeResponse data, response status code and response headers
    def list_short_code_with_http_info(*, account_sid : String = @account_sid, friendly_name : String? = nil, short_code : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_short_code(account_sid: account_sid, friendly_name: friendly_name, short_code: short_code, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_short_code\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListShortCodeResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of short-codes belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to read.
    # @return nil
    def list_short_code(*, account_sid : String = @account_sid, friendly_name : String? = nil, short_code : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_short_code(account_sid: account_sid, friendly_name: friendly_name, short_code: short_code, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_short_code(*, account_sid : String = @account_sid, friendly_name : String? = nil, short_code : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_short_code ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_short_code, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_short_code, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_short_code, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_short_code, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_short_code, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["ShortCode"] = short_code.to_s if !short_code.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_short_code",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String]
    # @return [ListSigningKeyResponse]
    def list_signing_key(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_signing_key_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    #
    # @param account_sid [String]
    # @return [Array<(ListSigningKeyResponse, Integer, Hash)>] ListSigningKeyResponse data, response status code and response headers
    def list_signing_key_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_signing_key(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_signing_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSigningKeyResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String]
    # @return nil
    def list_signing_key(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_signing_key(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_signing_key(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_signing_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_signing_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_signing_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_signing_key, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_signing_key, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_signing_key, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SigningKeys.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_signing_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of credential list mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return [ListSipAuthCallsCredentialListMappingResponse]
    def list_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_auth_calls_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)
      data
    end

    # Retrieve a list of credential list mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return [Array<(ListSipAuthCallsCredentialListMappingResponse, Integer, Hash)>] ListSipAuthCallsCredentialListMappingResponse data, response status code and response headers
    def list_sip_auth_calls_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_auth_calls_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_auth_calls_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipAuthCallsCredentialListMappingResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of credential list mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return nil
    def list_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_auth_calls_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_auth_calls_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_auth_calls_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_calls_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_calls_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_calls_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_auth_calls_credential_list_mapping, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_auth_calls_credential_list_mapping, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_auth_calls_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of IP Access Control List mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return [ListSipAuthCallsIpAccessControlListMappingResponse]
    def list_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_auth_calls_ip_access_control_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)
      data
    end

    # Retrieve a list of IP Access Control List mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return [Array<(ListSipAuthCallsIpAccessControlListMappingResponse, Integer, Hash)>] ListSipAuthCallsIpAccessControlListMappingResponse data, response status code and response headers
    def list_sip_auth_calls_ip_access_control_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_auth_calls_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_auth_calls_ip_access_control_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipAuthCallsIpAccessControlListMappingResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of IP Access Control List mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IpAccessControlListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return nil
    def list_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_auth_calls_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_auth_calls_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_auth_calls_ip_access_control_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of credential list mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return [ListSipAuthRegistrationsCredentialListMappingResponse]
    def list_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_auth_registrations_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)
      data
    end

    # Retrieve a list of credential list mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return [Array<(ListSipAuthRegistrationsCredentialListMappingResponse, Integer, Hash)>] ListSipAuthRegistrationsCredentialListMappingResponse data, response status code and response headers
    def list_sip_auth_registrations_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_auth_registrations_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_auth_registrations_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipAuthRegistrationsCredentialListMappingResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of credential list mappings belonging to the domain used in the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CredentialListMapping resources to read.
    # @param domain_sid [String] The SID of the SIP domain that contains the resources to read.
    # @return nil
    def list_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_auth_registrations_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_auth_registrations_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_auth_registrations_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_registrations_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_registrations_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_auth_registrations_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_auth_registrations_credential_list_mapping, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_auth_registrations_credential_list_mapping, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_auth_registrations_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of credentials.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credentials.
    # @return [ListSipCredentialResponse]
    def list_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_credential_with_http_info(account_sid: account_sid, credential_list_sid: credential_list_sid, page_size: page_size)
      data
    end

    # Retrieve a list of credentials.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credentials.
    # @return [Array<(ListSipCredentialResponse, Integer, Hash)>] ListSipCredentialResponse data, response status code and response headers
    def list_sip_credential_with_http_info(*, account_sid : String = @account_sid, credential_list_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipCredentialResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of credentials.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that contains the desired credentials.
    # @return nil
    def list_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_credential ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.list_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.list_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && credential_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.list_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_credential, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_credential, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CredentialListSid" + "}", URI.encode_path(credential_list_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_credential",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Get All Credential Lists
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @return [ListSipCredentialListResponse]
    def list_sip_credential_list(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_credential_list_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    # Get All Credential Lists
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @return [Array<(ListSipCredentialListResponse, Integer, Hash)>] ListSipCredentialListResponse data, response status code and response headers
    def list_sip_credential_list_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_credential_list(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_credential_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipCredentialListResponse.from_json(data), status_code, headers
    end

    # Get All Credential Lists
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @return nil
    def list_sip_credential_list(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_credential_list(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_credential_list(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_credential_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_credential_list, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_credential_list, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_credential_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Read multiple CredentialListMapping resources from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to read.
    # @return [ListSipCredentialListMappingResponse]
    def list_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_credential_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)
      data
    end

    # Read multiple CredentialListMapping resources from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to read.
    # @return [Array<(ListSipCredentialListMappingResponse, Integer, Hash)>] ListSipCredentialListMappingResponse data, response status code and response headers
    def list_sip_credential_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_credential_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipCredentialListMappingResponse.from_json(data), status_code, headers
    end

    # Read multiple CredentialListMapping resources from an account.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP Domain that includes the resource to read.
    # @return nil
    def list_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_credential_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_credential_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_credential_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_credential_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_credential_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_credential_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_credential_list_mapping, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_credential_list_mapping, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_credential_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of domains belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to read.
    # @return [ListSipDomainResponse]
    def list_sip_domain(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_domain_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    # Retrieve a list of domains belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to read.
    # @return [Array<(ListSipDomainResponse, Integer, Hash)>] ListSipDomainResponse data, response status code and response headers
    def list_sip_domain_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_domain(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipDomainResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of domains belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to read.
    # @return nil
    def list_sip_domain(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_domain(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_domain(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_domain ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_domain, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_domain, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_domain, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_domain",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of IpAccessControlLists that belong to the account used to make the request
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @return [ListSipIpAccessControlListResponse]
    def list_sip_ip_access_control_list(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_ip_access_control_list_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    # Retrieve a list of IpAccessControlLists that belong to the account used to make the request
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @return [Array<(ListSipIpAccessControlListResponse, Integer, Hash)>] ListSipIpAccessControlListResponse data, response status code and response headers
    def list_sip_ip_access_control_list_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_ip_access_control_list(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_ip_access_control_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipIpAccessControlListResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of IpAccessControlLists that belong to the account used to make the request
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @return nil
    def list_sip_ip_access_control_list(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_ip_access_control_list(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_ip_access_control_list(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_ip_access_control_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_access_control_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_access_control_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_access_control_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_ip_access_control_list, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_ip_access_control_list, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_ip_access_control_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of IpAccessControlListMapping resources.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @return [ListSipIpAccessControlListMappingResponse]
    def list_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_ip_access_control_list_mapping_with_http_info(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)
      data
    end

    # Retrieve a list of IpAccessControlListMapping resources.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @return [Array<(ListSipIpAccessControlListMappingResponse, Integer, Hash)>] ListSipIpAccessControlListMappingResponse data, response status code and response headers
    def list_sip_ip_access_control_list_mapping_with_http_info(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_ip_access_control_list_mapping\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipIpAccessControlListMappingResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of IpAccessControlListMapping resources.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param domain_sid [String] A 34 character string that uniquely identifies the SIP domain.
    # @return nil
    def list_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_ip_access_control_list_mapping(account_sid: account_sid, domain_sid: domain_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_ip_access_control_list_mapping(*, account_sid : String = @account_sid, domain_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_ip_access_control_list_mapping ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_ip_access_control_list_mapping, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && domain_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_ip_access_control_list_mapping, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && domain_sid !~ pattern
        raise ArgumentError.new("invalid value for \"domain_sid\" when calling DefaultApi.list_sip_ip_access_control_list_mapping, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_ip_access_control_list_mapping, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_ip_access_control_list_mapping, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "DomainSid" + "}", URI.encode_path(domain_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_ip_access_control_list_mapping",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Read multiple IpAddress resources.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to read.
    # @return [ListSipIpAddressResponse]
    def list_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, page_size : Int32? = nil)
      data, _status_code, _headers = list_sip_ip_address_with_http_info(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, page_size: page_size)
      data
    end

    # Read multiple IpAddress resources.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to read.
    # @return [Array<(ListSipIpAddressResponse, Integer, Hash)>] ListSipIpAddressResponse data, response status code and response headers
    def list_sip_ip_address_with_http_info(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, page_size : Int32? = nil)
      request = build_api_request_for_list_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_sip_ip_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListSipIpAddressResponse.from_json(data), status_code, headers
    end

    # Read multiple IpAddress resources.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to read.
    # @return nil
    def list_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_sip_ip_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.list_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.list_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && ip_access_control_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.list_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_ip_address, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_sip_ip_address, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "IpAccessControlListSid" + "}", URI.encode_path(ip_access_control_list_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_sip_ip_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of transcriptions belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to read.
    # @return [ListTranscriptionResponse]
    def list_transcription(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      data, _status_code, _headers = list_transcription_with_http_info(account_sid: account_sid, page_size: page_size)
      data
    end

    # Retrieve a list of transcriptions belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to read.
    # @return [Array<(ListTranscriptionResponse, Integer, Hash)>] ListTranscriptionResponse data, response status code and response headers
    def list_transcription_with_http_info(*, account_sid : String = @account_sid, page_size : Int32? = nil)
      request = build_api_request_for_list_transcription(account_sid: account_sid, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_transcription\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListTranscriptionResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of transcriptions belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resources to read.
    # @return nil
    def list_transcription(*, account_sid : String = @account_sid, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_transcription(account_sid: account_sid, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_transcription(*, account_sid : String = @account_sid, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_transcription ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_transcription, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_transcription, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_transcription, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_transcription, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_transcription, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Transcriptions.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_transcription",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of usage-records belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordResponse]
    def list_usage_record(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    # Retrieve a list of usage-records belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordResponse, Integer, Hash)>] ListUsageRecordResponse data, response status code and response headers
    def list_usage_record_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of usage-records belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordAllTimeResponse]
    def list_usage_record_all_time(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_all_time_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordAllTimeResponse, Integer, Hash)>] ListUsageRecordAllTimeResponse data, response status code and response headers
    def list_usage_record_all_time_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record_all_time(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record_all_time\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordAllTimeResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record_all_time(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record_all_time(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record_all_time(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record_all_time ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_all_time, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_all_time, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_all_time, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_all_time, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_all_time, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records/AllTime.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record_all_time",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordDailyResponse]
    def list_usage_record_daily(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_daily_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordDailyResponse, Integer, Hash)>] ListUsageRecordDailyResponse data, response status code and response headers
    def list_usage_record_daily_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record_daily(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record_daily\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordDailyResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record_daily(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record_daily(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record_daily(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record_daily ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_daily, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_daily, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_daily, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_daily, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_daily, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Daily.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record_daily",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordLastMonthResponse]
    def list_usage_record_last_month(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_last_month_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordLastMonthResponse, Integer, Hash)>] ListUsageRecordLastMonthResponse data, response status code and response headers
    def list_usage_record_last_month_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record_last_month(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record_last_month\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordLastMonthResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record_last_month(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record_last_month(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record_last_month(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record_last_month ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_last_month, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_last_month, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_last_month, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_last_month, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_last_month, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records/LastMonth.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record_last_month",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordMonthlyResponse]
    def list_usage_record_monthly(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_monthly_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordMonthlyResponse, Integer, Hash)>] ListUsageRecordMonthlyResponse data, response status code and response headers
    def list_usage_record_monthly_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record_monthly(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record_monthly\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordMonthlyResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record_monthly(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record_monthly(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record_monthly(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record_monthly ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_monthly, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_monthly, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_monthly, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_monthly, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_monthly, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Monthly.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record_monthly",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordThisMonthResponse]
    def list_usage_record_this_month(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_this_month_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordThisMonthResponse, Integer, Hash)>] ListUsageRecordThisMonthResponse data, response status code and response headers
    def list_usage_record_this_month_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record_this_month(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record_this_month\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordThisMonthResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record_this_month(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record_this_month(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record_this_month(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record_this_month ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_this_month, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_this_month, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_this_month, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_this_month, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_this_month, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records/ThisMonth.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record_this_month",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordTodayResponse]
    def list_usage_record_today(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_today_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordTodayResponse, Integer, Hash)>] ListUsageRecordTodayResponse data, response status code and response headers
    def list_usage_record_today_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record_today(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record_today\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordTodayResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record_today(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record_today(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record_today(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record_today ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_today, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_today, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_today, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_today, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_today, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Today.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record_today",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordYearlyResponse]
    def list_usage_record_yearly(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_yearly_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordYearlyResponse, Integer, Hash)>] ListUsageRecordYearlyResponse data, response status code and response headers
    def list_usage_record_yearly_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record_yearly(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record_yearly\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordYearlyResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record_yearly(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record_yearly(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record_yearly(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record_yearly ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_yearly, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_yearly, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_yearly, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_yearly, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_yearly, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yearly.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record_yearly",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [ListUsageRecordYesterdayResponse]
    def list_usage_record_yesterday(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_record_yesterday_with_http_info(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return [Array<(ListUsageRecordYesterdayResponse, Integer, Hash)>] ListUsageRecordYesterdayResponse data, response status code and response headers
    def list_usage_record_yesterday_with_http_info(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_record_yesterday(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_record_yesterday\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageRecordYesterdayResponse.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
    # @return nil
    def list_usage_record_yesterday(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_record_yesterday(account_sid: account_sid, category: category, start_date: start_date, end_date: end_date, include_subaccounts: include_subaccounts, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_record_yesterday(*, account_sid : String = @account_sid, category : String? = nil, start_date : Time? = nil, end_date : Time? = nil, include_subaccounts : Bool? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_record_yesterday ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_yesterday, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_yesterday, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_record_yesterday, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !category.nil? && !allowable_values.includes?(category)
        raise ArgumentError.new("invalid value for \"category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_yesterday, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_record_yesterday, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yesterday.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Category"] = category.to_s if !category.nil?
      query_params["StartDate"] = Time::Format::ISO_8601_DATE.format(start_date) if !start_date.nil?
      query_params["EndDate"] = Time::Format::ISO_8601_DATE.format(end_date) if !end_date.nil?
      query_params["IncludeSubaccounts"] = include_subaccounts.to_s if !include_subaccounts.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_record_yesterday",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of usage-triggers belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to read.
    # @return [ListUsageTriggerResponse]
    def list_usage_trigger(*, account_sid : String = @account_sid, recurring : String? = nil, trigger_by : String? = nil, usage_category : String? = nil, page_size : Int32? = nil)
      data, _status_code, _headers = list_usage_trigger_with_http_info(account_sid: account_sid, recurring: recurring, trigger_by: trigger_by, usage_category: usage_category, page_size: page_size)
      data
    end

    # Retrieve a list of usage-triggers belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to read.
    # @return [Array<(ListUsageTriggerResponse, Integer, Hash)>] ListUsageTriggerResponse data, response status code and response headers
    def list_usage_trigger_with_http_info(*, account_sid : String = @account_sid, recurring : String? = nil, trigger_by : String? = nil, usage_category : String? = nil, page_size : Int32? = nil)
      request = build_api_request_for_list_usage_trigger(account_sid: account_sid, recurring: recurring, trigger_by: trigger_by, usage_category: usage_category, page_size: page_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#list_usage_trigger\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ListUsageTriggerResponse.from_json(data), status_code, headers
    end

    # Retrieve a list of usage-triggers belonging to the account used to make the request
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to read.
    # @return nil
    def list_usage_trigger(*, account_sid : String = @account_sid, recurring : String? = nil, trigger_by : String? = nil, usage_category : String? = nil, page_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_list_usage_trigger(account_sid: account_sid, recurring: recurring, trigger_by: trigger_by, usage_category: usage_category, page_size: page_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_list_usage_trigger(*, account_sid : String = @account_sid, recurring : String? = nil, trigger_by : String? = nil, usage_category : String? = nil, page_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.list_usage_trigger ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_trigger, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_trigger, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.list_usage_trigger, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["daily", "monthly", "yearly", "alltime"]
      if @api_client.config.client_side_validation && !recurring.nil? && !allowable_values.includes?(recurring)
        raise ArgumentError.new("invalid value for \"recurring\", must be one of #{allowable_values}")
      end
      allowable_values = ["count", "usage", "price"]
      if @api_client.config.client_side_validation && !trigger_by.nil? && !allowable_values.includes?(trigger_by)
        raise ArgumentError.new("invalid value for \"trigger_by\", must be one of #{allowable_values}")
      end
      allowable_values = ["a2p-registration-fees", "agent-conference", "answering-machine-detection", "authy-authentications", "authy-calls-outbound", "authy-monthly-fees", "authy-phone-intelligence", "authy-phone-verifications", "authy-sms-outbound", "call-progess-events", "calleridlookups", "calls", "calls-client", "calls-globalconference", "calls-inbound", "calls-inbound-local", "calls-inbound-mobile", "calls-inbound-tollfree", "calls-outbound", "calls-pay-verb-transactions", "calls-recordings", "calls-sip", "calls-sip-inbound", "calls-sip-outbound", "calls-transfers", "carrier-lookups", "conversations", "conversations-api-requests", "conversations-conversation-events", "conversations-endpoint-connectivity", "conversations-events", "conversations-participant-events", "conversations-participants", "cps", "flex-usage", "fraud-lookups", "group-rooms", "group-rooms-data-track", "group-rooms-encrypted-media-recorded", "group-rooms-media-downloaded", "group-rooms-media-recorded", "group-rooms-media-routed", "group-rooms-media-stored", "group-rooms-participant-minutes", "group-rooms-recorded-minutes", "imp-v1-usage", "lookups", "marketplace", "marketplace-algorithmia-named-entity-recognition", "marketplace-cadence-transcription", "marketplace-cadence-translation", "marketplace-capio-speech-to-text", "marketplace-convriza-ababa", "marketplace-deepgram-phrase-detector", "marketplace-digital-segment-business-info", "marketplace-facebook-offline-conversions", "marketplace-google-speech-to-text", "marketplace-ibm-watson-message-insights", "marketplace-ibm-watson-message-sentiment", "marketplace-ibm-watson-recording-analysis", "marketplace-ibm-watson-tone-analyzer", "marketplace-icehook-systems-scout", "marketplace-infogroup-dataaxle-bizinfo", "marketplace-keen-io-contact-center-analytics", "marketplace-marchex-cleancall", "marketplace-marchex-sentiment-analysis-for-sms", "marketplace-marketplace-nextcaller-social-id", "marketplace-mobile-commons-opt-out-classifier", "marketplace-nexiwave-voicemail-to-text", "marketplace-nextcaller-advanced-caller-identification", "marketplace-nomorobo-spam-score", "marketplace-payfone-tcpa-compliance", "marketplace-remeeting-automatic-speech-recognition", "marketplace-tcpa-defense-solutions-blacklist-feed", "marketplace-telo-opencnam", "marketplace-truecnam-true-spam", "marketplace-twilio-caller-name-lookup-us", "marketplace-twilio-carrier-information-lookup", "marketplace-voicebase-pci", "marketplace-voicebase-transcription", "marketplace-voicebase-transcription-custom-vocabulary", "marketplace-whitepages-pro-caller-identification", "marketplace-whitepages-pro-phone-intelligence", "marketplace-whitepages-pro-phone-reputation", "marketplace-wolfarm-spoken-results", "marketplace-wolfram-short-answer", "marketplace-ytica-contact-center-reporting-analytics", "mediastorage", "mms", "mms-inbound", "mms-inbound-longcode", "mms-inbound-shortcode", "mms-messages-carrierfees", "mms-outbound", "mms-outbound-longcode", "mms-outbound-shortcode", "monitor-reads", "monitor-storage", "monitor-writes", "notify", "notify-actions-attempts", "notify-channels", "number-format-lookups", "pchat", "pchat-users", "peer-to-peer-rooms-participant-minutes", "pfax", "pfax-minutes", "pfax-minutes-inbound", "pfax-minutes-outbound", "pfax-pages", "phonenumbers", "phonenumbers-cps", "phonenumbers-emergency", "phonenumbers-local", "phonenumbers-mobile", "phonenumbers-setups", "phonenumbers-tollfree", "premiumsupport", "proxy", "proxy-active-sessions", "pstnconnectivity", "pv", "pv-composition-media-downloaded", "pv-composition-media-encrypted", "pv-composition-media-stored", "pv-composition-minutes", "pv-recording-compositions", "pv-room-participants", "pv-room-participants-au1", "pv-room-participants-br1", "pv-room-participants-ie1", "pv-room-participants-jp1", "pv-room-participants-sg1", "pv-room-participants-us1", "pv-room-participants-us2", "pv-rooms", "pv-sip-endpoint-registrations", "recordings", "recordingstorage", "rooms-group-bandwidth", "rooms-group-minutes", "rooms-peer-to-peer-minutes", "shortcodes", "shortcodes-customerowned", "shortcodes-mms-enablement", "shortcodes-mps", "shortcodes-random", "shortcodes-uk", "shortcodes-vanity", "small-group-rooms", "small-group-rooms-data-track", "small-group-rooms-participant-minutes", "sms", "sms-inbound", "sms-inbound-longcode", "sms-inbound-shortcode", "sms-messages-carrierfees", "sms-messages-features", "sms-messages-features-senderid", "sms-outbound", "sms-outbound-content-inspection", "sms-outbound-longcode", "sms-outbound-shortcode", "speech-recognition", "studio-engagements", "sync", "sync-actions", "sync-endpoint-hours", "sync-endpoint-hours-above-daily-cap", "taskrouter-tasks", "totalprice", "transcriptions", "trunking-cps", "trunking-emergency-calls", "trunking-origination", "trunking-origination-local", "trunking-origination-mobile", "trunking-origination-tollfree", "trunking-recordings", "trunking-secure", "trunking-termination", "turnmegabytes", "turnmegabytes-australia", "turnmegabytes-brasil", "turnmegabytes-germany", "turnmegabytes-india", "turnmegabytes-ireland", "turnmegabytes-japan", "turnmegabytes-singapore", "turnmegabytes-useast", "turnmegabytes-uswest", "twilio-interconnect", "verify-push", "verify-totp", "verify-whatsapp-conversations-business-initiated", "video-recordings", "voice-insights", "voice-insights-client-insights-on-demand-minute", "voice-insights-ptsn-insights-on-demand-minute", "voice-insights-sip-interface-insights-on-demand-minute", "voice-insights-sip-trunking-insights-on-demand-minute", "wireless", "wireless-orders", "wireless-orders-artwork", "wireless-orders-bulk", "wireless-orders-esim", "wireless-orders-starter", "wireless-usage", "wireless-usage-commands", "wireless-usage-commands-africa", "wireless-usage-commands-asia", "wireless-usage-commands-centralandsouthamerica", "wireless-usage-commands-europe", "wireless-usage-commands-home", "wireless-usage-commands-northamerica", "wireless-usage-commands-oceania", "wireless-usage-commands-roaming", "wireless-usage-data", "wireless-usage-data-africa", "wireless-usage-data-asia", "wireless-usage-data-centralandsouthamerica", "wireless-usage-data-custom-additionalmb", "wireless-usage-data-custom-first5mb", "wireless-usage-data-domestic-roaming", "wireless-usage-data-europe", "wireless-usage-data-individual-additionalgb", "wireless-usage-data-individual-firstgb", "wireless-usage-data-international-roaming-canada", "wireless-usage-data-international-roaming-india", "wireless-usage-data-international-roaming-mexico", "wireless-usage-data-northamerica", "wireless-usage-data-oceania", "wireless-usage-data-pooled", "wireless-usage-data-pooled-downlink", "wireless-usage-data-pooled-uplink", "wireless-usage-mrc", "wireless-usage-mrc-custom", "wireless-usage-mrc-individual", "wireless-usage-mrc-pooled", "wireless-usage-mrc-suspended", "wireless-usage-sms", "wireless-usage-voice"]
      if @api_client.config.client_side_validation && !usage_category.nil? && !allowable_values.includes?(usage_category)
        raise ArgumentError.new("invalid value for \"usage_category\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 1000
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_trigger, must be smaller than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling DefaultApi.list_usage_trigger, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new
      query_params["Recurring"] = recurring.to_s if !recurring.nil?
      query_params["TriggerBy"] = trigger_by.to_s if !trigger_by.nil?
      query_params["UsageCategory"] = usage_category.to_s if !usage_category.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.list_usage_trigger",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Modify the properties of a given Account
    # @param sid [String] The Account Sid that uniquely identifies the account to update
    # @return [Account]
    def update_account(*, sid : String, friendly_name : String? = nil, status : String? = nil)
      data, _status_code, _headers = update_account_with_http_info(sid: sid, friendly_name: friendly_name, status: status)
      data
    end

    # Modify the properties of a given Account
    # @param sid [String] The Account Sid that uniquely identifies the account to update
    # @return [Array<(Account, Integer, Hash)>] Account data, response status code and response headers
    def update_account_with_http_info(*, sid : String, friendly_name : String? = nil, status : String? = nil)
      request = build_api_request_for_update_account(sid: sid, friendly_name: friendly_name, status: status)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Account.from_json(data), status_code, headers
    end

    # Modify the properties of a given Account
    # @param sid [String] The Account Sid that uniquely identifies the account to update
    # @return nil
    def update_account(*, sid : String, friendly_name : String? = nil, status : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_account(sid: sid, friendly_name: friendly_name, status: status).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_account(*, sid : String, friendly_name : String? = nil, status : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_account ..." }
      end
      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_account, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_account, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_account, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["active", "suspended", "closed"]
      if @api_client.config.client_side_validation && !status.nil? && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{Sid}.json".sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["Status"] = status.to_s if !status.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_account",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to update.
    # @return [Address]
    def update_address(*, account_sid : String = @account_sid, sid : String, auto_correct_address : Bool? = nil, city : String? = nil, customer_name : String? = nil, emergency_enabled : Bool? = nil, friendly_name : String? = nil, postal_code : String? = nil, region : String? = nil, street : String? = nil)
      data, _status_code, _headers = update_address_with_http_info(account_sid: account_sid, sid: sid, auto_correct_address: auto_correct_address, city: city, customer_name: customer_name, emergency_enabled: emergency_enabled, friendly_name: friendly_name, postal_code: postal_code, region: region, street: street)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to update.
    # @return [Array<(Address, Integer, Hash)>] Address data, response status code and response headers
    def update_address_with_http_info(*, account_sid : String = @account_sid, sid : String, auto_correct_address : Bool? = nil, city : String? = nil, customer_name : String? = nil, emergency_enabled : Bool? = nil, friendly_name : String? = nil, postal_code : String? = nil, region : String? = nil, street : String? = nil)
      request = build_api_request_for_update_address(account_sid: account_sid, sid: sid, auto_correct_address: auto_correct_address, city: city, customer_name: customer_name, emergency_enabled: emergency_enabled, friendly_name: friendly_name, postal_code: postal_code, region: region, street: street)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Address.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Address resource to update.
    # @return nil
    def update_address(*, account_sid : String = @account_sid, sid : String, auto_correct_address : Bool? = nil, city : String? = nil, customer_name : String? = nil, emergency_enabled : Bool? = nil, friendly_name : String? = nil, postal_code : String? = nil, region : String? = nil, street : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_address(account_sid: account_sid, sid: sid, auto_correct_address: auto_correct_address, city: city, customer_name: customer_name, emergency_enabled: emergency_enabled, friendly_name: friendly_name, postal_code: postal_code, region: region, street: street).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_address(*, account_sid : String = @account_sid, sid : String, auto_correct_address : Bool? = nil, city : String? = nil, customer_name : String? = nil, emergency_enabled : Bool? = nil, friendly_name : String? = nil, postal_code : String? = nil, region : String? = nil, street : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_address, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AutoCorrectAddress"] = auto_correct_address.to_s if !auto_correct_address.nil?
      form_params["City"] = city.to_s if !city.nil?
      form_params["CustomerName"] = customer_name.to_s if !customer_name.nil?
      form_params["EmergencyEnabled"] = emergency_enabled.to_s if !emergency_enabled.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["PostalCode"] = postal_code.to_s if !postal_code.nil?
      form_params["Region"] = region.to_s if !region.nil?
      form_params["Street"] = street.to_s if !street.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Updates the application's properties
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to update.
    # @return [Application]
    def update_application(*, account_sid : String = @account_sid, sid : String, api_version : String? = nil, friendly_name : String? = nil, message_status_callback : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_status_callback : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = update_application_with_http_info(account_sid: account_sid, sid: sid, api_version: api_version, friendly_name: friendly_name, message_status_callback: message_status_callback, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_status_callback: sms_status_callback, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_url: voice_url)
      data
    end

    # Updates the application&#39;s properties
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to update.
    # @return [Array<(Application, Integer, Hash)>] Application data, response status code and response headers
    def update_application_with_http_info(*, account_sid : String = @account_sid, sid : String, api_version : String? = nil, friendly_name : String? = nil, message_status_callback : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_status_callback : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_update_application(account_sid: account_sid, sid: sid, api_version: api_version, friendly_name: friendly_name, message_status_callback: message_status_callback, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_status_callback: sms_status_callback, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_application\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Application.from_json(data), status_code, headers
    end

    # Updates the application&#39;s properties
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Application resource to update.
    # @return nil
    def update_application(*, account_sid : String = @account_sid, sid : String, api_version : String? = nil, friendly_name : String? = nil, message_status_callback : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_status_callback : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_application(account_sid: account_sid, sid: sid, api_version: api_version, friendly_name: friendly_name, message_status_callback: message_status_callback, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_status_callback: sms_status_callback, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_application(*, account_sid : String = @account_sid, sid : String, api_version : String? = nil, friendly_name : String? = nil, message_status_callback : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_status_callback : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_application ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_application, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_application, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_application, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_application, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_application, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_application, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_fallback_method.nil? && !allowable_values.includes?(sms_fallback_method)
        raise ArgumentError.new("invalid value for \"sms_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_method.nil? && !allowable_values.includes?(sms_method)
        raise ArgumentError.new("invalid value for \"sms_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["ApiVersion"] = api_version.to_s if !api_version.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["MessageStatusCallback"] = message_status_callback.to_s if !message_status_callback.nil?
      form_params["SmsFallbackMethod"] = sms_fallback_method.to_s if !sms_fallback_method.nil?
      form_params["SmsFallbackUrl"] = sms_fallback_url.to_s if !sms_fallback_url.nil?
      form_params["SmsMethod"] = sms_method.to_s if !sms_method.nil?
      form_params["SmsStatusCallback"] = sms_status_callback.to_s if !sms_status_callback.nil?
      form_params["SmsUrl"] = sms_url.to_s if !sms_url.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["VoiceCallerIdLookup"] = voice_caller_id_lookup.to_s if !voice_caller_id_lookup.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_application",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Initiates a call redirect or terminates a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Call resource to update
    # @return [Call]
    def update_call(*, account_sid : String = @account_sid, sid : String, fallback_method : String? = nil, fallback_url : String? = nil, method : String? = nil, status : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, twiml : String? = nil, url : String? = nil)
      data, _status_code, _headers = update_call_with_http_info(account_sid: account_sid, sid: sid, fallback_method: fallback_method, fallback_url: fallback_url, method: method, status: status, status_callback: status_callback, status_callback_method: status_callback_method, time_limit: time_limit, twiml: twiml, url: url)
      data
    end

    # Initiates a call redirect or terminates a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Call resource to update
    # @return [Array<(Call, Integer, Hash)>] Call data, response status code and response headers
    def update_call_with_http_info(*, account_sid : String = @account_sid, sid : String, fallback_method : String? = nil, fallback_url : String? = nil, method : String? = nil, status : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, twiml : String? = nil, url : String? = nil)
      request = build_api_request_for_update_call(account_sid: account_sid, sid: sid, fallback_method: fallback_method, fallback_url: fallback_url, method: method, status: status, status_callback: status_callback, status_callback_method: status_callback_method, time_limit: time_limit, twiml: twiml, url: url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_call\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Call.from_json(data), status_code, headers
    end

    # Initiates a call redirect or terminates a call
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Call resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Call resource to update
    # @return nil
    def update_call(*, account_sid : String = @account_sid, sid : String, fallback_method : String? = nil, fallback_url : String? = nil, method : String? = nil, status : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, twiml : String? = nil, url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_call(account_sid: account_sid, sid: sid, fallback_method: fallback_method, fallback_url: fallback_url, method: method, status: status, status_callback: status_callback, status_callback_method: status_callback_method, time_limit: time_limit, twiml: twiml, url: url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_call(*, account_sid : String = @account_sid, sid : String, fallback_method : String? = nil, fallback_url : String? = nil, method : String? = nil, status : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, time_limit : Int32? = nil, twiml : String? = nil, url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_call ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_call, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_call, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_call, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !fallback_method.nil? && !allowable_values.includes?(fallback_method)
        raise ArgumentError.new("invalid value for \"fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !method.nil? && !allowable_values.includes?(method)
        raise ArgumentError.new("invalid value for \"method\", must be one of #{allowable_values}")
      end
      allowable_values = ["canceled", "completed"]
      if @api_client.config.client_side_validation && !status.nil? && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FallbackMethod"] = fallback_method.to_s if !fallback_method.nil?
      form_params["FallbackUrl"] = fallback_url.to_s if !fallback_url.nil?
      form_params["Method"] = method.to_s if !method.nil?
      form_params["Status"] = status.to_s if !status.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["TimeLimit"] = time_limit.to_s if !time_limit.nil?
      form_params["Twiml"] = twiml.to_s if !twiml.nil?
      form_params["Url"] = url.to_s if !url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_call",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update a Feedback resource for a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param call_sid [String] The call sid that uniquely identifies the call
    # @return [CallCallFeedback]
    def update_call_feedback(*, account_sid : String = @account_sid, call_sid : String, issue : Array(String)? = nil, quality_score : Int32? = nil)
      data, _status_code, _headers = update_call_feedback_with_http_info(account_sid: account_sid, call_sid: call_sid, issue: issue, quality_score: quality_score)
      data
    end

    # Update a Feedback resource for a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param call_sid [String] The call sid that uniquely identifies the call
    # @return [Array<(CallCallFeedback, Integer, Hash)>] CallCallFeedback data, response status code and response headers
    def update_call_feedback_with_http_info(*, account_sid : String = @account_sid, call_sid : String, issue : Array(String)? = nil, quality_score : Int32? = nil)
      request = build_api_request_for_update_call_feedback(account_sid: account_sid, call_sid: call_sid, issue: issue, quality_score: quality_score)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_call_feedback\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallCallFeedback.from_json(data), status_code, headers
    end

    # Update a Feedback resource for a call
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param call_sid [String] The call sid that uniquely identifies the call
    # @return nil
    def update_call_feedback(*, account_sid : String = @account_sid, call_sid : String, issue : Array(String)? = nil, quality_score : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_update_call_feedback(account_sid: account_sid, call_sid: call_sid, issue: issue, quality_score: quality_score).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_call_feedback(*, account_sid : String = @account_sid, call_sid : String, issue : Array(String)? = nil, quality_score : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_call_feedback ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call_feedback, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call_feedback, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call_feedback, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["audio-latency", "digits-not-captured", "dropped-call", "imperfect-audio", "incorrect-caller-id", "one-way-audio", "post-dial-delay", "unsolicited-call"]
      if @api_client.config.client_side_validation && !issue.nil? && !issue.all? { |item| allowable_values.includes?(item) }
        raise ArgumentError.new("invalid value for \"issue\", must include one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Feedback.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Issue"] = @api_client.build_collection_param(issue, "multi") if !issue.nil? && !issue.empty?
      form_params["QualityScore"] = quality_score.to_s if !quality_score.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_call_feedback",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Changes the status of the recording to paused, stopped, or in-progress. Note: Pass `Twilio.CURRENT` instead of recording sid to reference current active recording.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to update.
    # @param status [String] The new status of the recording. Can be: `stopped`, `paused`, `in-progress`.
    # @return [CallCallRecording]
    def update_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String, pause_behavior : String? = nil)
      data, _status_code, _headers = update_call_recording_with_http_info(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status, pause_behavior: pause_behavior)
      data
    end

    # Changes the status of the recording to paused, stopped, or in-progress. Note: Pass &#x60;Twilio.CURRENT&#x60; instead of recording sid to reference current active recording.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to update.
    # @param status [String] The new status of the recording. Can be: `stopped`, `paused`, `in-progress`.
    # @return [Array<(CallCallRecording, Integer, Hash)>] CallCallRecording data, response status code and response headers
    def update_call_recording_with_http_info(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String, pause_behavior : String? = nil)
      request = build_api_request_for_update_call_recording(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status, pause_behavior: pause_behavior)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_call_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallCallRecording.from_json(data), status_code, headers
    end

    # Changes the status of the recording to paused, stopped, or in-progress. Note: Pass &#x60;Twilio.CURRENT&#x60; instead of recording sid to reference current active recording.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Recording resource to update.
    # @param status [String] The new status of the recording. Can be: `stopped`, `paused`, `in-progress`.
    # @return nil
    def update_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String, pause_behavior : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_call_recording(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status, pause_behavior: pause_behavior).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_call_recording(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String, pause_behavior : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_call_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_call_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_call_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_call_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_call_recording, must conform to the pattern #{pattern}.")
      end

      # verify enum value
      allowable_values = ["in-progress", "paused", "stopped", "processing", "completed", "absent"]
      if @api_client.config.client_side_validation && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["PauseBehavior"] = pause_behavior.to_s if !pause_behavior.nil?
      form_params["Status"] = status.to_s if !status.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_call_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference resource to update
    # @return [Conference]
    def update_conference(*, account_sid : String = @account_sid, sid : String, announce_method : String? = nil, announce_url : String? = nil, status : String? = nil)
      data, _status_code, _headers = update_conference_with_http_info(account_sid: account_sid, sid: sid, announce_method: announce_method, announce_url: announce_url, status: status)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference resource to update
    # @return [Array<(Conference, Integer, Hash)>] Conference data, response status code and response headers
    def update_conference_with_http_info(*, account_sid : String = @account_sid, sid : String, announce_method : String? = nil, announce_url : String? = nil, status : String? = nil)
      request = build_api_request_for_update_conference(account_sid: account_sid, sid: sid, announce_method: announce_method, announce_url: announce_url, status: status)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_conference\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Conference.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference resource to update
    # @return nil
    def update_conference(*, account_sid : String = @account_sid, sid : String, announce_method : String? = nil, announce_url : String? = nil, status : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_conference(account_sid: account_sid, sid: sid, announce_method: announce_method, announce_url: announce_url, status: status).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_conference(*, account_sid : String = @account_sid, sid : String, announce_method : String? = nil, announce_url : String? = nil, status : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_conference ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_conference, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_conference, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_conference, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !announce_method.nil? && !allowable_values.includes?(announce_method)
        raise ArgumentError.new("invalid value for \"announce_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["completed"]
      if @api_client.config.client_side_validation && !status.nil? && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AnnounceMethod"] = announce_method.to_s if !announce_method.nil?
      form_params["AnnounceUrl"] = announce_url.to_s if !announce_url.nil?
      form_params["Status"] = status.to_s if !status.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_conference",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Changes the status of the recording to paused, stopped, or in-progress. Note: To use `Twilio.CURRENT`, pass it as recording sid.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource to update.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to update. Use `Twilio.CURRENT` to reference the current active recording.
    # @param status [String] The new status of the recording. Can be: `stopped`, `paused`, `in-progress`.
    # @return [ConferenceConferenceRecording]
    def update_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String, status : String, pause_behavior : String? = nil)
      data, _status_code, _headers = update_conference_recording_with_http_info(account_sid: account_sid, conference_sid: conference_sid, sid: sid, status: status, pause_behavior: pause_behavior)
      data
    end

    # Changes the status of the recording to paused, stopped, or in-progress. Note: To use &#x60;Twilio.CURRENT&#x60;, pass it as recording sid.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource to update.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to update. Use `Twilio.CURRENT` to reference the current active recording.
    # @param status [String] The new status of the recording. Can be: `stopped`, `paused`, `in-progress`.
    # @return [Array<(ConferenceConferenceRecording, Integer, Hash)>] ConferenceConferenceRecording data, response status code and response headers
    def update_conference_recording_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, sid : String, status : String, pause_behavior : String? = nil)
      request = build_api_request_for_update_conference_recording(account_sid: account_sid, conference_sid: conference_sid, sid: sid, status: status, pause_behavior: pause_behavior)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_conference_recording\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ConferenceConferenceRecording.from_json(data), status_code, headers
    end

    # Changes the status of the recording to paused, stopped, or in-progress. Note: To use &#x60;Twilio.CURRENT&#x60;, pass it as recording sid.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference Recording resource to update.
    # @param conference_sid [String] The Conference SID that identifies the conference associated with the recording to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Conference Recording resource to update. Use `Twilio.CURRENT` to reference the current active recording.
    # @param status [String] The new status of the recording. Can be: `stopped`, `paused`, `in-progress`.
    # @return nil
    def update_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String, status : String, pause_behavior : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_conference_recording(account_sid: account_sid, conference_sid: conference_sid, sid: sid, status: status, pause_behavior: pause_behavior).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_conference_recording(*, account_sid : String = @account_sid, conference_sid : String, sid : String, status : String, pause_behavior : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_conference_recording ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_conference_recording, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.update_conference_recording, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.update_conference_recording, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.update_conference_recording, must conform to the pattern #{pattern}.")
      end

      # verify enum value
      allowable_values = ["in-progress", "paused", "stopped", "processing", "completed", "absent"]
      if @api_client.config.client_side_validation && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["PauseBehavior"] = pause_behavior.to_s if !pause_behavior.nil?
      form_params["Status"] = status.to_s if !status.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_conference_recording",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update a connect-app with the specified parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to update.
    # @return [ConnectApp]
    def update_connect_app(*, account_sid : String = @account_sid, sid : String, authorize_redirect_url : String? = nil, company_name : String? = nil, deauthorize_callback_method : String? = nil, deauthorize_callback_url : String? = nil, description : String? = nil, friendly_name : String? = nil, homepage_url : String? = nil, permissions : Array(String)? = nil)
      data, _status_code, _headers = update_connect_app_with_http_info(account_sid: account_sid, sid: sid, authorize_redirect_url: authorize_redirect_url, company_name: company_name, deauthorize_callback_method: deauthorize_callback_method, deauthorize_callback_url: deauthorize_callback_url, description: description, friendly_name: friendly_name, homepage_url: homepage_url, permissions: permissions)
      data
    end

    # Update a connect-app with the specified parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to update.
    # @return [Array<(ConnectApp, Integer, Hash)>] ConnectApp data, response status code and response headers
    def update_connect_app_with_http_info(*, account_sid : String = @account_sid, sid : String, authorize_redirect_url : String? = nil, company_name : String? = nil, deauthorize_callback_method : String? = nil, deauthorize_callback_url : String? = nil, description : String? = nil, friendly_name : String? = nil, homepage_url : String? = nil, permissions : Array(String)? = nil)
      request = build_api_request_for_update_connect_app(account_sid: account_sid, sid: sid, authorize_redirect_url: authorize_redirect_url, company_name: company_name, deauthorize_callback_method: deauthorize_callback_method, deauthorize_callback_url: deauthorize_callback_url, description: description, friendly_name: friendly_name, homepage_url: homepage_url, permissions: permissions)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_connect_app\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ConnectApp.from_json(data), status_code, headers
    end

    # Update a connect-app with the specified parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ConnectApp resource to update.
    # @return nil
    def update_connect_app(*, account_sid : String = @account_sid, sid : String, authorize_redirect_url : String? = nil, company_name : String? = nil, deauthorize_callback_method : String? = nil, deauthorize_callback_url : String? = nil, description : String? = nil, friendly_name : String? = nil, homepage_url : String? = nil, permissions : Array(String)? = nil, &block : Crest::Response ->)
      build_api_request_for_update_connect_app(account_sid: account_sid, sid: sid, authorize_redirect_url: authorize_redirect_url, company_name: company_name, deauthorize_callback_method: deauthorize_callback_method, deauthorize_callback_url: deauthorize_callback_url, description: description, friendly_name: friendly_name, homepage_url: homepage_url, permissions: permissions).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_connect_app(*, account_sid : String = @account_sid, sid : String, authorize_redirect_url : String? = nil, company_name : String? = nil, deauthorize_callback_method : String? = nil, deauthorize_callback_url : String? = nil, description : String? = nil, friendly_name : String? = nil, homepage_url : String? = nil, permissions : Array(String)? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_connect_app ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_connect_app, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_connect_app, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_connect_app, the character length must be great than or equal to 34.")
      end

      pattern = /^CN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_connect_app, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !deauthorize_callback_method.nil? && !allowable_values.includes?(deauthorize_callback_method)
        raise ArgumentError.new("invalid value for \"deauthorize_callback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["get-all", "post-all"]
      if @api_client.config.client_side_validation && !permissions.nil? && !permissions.all? { |item| allowable_values.includes?(item) }
        raise ArgumentError.new("invalid value for \"permissions\", must include one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AuthorizeRedirectUrl"] = authorize_redirect_url.to_s if !authorize_redirect_url.nil?
      form_params["CompanyName"] = company_name.to_s if !company_name.nil?
      form_params["DeauthorizeCallbackMethod"] = deauthorize_callback_method.to_s if !deauthorize_callback_method.nil?
      form_params["DeauthorizeCallbackUrl"] = deauthorize_callback_url.to_s if !deauthorize_callback_url.nil?
      form_params["Description"] = description.to_s if !description.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["HomepageUrl"] = homepage_url.to_s if !homepage_url.nil?
      form_params["Permissions"] = @api_client.build_collection_param(permissions, "multi") if !permissions.nil? && !permissions.empty?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_connect_app",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update an incoming-phone-number instance.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update.
    # @return [IncomingPhoneNumber]
    def update_incoming_phone_number(*, account_sid : String = @account_sid, sid : String, account_sid2 : String? = @account_sid, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = update_incoming_phone_number_with_http_info(account_sid: account_sid, sid: sid, account_sid2: account_sid2, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    # Update an incoming-phone-number instance.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update.
    # @return [Array<(IncomingPhoneNumber, Integer, Hash)>] IncomingPhoneNumber data, response status code and response headers
    def update_incoming_phone_number_with_http_info(*, account_sid : String = @account_sid, sid : String, account_sid2 : String? = @account_sid, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_update_incoming_phone_number(account_sid: account_sid, sid: sid, account_sid2: account_sid2, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_incoming_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return IncomingPhoneNumber.from_json(data), status_code, headers
    end

    # Update an incoming-phone-number instance.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @param sid [String] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update.
    # @return nil
    def update_incoming_phone_number(*, account_sid : String = @account_sid, sid : String, account_sid2 : String? = @account_sid, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_incoming_phone_number(account_sid: account_sid, sid: sid, account_sid2: account_sid2, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_incoming_phone_number(*, account_sid : String = @account_sid, sid : String, account_sid2 : String? = @account_sid, address_sid : String? = nil, api_version : String? = nil, bundle_sid : String? = nil, emergency_address_sid : String? = nil, emergency_status : String? = nil, friendly_name : String? = nil, identity_sid : String? = nil, sms_application_sid : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, status_callback : String? = nil, status_callback_method : String? = nil, trunk_sid : String? = nil, voice_application_sid : String? = nil, voice_caller_id_lookup : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_receive_mode : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_incoming_phone_number ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !account_sid2.nil? && account_sid2.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid2\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !account_sid2.nil? && account_sid2.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid2\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !account_sid2.nil? && account_sid2 !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid2\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !address_sid.nil? && address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"address_sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^BU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !bundle_sid.nil? && bundle_sid !~ pattern
        raise ArgumentError.new("invalid value for \"bundle_sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !emergency_address_sid.nil? && emergency_address_sid !~ pattern
        raise ArgumentError.new("invalid value for \"emergency_address_sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["Active", "Inactive"]
      if @api_client.config.client_side_validation && !emergency_status.nil? && !allowable_values.includes?(emergency_status)
        raise ArgumentError.new("invalid value for \"emergency_status\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^RI[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !identity_sid.nil? && identity_sid !~ pattern
        raise ArgumentError.new("invalid value for \"identity_sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !sms_application_sid.nil? && sms_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"sms_application_sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_fallback_method.nil? && !allowable_values.includes?(sms_fallback_method)
        raise ArgumentError.new("invalid value for \"sms_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_method.nil? && !allowable_values.includes?(sms_method)
        raise ArgumentError.new("invalid value for \"sms_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !status_callback_method.nil? && !allowable_values.includes?(status_callback_method)
        raise ArgumentError.new("invalid value for \"status_callback_method\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^TK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !trunk_sid.nil? && trunk_sid !~ pattern
        raise ArgumentError.new("invalid value for \"trunk_sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.update_incoming_phone_number, the character length must be great than or equal to 34.")
      end

      pattern = /^AP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !voice_application_sid.nil? && voice_application_sid !~ pattern
        raise ArgumentError.new("invalid value for \"voice_application_sid\" when calling DefaultApi.update_incoming_phone_number, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["voice", "fax"]
      if @api_client.config.client_side_validation && !voice_receive_mode.nil? && !allowable_values.includes?(voice_receive_mode)
        raise ArgumentError.new("invalid value for \"voice_receive_mode\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AccountSid"] = account_sid2.to_s if !account_sid2.nil?
      form_params["AddressSid"] = address_sid.to_s if !address_sid.nil?
      form_params["ApiVersion"] = api_version.to_s if !api_version.nil?
      form_params["BundleSid"] = bundle_sid.to_s if !bundle_sid.nil?
      form_params["EmergencyAddressSid"] = emergency_address_sid.to_s if !emergency_address_sid.nil?
      form_params["EmergencyStatus"] = emergency_status.to_s if !emergency_status.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["IdentitySid"] = identity_sid.to_s if !identity_sid.nil?
      form_params["SmsApplicationSid"] = sms_application_sid.to_s if !sms_application_sid.nil?
      form_params["SmsFallbackMethod"] = sms_fallback_method.to_s if !sms_fallback_method.nil?
      form_params["SmsFallbackUrl"] = sms_fallback_url.to_s if !sms_fallback_url.nil?
      form_params["SmsMethod"] = sms_method.to_s if !sms_method.nil?
      form_params["SmsUrl"] = sms_url.to_s if !sms_url.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?
      form_params["StatusCallbackMethod"] = status_callback_method.to_s if !status_callback_method.nil?
      form_params["TrunkSid"] = trunk_sid.to_s if !trunk_sid.nil?
      form_params["VoiceApplicationSid"] = voice_application_sid.to_s if !voice_application_sid.nil?
      form_params["VoiceCallerIdLookup"] = voice_caller_id_lookup.to_s if !voice_caller_id_lookup.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceReceiveMode"] = voice_receive_mode.to_s if !voice_receive_mode.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to update.
    # @return [Key]
    def update_key(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil)
      data, _status_code, _headers = update_key_with_http_info(account_sid: account_sid, sid: sid, friendly_name: friendly_name)
      data
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to update.
    # @return [Array<(Key, Integer, Hash)>] Key data, response status code and response headers
    def update_key_with_http_info(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil)
      request = build_api_request_for_update_key(account_sid: account_sid, sid: sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Key.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Key resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Key resource to update.
    # @return nil
    def update_key(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_key(account_sid: account_sid, sid: sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_key(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_key, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_key, the character length must be great than or equal to 34.")
      end

      pattern = /^SK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_key, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Dequeue a member from a queue and have the member's call begin executing the TwiML document at that URL
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to update.
    # @param queue_sid [String] The SID of the Queue in which to find the members to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource(s) to update.
    # @param url [String] The absolute URL of the Queue resource.
    # @return [QueueMember]
    def update_member(*, account_sid : String = @account_sid, queue_sid : String, call_sid : String, url : String, method : String? = nil)
      data, _status_code, _headers = update_member_with_http_info(account_sid: account_sid, queue_sid: queue_sid, call_sid: call_sid, url: url, method: method)
      data
    end

    # Dequeue a member from a queue and have the member&#39;s call begin executing the TwiML document at that URL
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to update.
    # @param queue_sid [String] The SID of the Queue in which to find the members to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource(s) to update.
    # @param url [String] The absolute URL of the Queue resource.
    # @return [Array<(QueueMember, Integer, Hash)>] QueueMember data, response status code and response headers
    def update_member_with_http_info(*, account_sid : String = @account_sid, queue_sid : String, call_sid : String, url : String, method : String? = nil)
      request = build_api_request_for_update_member(account_sid: account_sid, queue_sid: queue_sid, call_sid: call_sid, url: url, method: method)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_member\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return QueueMember.from_json(data), status_code, headers
    end

    # Dequeue a member from a queue and have the member&#39;s call begin executing the TwiML document at that URL
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to update.
    # @param queue_sid [String] The SID of the Queue in which to find the members to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resource(s) to update.
    # @param url [String] The absolute URL of the Queue resource.
    # @return nil
    def update_member(*, account_sid : String = @account_sid, queue_sid : String, call_sid : String, url : String, method : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_member(account_sid: account_sid, queue_sid: queue_sid, call_sid: call_sid, url: url, method: method).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_member(*, account_sid : String = @account_sid, queue_sid : String, call_sid : String, url : String, method : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_member ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_member, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_member, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_member, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && queue_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.update_member, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && queue_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.update_member, the character length must be great than or equal to 34.")
      end

      pattern = /^QU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && queue_sid !~ pattern
        raise ArgumentError.new("invalid value for \"queue_sid\" when calling DefaultApi.update_member, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !method.nil? && !allowable_values.includes?(method)
        raise ArgumentError.new("invalid value for \"method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "QueueSid" + "}", URI.encode_path(queue_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Method"] = method.to_s if !method.nil?
      form_params["Url"] = url.to_s if !url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_member",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # To redact a message-body from a post-flight message record, post to the message instance resource with an empty body
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to update.
    # @return [Message]
    def update_message(*, account_sid : String = @account_sid, sid : String, body : String? = nil, status : String? = nil)
      data, _status_code, _headers = update_message_with_http_info(account_sid: account_sid, sid: sid, body: body, status: status)
      data
    end

    # To redact a message-body from a post-flight message record, post to the message instance resource with an empty body
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to update.
    # @return [Array<(Message, Integer, Hash)>] Message data, response status code and response headers
    def update_message_with_http_info(*, account_sid : String = @account_sid, sid : String, body : String? = nil, status : String? = nil)
      request = build_api_request_for_update_message(account_sid: account_sid, sid: sid, body: body, status: status)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_message\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Message.from_json(data), status_code, headers
    end

    # To redact a message-body from a post-flight message record, post to the message instance resource with an empty body
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Message resource to update.
    # @return nil
    def update_message(*, account_sid : String = @account_sid, sid : String, body : String? = nil, status : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_message(account_sid: account_sid, sid: sid, body: body, status: status).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_message(*, account_sid : String = @account_sid, sid : String, body : String? = nil, status : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_message ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_message, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_message, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_message, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_message, the character length must be great than or equal to 34.")
      end

      pattern = /^(SM|MM)[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_message, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["canceled"]
      if @api_client.config.client_side_validation && !status.nil? && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Body"] = body.to_s if !body.nil?
      form_params["Status"] = status.to_s if !status.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_message",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Updates the caller-id
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to update.
    # @return [OutgoingCallerId]
    def update_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil)
      data, _status_code, _headers = update_outgoing_caller_id_with_http_info(account_sid: account_sid, sid: sid, friendly_name: friendly_name)
      data
    end

    # Updates the caller-id
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to update.
    # @return [Array<(OutgoingCallerId, Integer, Hash)>] OutgoingCallerId data, response status code and response headers
    def update_outgoing_caller_id_with_http_info(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil)
      request = build_api_request_for_update_outgoing_caller_id(account_sid: account_sid, sid: sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_outgoing_caller_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return OutgoingCallerId.from_json(data), status_code, headers
    end

    # Updates the caller-id
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the OutgoingCallerId resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the OutgoingCallerId resource to update.
    # @return nil
    def update_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_outgoing_caller_id(account_sid: account_sid, sid: sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_outgoing_caller_id(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_outgoing_caller_id ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_outgoing_caller_id, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_outgoing_caller_id, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_outgoing_caller_id, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_outgoing_caller_id, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_outgoing_caller_id, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_outgoing_caller_id, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_outgoing_caller_id",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update the properties of the participant
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to update.
    # @param conference_sid [String] The SID of the conference with the participant to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to update. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return [ConferenceParticipant]
    def update_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String, announce_method : String? = nil, announce_url : String? = nil, beep_on_exit : Bool? = nil, call_sid_to_coach : String? = nil, coaching : Bool? = nil, end_conference_on_exit : Bool? = nil, hold : Bool? = nil, hold_method : String? = nil, hold_url : String? = nil, muted : Bool? = nil, wait_method : String? = nil, wait_url : String? = nil)
      data, _status_code, _headers = update_participant_with_http_info(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid, announce_method: announce_method, announce_url: announce_url, beep_on_exit: beep_on_exit, call_sid_to_coach: call_sid_to_coach, coaching: coaching, end_conference_on_exit: end_conference_on_exit, hold: hold, hold_method: hold_method, hold_url: hold_url, muted: muted, wait_method: wait_method, wait_url: wait_url)
      data
    end

    # Update the properties of the participant
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to update.
    # @param conference_sid [String] The SID of the conference with the participant to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to update. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return [Array<(ConferenceParticipant, Integer, Hash)>] ConferenceParticipant data, response status code and response headers
    def update_participant_with_http_info(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String, announce_method : String? = nil, announce_url : String? = nil, beep_on_exit : Bool? = nil, call_sid_to_coach : String? = nil, coaching : Bool? = nil, end_conference_on_exit : Bool? = nil, hold : Bool? = nil, hold_method : String? = nil, hold_url : String? = nil, muted : Bool? = nil, wait_method : String? = nil, wait_url : String? = nil)
      request = build_api_request_for_update_participant(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid, announce_method: announce_method, announce_url: announce_url, beep_on_exit: beep_on_exit, call_sid_to_coach: call_sid_to_coach, coaching: coaching, end_conference_on_exit: end_conference_on_exit, hold: hold, hold_method: hold_method, hold_url: hold_url, muted: muted, wait_method: wait_method, wait_url: wait_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_participant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ConferenceParticipant.from_json(data), status_code, headers
    end

    # Update the properties of the participant
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resources to update.
    # @param conference_sid [String] The SID of the conference with the participant to update.
    # @param call_sid [String] The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID or label of the participant to update. Non URL safe characters in a label must be percent encoded, for example, a space character is represented as %20.
    # @return nil
    def update_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String, announce_method : String? = nil, announce_url : String? = nil, beep_on_exit : Bool? = nil, call_sid_to_coach : String? = nil, coaching : Bool? = nil, end_conference_on_exit : Bool? = nil, hold : Bool? = nil, hold_method : String? = nil, hold_url : String? = nil, muted : Bool? = nil, wait_method : String? = nil, wait_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_participant(account_sid: account_sid, conference_sid: conference_sid, call_sid: call_sid, announce_method: announce_method, announce_url: announce_url, beep_on_exit: beep_on_exit, call_sid_to_coach: call_sid_to_coach, coaching: coaching, end_conference_on_exit: end_conference_on_exit, hold: hold, hold_method: hold_method, hold_url: hold_url, muted: muted, wait_method: wait_method, wait_url: wait_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_participant(*, account_sid : String = @account_sid, conference_sid : String, call_sid : String, announce_method : String? = nil, announce_url : String? = nil, beep_on_exit : Bool? = nil, call_sid_to_coach : String? = nil, coaching : Bool? = nil, end_conference_on_exit : Bool? = nil, hold : Bool? = nil, hold_method : String? = nil, hold_url : String? = nil, muted : Bool? = nil, wait_method : String? = nil, wait_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_participant ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_participant, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.update_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && conference_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.update_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^CF[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && conference_sid !~ pattern
        raise ArgumentError.new("invalid value for \"conference_sid\" when calling DefaultApi.update_participant, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !announce_method.nil? && !allowable_values.includes?(announce_method)
        raise ArgumentError.new("invalid value for \"announce_method\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !call_sid_to_coach.nil? && call_sid_to_coach.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid_to_coach\" when calling DefaultApi.update_participant, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !call_sid_to_coach.nil? && call_sid_to_coach.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid_to_coach\" when calling DefaultApi.update_participant, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !call_sid_to_coach.nil? && call_sid_to_coach !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid_to_coach\" when calling DefaultApi.update_participant, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !hold_method.nil? && !allowable_values.includes?(hold_method)
        raise ArgumentError.new("invalid value for \"hold_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !wait_method.nil? && !allowable_values.includes?(wait_method)
        raise ArgumentError.new("invalid value for \"wait_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ConferenceSid" + "}", URI.encode_path(conference_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["AnnounceMethod"] = announce_method.to_s if !announce_method.nil?
      form_params["AnnounceUrl"] = announce_url.to_s if !announce_url.nil?
      form_params["BeepOnExit"] = beep_on_exit.to_s if !beep_on_exit.nil?
      form_params["CallSidToCoach"] = call_sid_to_coach.to_s if !call_sid_to_coach.nil?
      form_params["Coaching"] = coaching.to_s if !coaching.nil?
      form_params["EndConferenceOnExit"] = end_conference_on_exit.to_s if !end_conference_on_exit.nil?
      form_params["Hold"] = hold.to_s if !hold.nil?
      form_params["HoldMethod"] = hold_method.to_s if !hold_method.nil?
      form_params["HoldUrl"] = hold_url.to_s if !hold_url.nil?
      form_params["Muted"] = muted.to_s if !muted.nil?
      form_params["WaitMethod"] = wait_method.to_s if !wait_method.nil?
      form_params["WaitUrl"] = wait_url.to_s if !wait_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_participant",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # update an instance of payments with different phases of payment flows.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will update the resource.
    # @param call_sid [String] The SID of the call that will update the resource. This should be the same call sid that was used to create payments resource.
    # @param sid [String] The SID of Payments session that needs to be updated.
    # @param idempotency_key [String] A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.
    # @param status_callback [String] Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [Update](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback-update) and [Complete/Cancel](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback-cancelcomplete) POST requests.
    # @return [CallPayments]
    def update_payments(*, account_sid : String = @account_sid, call_sid : String, sid : String, idempotency_key : String, status_callback : String, capture : String? = nil, status : String? = nil)
      data, _status_code, _headers = update_payments_with_http_info(account_sid: account_sid, call_sid: call_sid, sid: sid, idempotency_key: idempotency_key, status_callback: status_callback, capture: capture, status: status)
      data
    end

    # update an instance of payments with different phases of payment flows.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will update the resource.
    # @param call_sid [String] The SID of the call that will update the resource. This should be the same call sid that was used to create payments resource.
    # @param sid [String] The SID of Payments session that needs to be updated.
    # @param idempotency_key [String] A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.
    # @param status_callback [String] Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [Update](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback-update) and [Complete/Cancel](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback-cancelcomplete) POST requests.
    # @return [Array<(CallPayments, Integer, Hash)>] CallPayments data, response status code and response headers
    def update_payments_with_http_info(*, account_sid : String = @account_sid, call_sid : String, sid : String, idempotency_key : String, status_callback : String, capture : String? = nil, status : String? = nil)
      request = build_api_request_for_update_payments(account_sid: account_sid, call_sid: call_sid, sid: sid, idempotency_key: idempotency_key, status_callback: status_callback, capture: capture, status: status)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_payments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallPayments.from_json(data), status_code, headers
    end

    # update an instance of payments with different phases of payment flows.
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will update the resource.
    # @param call_sid [String] The SID of the call that will update the resource. This should be the same call sid that was used to create payments resource.
    # @param sid [String] The SID of Payments session that needs to be updated.
    # @param idempotency_key [String] A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.
    # @param status_callback [String] Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [Update](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback-update) and [Complete/Cancel](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback-cancelcomplete) POST requests.
    # @return nil
    def update_payments(*, account_sid : String = @account_sid, call_sid : String, sid : String, idempotency_key : String, status_callback : String, capture : String? = nil, status : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_payments(account_sid: account_sid, call_sid: call_sid, sid: sid, idempotency_key: idempotency_key, status_callback: status_callback, capture: capture, status: status).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_payments(*, account_sid : String = @account_sid, call_sid : String, sid : String, idempotency_key : String, status_callback : String, capture : String? = nil, status : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_payments ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_payments, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_payments, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_payments, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_payments, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_payments, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_payments, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_payments, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_payments, the character length must be great than or equal to 34.")
      end

      pattern = /^PK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_payments, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["payment-card-number", "expiration-date", "security-code", "postal-code", "bank-routing-number", "bank-account-number"]
      if @api_client.config.client_side_validation && !capture.nil? && !allowable_values.includes?(capture)
        raise ArgumentError.new("invalid value for \"capture\", must be one of #{allowable_values}")
      end
      allowable_values = ["complete", "cancel"]
      if @api_client.config.client_side_validation && !status.nil? && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Payments/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Capture"] = capture.to_s if !capture.nil?
      form_params["IdempotencyKey"] = idempotency_key.to_s if !idempotency_key.nil?
      form_params["Status"] = status.to_s if !status.nil?
      form_params["StatusCallback"] = status_callback.to_s if !status_callback.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_payments",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update the queue with the new parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to update
    # @return [Queue]
    def update_queue(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil, max_size : Int32? = nil)
      data, _status_code, _headers = update_queue_with_http_info(account_sid: account_sid, sid: sid, friendly_name: friendly_name, max_size: max_size)
      data
    end

    # Update the queue with the new parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to update
    # @return [Array<(Queue, Integer, Hash)>] Queue data, response status code and response headers
    def update_queue_with_http_info(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil, max_size : Int32? = nil)
      request = build_api_request_for_update_queue(account_sid: account_sid, sid: sid, friendly_name: friendly_name, max_size: max_size)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Queue.from_json(data), status_code, headers
    end

    # Update the queue with the new parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Queue resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the Queue resource to update
    # @return nil
    def update_queue(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil, max_size : Int32? = nil, &block : Crest::Response ->)
      build_api_request_for_update_queue(account_sid: account_sid, sid: sid, friendly_name: friendly_name, max_size: max_size).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_queue(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil, max_size : Int32? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_queue ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_queue, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_queue, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_queue, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_queue, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_queue, the character length must be great than or equal to 34.")
      end

      pattern = /^QU[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_queue, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["MaxSize"] = max_size.to_s if !max_size.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_queue",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update a short code with the following parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ShortCode resource to update
    # @return [ShortCode]
    def update_short_code(*, account_sid : String = @account_sid, sid : String, api_version : String? = nil, friendly_name : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil)
      data, _status_code, _headers = update_short_code_with_http_info(account_sid: account_sid, sid: sid, api_version: api_version, friendly_name: friendly_name, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url)
      data
    end

    # Update a short code with the following parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ShortCode resource to update
    # @return [Array<(ShortCode, Integer, Hash)>] ShortCode data, response status code and response headers
    def update_short_code_with_http_info(*, account_sid : String = @account_sid, sid : String, api_version : String? = nil, friendly_name : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil)
      request = build_api_request_for_update_short_code(account_sid: account_sid, sid: sid, api_version: api_version, friendly_name: friendly_name, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_short_code\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return ShortCode.from_json(data), status_code, headers
    end

    # Update a short code with the following parameters
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the ShortCode resource to update
    # @return nil
    def update_short_code(*, account_sid : String = @account_sid, sid : String, api_version : String? = nil, friendly_name : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_short_code(account_sid: account_sid, sid: sid, api_version: api_version, friendly_name: friendly_name, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_short_code(*, account_sid : String = @account_sid, sid : String, api_version : String? = nil, friendly_name : String? = nil, sms_fallback_method : String? = nil, sms_fallback_url : String? = nil, sms_method : String? = nil, sms_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_short_code ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_short_code, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_short_code, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_short_code, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_short_code, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_short_code, the character length must be great than or equal to 34.")
      end

      pattern = /^SC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_short_code, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_fallback_method.nil? && !allowable_values.includes?(sms_fallback_method)
        raise ArgumentError.new("invalid value for \"sms_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !sms_method.nil? && !allowable_values.includes?(sms_method)
        raise ArgumentError.new("invalid value for \"sms_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["ApiVersion"] = api_version.to_s if !api_version.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["SmsFallbackMethod"] = sms_fallback_method.to_s if !sms_fallback_method.nil?
      form_params["SmsFallbackUrl"] = sms_fallback_url.to_s if !sms_fallback_url.nil?
      form_params["SmsMethod"] = sms_method.to_s if !sms_method.nil?
      form_params["SmsUrl"] = sms_url.to_s if !sms_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_short_code",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return [SigningKey]
    def update_signing_key(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil)
      data, _status_code, _headers = update_signing_key_with_http_info(account_sid: account_sid, sid: sid, friendly_name: friendly_name)
      data
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return [Array<(SigningKey, Integer, Hash)>] SigningKey data, response status code and response headers
    def update_signing_key_with_http_info(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil)
      request = build_api_request_for_update_signing_key(account_sid: account_sid, sid: sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_signing_key\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SigningKey.from_json(data), status_code, headers
    end

    #
    # @param account_sid [String]
    # @param sid [String]
    # @return nil
    def update_signing_key(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_signing_key(account_sid: account_sid, sid: sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_signing_key(*, account_sid : String = @account_sid, sid : String, friendly_name : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_signing_key ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_signing_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_signing_key, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_signing_key, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_signing_key, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_signing_key, the character length must be great than or equal to 34.")
      end

      pattern = /^SK[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_signing_key, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_signing_key",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update a credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that includes this credential.
    # @param sid [String] The unique id that identifies the resource to update.
    # @return [SipSipCredentialListSipCredential]
    def update_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String, password : String? = nil)
      data, _status_code, _headers = update_sip_credential_with_http_info(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid, password: password)
      data
    end

    # Update a credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that includes this credential.
    # @param sid [String] The unique id that identifies the resource to update.
    # @return [Array<(SipSipCredentialListSipCredential, Integer, Hash)>] SipSipCredentialListSipCredential data, response status code and response headers
    def update_sip_credential_with_http_info(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String, password : String? = nil)
      request = build_api_request_for_update_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid, password: password)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_sip_credential\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipCredentialListSipCredential.from_json(data), status_code, headers
    end

    # Update a credential resource.
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param credential_list_sid [String] The unique id that identifies the credential list that includes this credential.
    # @param sid [String] The unique id that identifies the resource to update.
    # @return nil
    def update_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String, password : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_sip_credential(account_sid: account_sid, credential_list_sid: credential_list_sid, sid: sid, password: password).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_sip_credential(*, account_sid : String = @account_sid, credential_list_sid : String, sid : String, password : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_sip_credential ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.update_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && credential_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.update_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && credential_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"credential_list_sid\" when calling DefaultApi.update_sip_credential, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_credential, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_credential, the character length must be great than or equal to 34.")
      end

      pattern = /^CR[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_credential, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CredentialListSid" + "}", URI.encode_path(credential_list_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Password"] = password.to_s if !password.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_sip_credential",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @param friendly_name [String] A human readable descriptive text for a CredentialList, up to 64 characters long.
    # @return [SipSipCredentialList]
    def update_sip_credential_list(*, account_sid : String = @account_sid, sid : String, friendly_name : String)
      data, _status_code, _headers = update_sip_credential_list_with_http_info(account_sid: account_sid, sid: sid, friendly_name: friendly_name)
      data
    end

    # Update a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @param friendly_name [String] A human readable descriptive text for a CredentialList, up to 64 characters long.
    # @return [Array<(SipSipCredentialList, Integer, Hash)>] SipSipCredentialList data, response status code and response headers
    def update_sip_credential_list_with_http_info(*, account_sid : String = @account_sid, sid : String, friendly_name : String)
      request = build_api_request_for_update_sip_credential_list(account_sid: account_sid, sid: sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_sip_credential_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipCredentialList.from_json(data), status_code, headers
    end

    # Update a Credential List
    # @param account_sid [String] The unique id of the Account that is responsible for this resource.
    # @param sid [String] The credential list Sid that uniquely identifies this resource
    # @param friendly_name [String] A human readable descriptive text for a CredentialList, up to 64 characters long.
    # @return nil
    def update_sip_credential_list(*, account_sid : String = @account_sid, sid : String, friendly_name : String, &block : Crest::Response ->)
      build_api_request_for_update_sip_credential_list(account_sid: account_sid, sid: sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_sip_credential_list(*, account_sid : String = @account_sid, sid : String, friendly_name : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_sip_credential_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_credential_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_credential_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_credential_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_credential_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_credential_list, the character length must be great than or equal to 34.")
      end

      pattern = /^CL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_credential_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_sip_credential_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update the attributes of a domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to update.
    # @return [SipSipDomain]
    def update_sip_domain(*, account_sid : String = @account_sid, sid : String, byoc_trunk_sid : String? = nil, domain_name : String? = nil, emergency_caller_sid : String? = nil, emergency_calling_enabled : Bool? = nil, friendly_name : String? = nil, secure : Bool? = nil, sip_registration : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_status_callback_method : String? = nil, voice_status_callback_url : String? = nil, voice_url : String? = nil)
      data, _status_code, _headers = update_sip_domain_with_http_info(account_sid: account_sid, sid: sid, byoc_trunk_sid: byoc_trunk_sid, domain_name: domain_name, emergency_caller_sid: emergency_caller_sid, emergency_calling_enabled: emergency_calling_enabled, friendly_name: friendly_name, secure: secure, sip_registration: sip_registration, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_status_callback_method: voice_status_callback_method, voice_status_callback_url: voice_status_callback_url, voice_url: voice_url)
      data
    end

    # Update the attributes of a domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to update.
    # @return [Array<(SipSipDomain, Integer, Hash)>] SipSipDomain data, response status code and response headers
    def update_sip_domain_with_http_info(*, account_sid : String = @account_sid, sid : String, byoc_trunk_sid : String? = nil, domain_name : String? = nil, emergency_caller_sid : String? = nil, emergency_calling_enabled : Bool? = nil, friendly_name : String? = nil, secure : Bool? = nil, sip_registration : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_status_callback_method : String? = nil, voice_status_callback_url : String? = nil, voice_url : String? = nil)
      request = build_api_request_for_update_sip_domain(account_sid: account_sid, sid: sid, byoc_trunk_sid: byoc_trunk_sid, domain_name: domain_name, emergency_caller_sid: emergency_caller_sid, emergency_calling_enabled: emergency_calling_enabled, friendly_name: friendly_name, secure: secure, sip_registration: sip_registration, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_status_callback_method: voice_status_callback_method, voice_status_callback_url: voice_status_callback_url, voice_url: voice_url)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_sip_domain\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipDomain.from_json(data), status_code, headers
    end

    # Update the attributes of a domain
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the SipDomain resource to update.
    # @return nil
    def update_sip_domain(*, account_sid : String = @account_sid, sid : String, byoc_trunk_sid : String? = nil, domain_name : String? = nil, emergency_caller_sid : String? = nil, emergency_calling_enabled : Bool? = nil, friendly_name : String? = nil, secure : Bool? = nil, sip_registration : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_status_callback_method : String? = nil, voice_status_callback_url : String? = nil, voice_url : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_sip_domain(account_sid: account_sid, sid: sid, byoc_trunk_sid: byoc_trunk_sid, domain_name: domain_name, emergency_caller_sid: emergency_caller_sid, emergency_calling_enabled: emergency_calling_enabled, friendly_name: friendly_name, secure: secure, sip_registration: sip_registration, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_status_callback_method: voice_status_callback_method, voice_status_callback_url: voice_status_callback_url, voice_url: voice_url).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_sip_domain(*, account_sid : String = @account_sid, sid : String, byoc_trunk_sid : String? = nil, domain_name : String? = nil, emergency_caller_sid : String? = nil, emergency_calling_enabled : Bool? = nil, friendly_name : String? = nil, secure : Bool? = nil, sip_registration : Bool? = nil, voice_fallback_method : String? = nil, voice_fallback_url : String? = nil, voice_method : String? = nil, voice_status_callback_method : String? = nil, voice_status_callback_url : String? = nil, voice_url : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_sip_domain ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_domain, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^SD[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_domain, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !byoc_trunk_sid.nil? && byoc_trunk_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"byoc_trunk_sid\" when calling DefaultApi.update_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !byoc_trunk_sid.nil? && byoc_trunk_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"byoc_trunk_sid\" when calling DefaultApi.update_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^BY[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !byoc_trunk_sid.nil? && byoc_trunk_sid !~ pattern
        raise ArgumentError.new("invalid value for \"byoc_trunk_sid\" when calling DefaultApi.update_sip_domain, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !emergency_caller_sid.nil? && emergency_caller_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"emergency_caller_sid\" when calling DefaultApi.update_sip_domain, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && !emergency_caller_sid.nil? && emergency_caller_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"emergency_caller_sid\" when calling DefaultApi.update_sip_domain, the character length must be great than or equal to 34.")
      end

      pattern = /^PN[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && !emergency_caller_sid.nil? && emergency_caller_sid !~ pattern
        raise ArgumentError.new("invalid value for \"emergency_caller_sid\" when calling DefaultApi.update_sip_domain, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_fallback_method.nil? && !allowable_values.includes?(voice_fallback_method)
        raise ArgumentError.new("invalid value for \"voice_fallback_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_method.nil? && !allowable_values.includes?(voice_method)
        raise ArgumentError.new("invalid value for \"voice_method\", must be one of #{allowable_values}")
      end
      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !voice_status_callback_method.nil? && !allowable_values.includes?(voice_status_callback_method)
        raise ArgumentError.new("invalid value for \"voice_status_callback_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["ByocTrunkSid"] = byoc_trunk_sid.to_s if !byoc_trunk_sid.nil?
      form_params["DomainName"] = domain_name.to_s if !domain_name.nil?
      form_params["EmergencyCallerSid"] = emergency_caller_sid.to_s if !emergency_caller_sid.nil?
      form_params["EmergencyCallingEnabled"] = emergency_calling_enabled.to_s if !emergency_calling_enabled.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["Secure"] = secure.to_s if !secure.nil?
      form_params["SipRegistration"] = sip_registration.to_s if !sip_registration.nil?
      form_params["VoiceFallbackMethod"] = voice_fallback_method.to_s if !voice_fallback_method.nil?
      form_params["VoiceFallbackUrl"] = voice_fallback_url.to_s if !voice_fallback_url.nil?
      form_params["VoiceMethod"] = voice_method.to_s if !voice_method.nil?
      form_params["VoiceStatusCallbackMethod"] = voice_status_callback_method.to_s if !voice_status_callback_method.nil?
      form_params["VoiceStatusCallbackUrl"] = voice_status_callback_url.to_s if !voice_status_callback_url.nil?
      form_params["VoiceUrl"] = voice_url.to_s if !voice_url.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_sip_domain",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Rename an IpAccessControlList
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to udpate.
    # @param friendly_name [String] A human readable descriptive text, up to 64 characters long.
    # @return [SipSipIpAccessControlList]
    def update_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String, friendly_name : String)
      data, _status_code, _headers = update_sip_ip_access_control_list_with_http_info(account_sid: account_sid, sid: sid, friendly_name: friendly_name)
      data
    end

    # Rename an IpAccessControlList
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to udpate.
    # @param friendly_name [String] A human readable descriptive text, up to 64 characters long.
    # @return [Array<(SipSipIpAccessControlList, Integer, Hash)>] SipSipIpAccessControlList data, response status code and response headers
    def update_sip_ip_access_control_list_with_http_info(*, account_sid : String = @account_sid, sid : String, friendly_name : String)
      request = build_api_request_for_update_sip_ip_access_control_list(account_sid: account_sid, sid: sid, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_sip_ip_access_control_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipIpAccessControlList.from_json(data), status_code, headers
    end

    # Rename an IpAccessControlList
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param sid [String] A 34 character string that uniquely identifies the resource to udpate.
    # @param friendly_name [String] A human readable descriptive text, up to 64 characters long.
    # @return nil
    def update_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String, friendly_name : String, &block : Crest::Response ->)
      build_api_request_for_update_sip_ip_access_control_list(account_sid: account_sid, sid: sid, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_sip_ip_access_control_list(*, account_sid : String = @account_sid, sid : String, friendly_name : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_sip_ip_access_control_list ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_ip_access_control_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_ip_access_control_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_ip_access_control_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_ip_access_control_list, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_ip_access_control_list, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_ip_access_control_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_sip_ip_access_control_list",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update an IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to update.
    # @param sid [String] A 34 character string that identifies the IpAddress resource to update.
    # @return [SipSipIpAccessControlListSipIpAddress]
    def update_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String, cidr_prefix_length : Int32? = nil, friendly_name : String? = nil, ip_address : String? = nil)
      data, _status_code, _headers = update_sip_ip_address_with_http_info(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid, cidr_prefix_length: cidr_prefix_length, friendly_name: friendly_name, ip_address: ip_address)
      data
    end

    # Update an IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to update.
    # @param sid [String] A 34 character string that identifies the IpAddress resource to update.
    # @return [Array<(SipSipIpAccessControlListSipIpAddress, Integer, Hash)>] SipSipIpAccessControlListSipIpAddress data, response status code and response headers
    def update_sip_ip_address_with_http_info(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String, cidr_prefix_length : Int32? = nil, friendly_name : String? = nil, ip_address : String? = nil)
      request = build_api_request_for_update_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid, cidr_prefix_length: cidr_prefix_length, friendly_name: friendly_name, ip_address: ip_address)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_sip_ip_address\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return SipSipIpAccessControlListSipIpAddress.from_json(data), status_code, headers
    end

    # Update an IpAddress resource.
    # @param account_sid [String] The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
    # @param ip_access_control_list_sid [String] The IpAccessControlList Sid that identifies the IpAddress resources to update.
    # @param sid [String] A 34 character string that identifies the IpAddress resource to update.
    # @return nil
    def update_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String, cidr_prefix_length : Int32? = nil, friendly_name : String? = nil, ip_address : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_sip_ip_address(account_sid: account_sid, ip_access_control_list_sid: ip_access_control_list_sid, sid: sid, cidr_prefix_length: cidr_prefix_length, friendly_name: friendly_name, ip_address: ip_address).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_sip_ip_address(*, account_sid : String = @account_sid, ip_access_control_list_sid : String, sid : String, cidr_prefix_length : Int32? = nil, friendly_name : String? = nil, ip_address : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_sip_ip_address ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.update_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && ip_access_control_list_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.update_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^AL[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && ip_access_control_list_sid !~ pattern
        raise ArgumentError.new("invalid value for \"ip_access_control_list_sid\" when calling DefaultApi.update_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_ip_address, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_ip_address, the character length must be great than or equal to 34.")
      end

      pattern = /^IP[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_sip_ip_address, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "IpAccessControlListSid" + "}", URI.encode_path(ip_access_control_list_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["CidrPrefixLength"] = cidr_prefix_length.to_s if !cidr_prefix_length.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      form_params["IpAddress"] = ip_address.to_s if !ip_address.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_sip_ip_address",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Stop a Siprec using either the SID of the Siprec resource or the `name` used when creating the resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Siprec resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Siprec resource is associated with.
    # @param sid [String] The SID of the Siprec resource, or the `name` used when creating the resource
    # @param status [String] The status. Must have the value `stopped`
    # @return [CallSiprec]
    def update_siprec(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String)
      data, _status_code, _headers = update_siprec_with_http_info(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status)
      data
    end

    # Stop a Siprec using either the SID of the Siprec resource or the &#x60;name&#x60; used when creating the resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Siprec resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Siprec resource is associated with.
    # @param sid [String] The SID of the Siprec resource, or the `name` used when creating the resource
    # @param status [String] The status. Must have the value `stopped`
    # @return [Array<(CallSiprec, Integer, Hash)>] CallSiprec data, response status code and response headers
    def update_siprec_with_http_info(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String)
      request = build_api_request_for_update_siprec(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_siprec\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallSiprec.from_json(data), status_code, headers
    end

    # Stop a Siprec using either the SID of the Siprec resource or the &#x60;name&#x60; used when creating the resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Siprec resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Siprec resource is associated with.
    # @param sid [String] The SID of the Siprec resource, or the `name` used when creating the resource
    # @param status [String] The status. Must have the value `stopped`
    # @return nil
    def update_siprec(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String, &block : Crest::Response ->)
      build_api_request_for_update_siprec(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_siprec(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_siprec ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_siprec, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_siprec, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_siprec, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_siprec, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_siprec, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_siprec, must conform to the pattern #{pattern}.")
      end

      # verify enum value
      allowable_values = ["stopped"]
      if @api_client.config.client_side_validation && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Siprec/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Status"] = status.to_s if !status.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_siprec",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Stop a Stream using either the SID of the Stream resource or the `name` used when creating the resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Stream resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Stream resource is associated with.
    # @param sid [String] The SID of the Stream resource, or the `name` used when creating the resource
    # @param status [String] The status. Must have the value `stopped`
    # @return [CallStream]
    def update_stream(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String)
      data, _status_code, _headers = update_stream_with_http_info(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status)
      data
    end

    # Stop a Stream using either the SID of the Stream resource or the &#x60;name&#x60; used when creating the resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Stream resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Stream resource is associated with.
    # @param sid [String] The SID of the Stream resource, or the `name` used when creating the resource
    # @param status [String] The status. Must have the value `stopped`
    # @return [Array<(CallStream, Integer, Hash)>] CallStream data, response status code and response headers
    def update_stream_with_http_info(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String)
      request = build_api_request_for_update_stream(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_stream\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return CallStream.from_json(data), status_code, headers
    end

    # Stop a Stream using either the SID of the Stream resource or the &#x60;name&#x60; used when creating the resource
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Stream resource.
    # @param call_sid [String] The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Stream resource is associated with.
    # @param sid [String] The SID of the Stream resource, or the `name` used when creating the resource
    # @param status [String] The status. Must have the value `stopped`
    # @return nil
    def update_stream(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String, &block : Crest::Response ->)
      build_api_request_for_update_stream(account_sid: account_sid, call_sid: call_sid, sid: sid, status: status).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_stream(*, account_sid : String = @account_sid, call_sid : String, sid : String, status : String) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_stream ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_stream, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_stream, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_stream, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_stream, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && call_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_stream, the character length must be great than or equal to 34.")
      end

      pattern = /^CA[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && call_sid !~ pattern
        raise ArgumentError.new("invalid value for \"call_sid\" when calling DefaultApi.update_stream, must conform to the pattern #{pattern}.")
      end

      # verify enum value
      allowable_values = ["stopped"]
      if @api_client.config.client_side_validation && !allowable_values.includes?(status)
        raise ArgumentError.new("invalid value for \"status\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Streams/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "CallSid" + "}", URI.encode_path(call_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["Status"] = status.to_s if !status.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_stream",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update an instance of a usage trigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to update.
    # @return [UsageUsageTrigger]
    def update_usage_trigger(*, account_sid : String = @account_sid, sid : String, callback_method : String? = nil, callback_url : String? = nil, friendly_name : String? = nil)
      data, _status_code, _headers = update_usage_trigger_with_http_info(account_sid: account_sid, sid: sid, callback_method: callback_method, callback_url: callback_url, friendly_name: friendly_name)
      data
    end

    # Update an instance of a usage trigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to update.
    # @return [Array<(UsageUsageTrigger, Integer, Hash)>] UsageUsageTrigger data, response status code and response headers
    def update_usage_trigger_with_http_info(*, account_sid : String = @account_sid, sid : String, callback_method : String? = nil, callback_url : String? = nil, friendly_name : String? = nil)
      request = build_api_request_for_update_usage_trigger(account_sid: account_sid, sid: sid, callback_method: callback_method, callback_url: callback_url, friendly_name: friendly_name)

      data, status_code, headers = @api_client.execute_api_request(request)

      if @api_client.config.debugging
        Log.debug { "API called: DefaultApi#update_usage_trigger\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return UsageUsageTrigger.from_json(data), status_code, headers
    end

    # Update an instance of a usage trigger
    # @param account_sid [String] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to update.
    # @param sid [String] The Twilio-provided string that uniquely identifies the UsageTrigger resource to update.
    # @return nil
    def update_usage_trigger(*, account_sid : String = @account_sid, sid : String, callback_method : String? = nil, callback_url : String? = nil, friendly_name : String? = nil, &block : Crest::Response ->)
      build_api_request_for_update_usage_trigger(account_sid: account_sid, sid: sid, callback_method: callback_method, callback_url: callback_url, friendly_name: friendly_name).execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_update_usage_trigger(*, account_sid : String = @account_sid, sid : String, callback_method : String? = nil, callback_url : String? = nil, friendly_name : String? = nil) : Crest::Request
      if @api_client.config.debugging
        Log.debug { "Calling API: DefaultApi.update_usage_trigger ..." }
      end
      if @api_client.config.client_side_validation && account_sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_usage_trigger, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && account_sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_usage_trigger, the character length must be great than or equal to 34.")
      end

      pattern = /^AC[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && account_sid !~ pattern
        raise ArgumentError.new("invalid value for \"account_sid\" when calling DefaultApi.update_usage_trigger, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size > 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_usage_trigger, the character length must be smaller than or equal to 34.")
      end

      if @api_client.config.client_side_validation && sid.to_s.size < 34
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_usage_trigger, the character length must be great than or equal to 34.")
      end

      pattern = /^UT[0-9a-fA-F]{32}$/
      if @api_client.config.client_side_validation && sid !~ pattern
        raise ArgumentError.new("invalid value for \"sid\" when calling DefaultApi.update_usage_trigger, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]
      if @api_client.config.client_side_validation && !callback_method.nil? && !allowable_values.includes?(callback_method)
        raise ArgumentError.new("invalid value for \"callback_method\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # form parameters
      form_params = Hash(String, (String | Array(String) | IO)).new
      form_params["CallbackMethod"] = callback_method.to_s if !callback_method.nil?
      form_params["CallbackUrl"] = callback_url.to_s if !callback_url.nil?
      form_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "DefaultApi.update_usage_trigger",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end
  end
end
