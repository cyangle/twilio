#  Twilio - Api
#
# This is the public Twilio REST API.
#
# The version of the OpenAPI document: 1.38.0
# Contact: support@twilio.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "../models/http_method"
require "../models/incoming_phone_number"
require "../models/incoming_phone_number_enum_emergency_status"
require "../models/incoming_phone_number_enum_voice_receive_mode"
require "../models/incoming_phone_number_incoming_phone_number_assigned_add_on"
require "../models/incoming_phone_number_incoming_phone_number_assigned_add_on_incoming_phone_number_assigned_add_on_extension"
require "../models/incoming_phone_number_incoming_phone_number_local"

require "../models/list_incoming_phone_number_assigned_add_on_extension_response"
require "../models/list_incoming_phone_number_assigned_add_on_response"
require "../models/list_incoming_phone_number_local_response"
require "../models/list_incoming_phone_number_mobile_response"
require "../models/list_incoming_phone_number_response"
require "../models/list_incoming_phone_number_toll_free_response"

module Twilio
  class IncomingPhoneNumbersApi
    property api_client : ApiClient

    delegate client_side_validation, debugging, to: @api_client.config
    property account_sid : String

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
      @account_sid = api_client.config.username.not_nil!
    end

    # Purchase a phone-number for the account.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param area_code [String?] The desired area code for your new incoming phone number. Can be any three-digit, US or Canada area code. We will provision an available phone number within this area code for you. **You must provide an `area_code` or a `phone_number`.** (US and Canada only).
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the new phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Twilio::IncomingPhoneNumber]
    def create_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      address_sid : String? = nil,
      api_version : String? = nil,
      area_code : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      phone_number : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Twilio::IncomingPhoneNumber
      data, _status_code, _headers = create_incoming_phone_number_with_http_info(account_sid: account_sid, address_sid: address_sid, api_version: api_version, area_code: area_code, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, phone_number: phone_number, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    # Purchase a phone-number for the account.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param area_code [String?] The desired area code for your new incoming phone number. Can be any three-digit, US or Canada area code. We will provision an available phone number within this area code for you. **You must provide an `area_code` or a `phone_number`.** (US and Canada only).
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the new phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Tuple(Twilio::IncomingPhoneNumber, Integer, Hash)] Twilio::IncomingPhoneNumber, response status code and response headers
    def create_incoming_phone_number_with_http_info(
      *,
      account_sid : String? = @account_sid,
      address_sid : String? = nil,
      api_version : String? = nil,
      area_code : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      phone_number : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumber, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_create_incoming_phone_number(account_sid: account_sid, address_sid: address_sid, api_version: api_version, area_code: area_code, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, phone_number: phone_number, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#create_incoming_phone_number\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumber.from_json(body), status_code, headers)
    end

    # Purchase a phone-number for the account.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param area_code [String?] The desired area code for your new incoming phone number. Can be any three-digit, US or Canada area code. We will provision an available phone number within this area code for you. **You must provide an `area_code` or a `phone_number`.** (US and Canada only).
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the new phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return nil
    def create_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      address_sid : String? = nil,
      api_version : String? = nil,
      area_code : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      phone_number : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_create_incoming_phone_number(account_sid: account_sid, address_sid: address_sid, api_version: api_version, area_code: area_code, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, phone_number: phone_number, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID              = /^AC[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ADDRESS_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ADDRESS_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ADDRESS_SID              = /^AD[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_BUNDLE_SID            = 34
    CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_BUNDLE_SID            = 34
    CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_BUNDLE_SID               = /^BU[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_EMERGENCY_ADDRESS_SID    = /^AD[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_IDENTITY_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_IDENTITY_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_IDENTITY_SID             = /^RI[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_SMS_APPLICATION_SID      = /^AP[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_TRUNK_SID             = 34
    CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_TRUNK_SID             = 34
    CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_TRUNK_SID                = /^TK[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_VOICE_APPLICATION_SID    = /^AP[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      address_sid : String? = nil,
      api_version : String? = nil,
      area_code : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      phone_number : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.create_incoming_phone_number ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID)
        end
        unless (_address_sid = address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("address_sid", address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("address_sid", address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("address_sid", _address_sid, CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ADDRESS_SID)
        end

        unless (_bundle_sid = bundle_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("bundle_sid", bundle_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("bundle_sid", bundle_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("bundle_sid", _bundle_sid, CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_BUNDLE_SID)
        end
        unless (_emergency_address_sid = emergency_address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("emergency_address_sid", emergency_address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("emergency_address_sid", emergency_address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("emergency_address_sid", _emergency_address_sid, CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_EMERGENCY_ADDRESS_SID)
        end
        unless (_emergency_status = emergency_status).nil?
          _emergency_status.validate
        end

        unless (_identity_sid = identity_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("identity_sid", identity_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_min_length("identity_sid", identity_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_pattern("identity_sid", _identity_sid, CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_IDENTITY_SID)
        end

        unless (_sms_application_sid = sms_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sms_application_sid", sms_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sms_application_sid", sms_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sms_application_sid", _sms_application_sid, CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_SMS_APPLICATION_SID)
        end
        unless (_sms_fallback_method = sms_fallback_method).nil?
          _sms_fallback_method.validate
        end

        unless (_sms_method = sms_method).nil?
          _sms_method.validate
        end

        unless (_status_callback_method = status_callback_method).nil?
          _status_callback_method.validate
        end
        unless (_trunk_sid = trunk_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("trunk_sid", trunk_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_min_length("trunk_sid", trunk_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_pattern("trunk_sid", _trunk_sid, CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_TRUNK_SID)
        end
        unless (_voice_application_sid = voice_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("voice_application_sid", voice_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("voice_application_sid", voice_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("voice_application_sid", _voice_application_sid, CREATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_VOICE_APPLICATION_SID)
        end

        unless (_voice_fallback_method = voice_fallback_method).nil?
          _voice_fallback_method.validate
        end

        unless (_voice_method = voice_method).nil?
          _voice_method.validate
        end
        unless (_voice_receive_mode = voice_receive_mode).nil?
          _voice_receive_mode.validate
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = Array(Tuple(String, Crest::ParamsValue)).new
      form_params << Tuple(String, Crest::ParamsValue).new("AddressSid", address_sid.to_s) if !address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("ApiVersion", api_version.to_s) if !api_version.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("AreaCode", area_code.to_s) if !area_code.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("BundleSid", bundle_sid.to_s) if !bundle_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyAddressSid", emergency_address_sid.to_s) if !emergency_address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyStatus", emergency_status.to_s) if !emergency_status.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("FriendlyName", friendly_name.to_s) if !friendly_name.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("IdentitySid", identity_sid.to_s) if !identity_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("PhoneNumber", phone_number.to_s) if !phone_number.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsApplicationSid", sms_application_sid.to_s) if !sms_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackMethod", sms_fallback_method.to_s) if !sms_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackUrl", sms_fallback_url.to_s) if !sms_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsMethod", sms_method.to_s) if !sms_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsUrl", sms_url.to_s) if !sms_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallback", status_callback.to_s) if !status_callback.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallbackMethod", status_callback_method.to_s) if !status_callback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("TrunkSid", trunk_sid.to_s) if !trunk_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceApplicationSid", voice_application_sid.to_s) if !voice_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceCallerIdLookup", voice_caller_id_lookup.to_s) if !voice_caller_id_lookup.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackMethod", voice_fallback_method.to_s) if !voice_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackUrl", voice_fallback_url.to_s) if !voice_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceMethod", voice_method.to_s) if !voice_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceReceiveMode", voice_receive_mode.to_s) if !voice_receive_mode.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceUrl", voice_url.to_s) if !voice_url.nil?

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.create_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Assign an Add-on installation to the Number specified.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param resource_sid [String?] The SID of the Phone Number to assign the Add-on.
    # @required @param installed_add_on_sid [String?] The SID that identifies the Add-on installation.
    # @return [Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn]
    def create_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      installed_add_on_sid : String? = nil
    ) : Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn
      data, _status_code, _headers = create_incoming_phone_number_assigned_add_on_with_http_info(account_sid: account_sid, resource_sid: resource_sid, installed_add_on_sid: installed_add_on_sid)
      data
    end

    # Assign an Add-on installation to the Number specified.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param resource_sid [String?] The SID of the Phone Number to assign the Add-on.
    # @required @param installed_add_on_sid [String?] The SID that identifies the Add-on installation.
    # @return [Tuple(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn, Integer, Hash)] Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn, response status code and response headers
    def create_incoming_phone_number_assigned_add_on_with_http_info(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      installed_add_on_sid : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_create_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, installed_add_on_sid: installed_add_on_sid)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#create_incoming_phone_number_assigned_add_on\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn.from_json(body), status_code, headers)
    end

    # Assign an Add-on installation to the Number specified.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param resource_sid [String?] The SID of the Phone Number to assign the Add-on.
    # @required @param installed_add_on_sid [String?] The SID that identifies the Add-on installation.
    # @return nil
    def create_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      installed_add_on_sid : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_create_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, installed_add_on_sid: installed_add_on_sid).execute(&block)
    end

    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_ACCOUNT_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_ACCOUNT_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_ACCOUNT_SID             = /^AC[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_RESOURCE_SID         = 34
    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_RESOURCE_SID         = 34
    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_RESOURCE_SID            = /^PN[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_INSTALLED_ADD_ON_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_INSTALLED_ADD_ON_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_INSTALLED_ADD_ON_SID    = /^XE[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      installed_add_on_sid : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.create_incoming_phone_number_assigned_add_on ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"resource_sid\" is required and cannot be null") if resource_sid.nil?
        unless (_resource_sid = resource_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("resource_sid", resource_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("resource_sid", resource_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("resource_sid", _resource_sid, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_RESOURCE_SID)
        end
        raise ArgumentError.new("\"installed_add_on_sid\" is required and cannot be null") if installed_add_on_sid.nil?
        unless (_installed_add_on_sid = installed_add_on_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("installed_add_on_sid", installed_add_on_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_INSTALLED_ADD_ON_SID)
          OpenApi::PrimitiveValidator.validate_min_length("installed_add_on_sid", installed_add_on_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_INSTALLED_ADD_ON_SID)
          OpenApi::PrimitiveValidator.validate_pattern("installed_add_on_sid", _installed_add_on_sid, CREATE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_INSTALLED_ADD_ON_SID)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = Array(Tuple(String, Crest::ParamsValue)).new
      form_params << Tuple(String, Crest::ParamsValue).new("InstalledAddOnSid", installed_add_on_sid.to_s) if !installed_add_on_sid.nil?

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.create_incoming_phone_number_assigned_add_on",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Twilio::IncomingPhoneNumberIncomingPhoneNumberLocal]
    def create_incoming_phone_number_local(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Twilio::IncomingPhoneNumberIncomingPhoneNumberLocal
      data, _status_code, _headers = create_incoming_phone_number_local_with_http_info(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Tuple(Twilio::IncomingPhoneNumberIncomingPhoneNumberLocal, Integer, Hash)] Twilio::IncomingPhoneNumberIncomingPhoneNumberLocal, response status code and response headers
    def create_incoming_phone_number_local_with_http_info(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumberIncomingPhoneNumberLocal, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_create_incoming_phone_number_local(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#create_incoming_phone_number_local\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumberIncomingPhoneNumberLocal.from_json(body), status_code, headers)
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return nil
    def create_incoming_phone_number_local(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_create_incoming_phone_number_local(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_ACCOUNT_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_ACCOUNT_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_ACCOUNT_SID              = /^AC[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_ADDRESS_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_ADDRESS_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_ADDRESS_SID              = /^AD[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_BUNDLE_SID            = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_BUNDLE_SID            = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_BUNDLE_SID               = /^BU[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_EMERGENCY_ADDRESS_SID    = /^AD[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_IDENTITY_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_IDENTITY_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_IDENTITY_SID             = /^RI[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_SMS_APPLICATION_SID      = /^AP[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_TRUNK_SID             = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_TRUNK_SID             = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_TRUNK_SID                = /^TK[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_VOICE_APPLICATION_SID    = /^AP[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number_local(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.create_incoming_phone_number_local ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"phone_number\" is required and cannot be null") if phone_number.nil?

        unless (_address_sid = address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("address_sid", address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("address_sid", address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("address_sid", _address_sid, CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_ADDRESS_SID)
        end

        unless (_bundle_sid = bundle_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("bundle_sid", bundle_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("bundle_sid", bundle_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("bundle_sid", _bundle_sid, CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_BUNDLE_SID)
        end
        unless (_emergency_address_sid = emergency_address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("emergency_address_sid", emergency_address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("emergency_address_sid", emergency_address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("emergency_address_sid", _emergency_address_sid, CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_EMERGENCY_ADDRESS_SID)
        end
        unless (_emergency_status = emergency_status).nil?
          _emergency_status.validate
        end

        unless (_identity_sid = identity_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("identity_sid", identity_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_min_length("identity_sid", identity_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_pattern("identity_sid", _identity_sid, CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_IDENTITY_SID)
        end
        unless (_sms_application_sid = sms_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sms_application_sid", sms_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sms_application_sid", sms_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sms_application_sid", _sms_application_sid, CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_SMS_APPLICATION_SID)
        end
        unless (_sms_fallback_method = sms_fallback_method).nil?
          _sms_fallback_method.validate
        end

        unless (_sms_method = sms_method).nil?
          _sms_method.validate
        end

        unless (_status_callback_method = status_callback_method).nil?
          _status_callback_method.validate
        end
        unless (_trunk_sid = trunk_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("trunk_sid", trunk_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_min_length("trunk_sid", trunk_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_pattern("trunk_sid", _trunk_sid, CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_TRUNK_SID)
        end
        unless (_voice_application_sid = voice_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("voice_application_sid", voice_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("voice_application_sid", voice_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("voice_application_sid", _voice_application_sid, CREATE_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_VOICE_APPLICATION_SID)
        end

        unless (_voice_fallback_method = voice_fallback_method).nil?
          _voice_fallback_method.validate
        end

        unless (_voice_method = voice_method).nil?
          _voice_method.validate
        end
        unless (_voice_receive_mode = voice_receive_mode).nil?
          _voice_receive_mode.validate
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = Array(Tuple(String, Crest::ParamsValue)).new
      form_params << Tuple(String, Crest::ParamsValue).new("AddressSid", address_sid.to_s) if !address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("ApiVersion", api_version.to_s) if !api_version.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("BundleSid", bundle_sid.to_s) if !bundle_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyAddressSid", emergency_address_sid.to_s) if !emergency_address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyStatus", emergency_status.to_s) if !emergency_status.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("FriendlyName", friendly_name.to_s) if !friendly_name.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("IdentitySid", identity_sid.to_s) if !identity_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("PhoneNumber", phone_number.to_s) if !phone_number.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsApplicationSid", sms_application_sid.to_s) if !sms_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackMethod", sms_fallback_method.to_s) if !sms_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackUrl", sms_fallback_url.to_s) if !sms_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsMethod", sms_method.to_s) if !sms_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsUrl", sms_url.to_s) if !sms_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallback", status_callback.to_s) if !status_callback.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallbackMethod", status_callback_method.to_s) if !status_callback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("TrunkSid", trunk_sid.to_s) if !trunk_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceApplicationSid", voice_application_sid.to_s) if !voice_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceCallerIdLookup", voice_caller_id_lookup.to_s) if !voice_caller_id_lookup.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackMethod", voice_fallback_method.to_s) if !voice_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackUrl", voice_fallback_url.to_s) if !voice_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceMethod", voice_method.to_s) if !voice_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceReceiveMode", voice_receive_mode.to_s) if !voice_receive_mode.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceUrl", voice_url.to_s) if !voice_url.nil?

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.create_incoming_phone_number_local",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, the is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those of the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Twilio::IncomingPhoneNumber]
    def create_incoming_phone_number_mobile(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Twilio::IncomingPhoneNumber
      data, _status_code, _headers = create_incoming_phone_number_mobile_with_http_info(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, the is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those of the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Tuple(Twilio::IncomingPhoneNumber, Integer, Hash)] Twilio::IncomingPhoneNumber, response status code and response headers
    def create_incoming_phone_number_mobile_with_http_info(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumber, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_create_incoming_phone_number_mobile(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#create_incoming_phone_number_mobile\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumber.from_json(body), status_code, headers)
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, the is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those of the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return nil
    def create_incoming_phone_number_mobile(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_create_incoming_phone_number_mobile(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_ACCOUNT_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_ACCOUNT_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_ACCOUNT_SID              = /^AC[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_ADDRESS_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_ADDRESS_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_ADDRESS_SID              = /^AD[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_BUNDLE_SID            = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_BUNDLE_SID            = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_BUNDLE_SID               = /^BU[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_EMERGENCY_ADDRESS_SID    = /^AD[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_IDENTITY_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_IDENTITY_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_IDENTITY_SID             = /^RI[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_SMS_APPLICATION_SID      = /^AP[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_TRUNK_SID             = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_TRUNK_SID             = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_TRUNK_SID                = /^TK[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_VOICE_APPLICATION_SID    = /^AP[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number_mobile(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.create_incoming_phone_number_mobile ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"phone_number\" is required and cannot be null") if phone_number.nil?

        unless (_address_sid = address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("address_sid", address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("address_sid", address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("address_sid", _address_sid, CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_ADDRESS_SID)
        end

        unless (_bundle_sid = bundle_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("bundle_sid", bundle_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("bundle_sid", bundle_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("bundle_sid", _bundle_sid, CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_BUNDLE_SID)
        end
        unless (_emergency_address_sid = emergency_address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("emergency_address_sid", emergency_address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("emergency_address_sid", emergency_address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("emergency_address_sid", _emergency_address_sid, CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_EMERGENCY_ADDRESS_SID)
        end
        unless (_emergency_status = emergency_status).nil?
          _emergency_status.validate
        end

        unless (_identity_sid = identity_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("identity_sid", identity_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_min_length("identity_sid", identity_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_pattern("identity_sid", _identity_sid, CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_IDENTITY_SID)
        end
        unless (_sms_application_sid = sms_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sms_application_sid", sms_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sms_application_sid", sms_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sms_application_sid", _sms_application_sid, CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_SMS_APPLICATION_SID)
        end
        unless (_sms_fallback_method = sms_fallback_method).nil?
          _sms_fallback_method.validate
        end

        unless (_sms_method = sms_method).nil?
          _sms_method.validate
        end

        unless (_status_callback_method = status_callback_method).nil?
          _status_callback_method.validate
        end
        unless (_trunk_sid = trunk_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("trunk_sid", trunk_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_min_length("trunk_sid", trunk_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_pattern("trunk_sid", _trunk_sid, CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_TRUNK_SID)
        end
        unless (_voice_application_sid = voice_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("voice_application_sid", voice_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("voice_application_sid", voice_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("voice_application_sid", _voice_application_sid, CREATE_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_VOICE_APPLICATION_SID)
        end

        unless (_voice_fallback_method = voice_fallback_method).nil?
          _voice_fallback_method.validate
        end

        unless (_voice_method = voice_method).nil?
          _voice_method.validate
        end
        unless (_voice_receive_mode = voice_receive_mode).nil?
          _voice_receive_mode.validate
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = Array(Tuple(String, Crest::ParamsValue)).new
      form_params << Tuple(String, Crest::ParamsValue).new("AddressSid", address_sid.to_s) if !address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("ApiVersion", api_version.to_s) if !api_version.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("BundleSid", bundle_sid.to_s) if !bundle_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyAddressSid", emergency_address_sid.to_s) if !emergency_address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyStatus", emergency_status.to_s) if !emergency_status.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("FriendlyName", friendly_name.to_s) if !friendly_name.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("IdentitySid", identity_sid.to_s) if !identity_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("PhoneNumber", phone_number.to_s) if !phone_number.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsApplicationSid", sms_application_sid.to_s) if !sms_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackMethod", sms_fallback_method.to_s) if !sms_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackUrl", sms_fallback_url.to_s) if !sms_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsMethod", sms_method.to_s) if !sms_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsUrl", sms_url.to_s) if !sms_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallback", status_callback.to_s) if !status_callback.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallbackMethod", status_callback_method.to_s) if !status_callback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("TrunkSid", trunk_sid.to_s) if !trunk_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceApplicationSid", voice_application_sid.to_s) if !voice_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceCallerIdLookup", voice_caller_id_lookup.to_s) if !voice_caller_id_lookup.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackMethod", voice_fallback_method.to_s) if !voice_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackUrl", voice_fallback_url.to_s) if !voice_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceMethod", voice_method.to_s) if !voice_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceReceiveMode", voice_receive_mode.to_s) if !voice_receive_mode.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceUrl", voice_url.to_s) if !voice_url.nil?

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.create_incoming_phone_number_mobile",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an Identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Twilio::IncomingPhoneNumber]
    def create_incoming_phone_number_toll_free(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Twilio::IncomingPhoneNumber
      data, _status_code, _headers = create_incoming_phone_number_toll_free_with_http_info(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an Identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Tuple(Twilio::IncomingPhoneNumber, Integer, Hash)] Twilio::IncomingPhoneNumber, response status code and response headers
    def create_incoming_phone_number_toll_free_with_http_info(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumber, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_create_incoming_phone_number_toll_free(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#create_incoming_phone_number_toll_free\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumber.from_json(body), status_code, headers)
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
    # @required @param phone_number [String?] The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from the new phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the new phone number. Some regions require an Identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the new phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return nil
    def create_incoming_phone_number_toll_free(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_create_incoming_phone_number_toll_free(account_sid: account_sid, phone_number: phone_number, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_ACCOUNT_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_ACCOUNT_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_ACCOUNT_SID              = /^AC[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_ADDRESS_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_ADDRESS_SID           = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_ADDRESS_SID              = /^AD[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_BUNDLE_SID            = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_BUNDLE_SID            = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_BUNDLE_SID               = /^BU[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_EMERGENCY_ADDRESS_SID    = /^AD[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_IDENTITY_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_IDENTITY_SID          = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_IDENTITY_SID             = /^RI[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_SMS_APPLICATION_SID      = /^AP[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_TRUNK_SID             = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_TRUNK_SID             = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_TRUNK_SID                = /^TK[0-9a-fA-F]{32}$/
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_VOICE_APPLICATION_SID    = /^AP[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_create_incoming_phone_number_toll_free(
      *,
      account_sid : String? = @account_sid,
      phone_number : String? = nil,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.create_incoming_phone_number_toll_free ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"phone_number\" is required and cannot be null") if phone_number.nil?

        unless (_address_sid = address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("address_sid", address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("address_sid", address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("address_sid", _address_sid, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_ADDRESS_SID)
        end

        unless (_bundle_sid = bundle_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("bundle_sid", bundle_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("bundle_sid", bundle_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("bundle_sid", _bundle_sid, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_BUNDLE_SID)
        end
        unless (_emergency_address_sid = emergency_address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("emergency_address_sid", emergency_address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("emergency_address_sid", emergency_address_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("emergency_address_sid", _emergency_address_sid, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_EMERGENCY_ADDRESS_SID)
        end
        unless (_emergency_status = emergency_status).nil?
          _emergency_status.validate
        end

        unless (_identity_sid = identity_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("identity_sid", identity_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_min_length("identity_sid", identity_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_pattern("identity_sid", _identity_sid, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_IDENTITY_SID)
        end
        unless (_sms_application_sid = sms_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sms_application_sid", sms_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sms_application_sid", sms_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sms_application_sid", _sms_application_sid, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_SMS_APPLICATION_SID)
        end
        unless (_sms_fallback_method = sms_fallback_method).nil?
          _sms_fallback_method.validate
        end

        unless (_sms_method = sms_method).nil?
          _sms_method.validate
        end

        unless (_status_callback_method = status_callback_method).nil?
          _status_callback_method.validate
        end
        unless (_trunk_sid = trunk_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("trunk_sid", trunk_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_min_length("trunk_sid", trunk_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_pattern("trunk_sid", _trunk_sid, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_TRUNK_SID)
        end
        unless (_voice_application_sid = voice_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("voice_application_sid", voice_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("voice_application_sid", voice_application_sid.to_s.size, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("voice_application_sid", _voice_application_sid, CREATE_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_VOICE_APPLICATION_SID)
        end

        unless (_voice_fallback_method = voice_fallback_method).nil?
          _voice_fallback_method.validate
        end

        unless (_voice_method = voice_method).nil?
          _voice_method.validate
        end
        unless (_voice_receive_mode = voice_receive_mode).nil?
          _voice_receive_mode.validate
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = Array(Tuple(String, Crest::ParamsValue)).new
      form_params << Tuple(String, Crest::ParamsValue).new("AddressSid", address_sid.to_s) if !address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("ApiVersion", api_version.to_s) if !api_version.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("BundleSid", bundle_sid.to_s) if !bundle_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyAddressSid", emergency_address_sid.to_s) if !emergency_address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyStatus", emergency_status.to_s) if !emergency_status.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("FriendlyName", friendly_name.to_s) if !friendly_name.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("IdentitySid", identity_sid.to_s) if !identity_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("PhoneNumber", phone_number.to_s) if !phone_number.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsApplicationSid", sms_application_sid.to_s) if !sms_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackMethod", sms_fallback_method.to_s) if !sms_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackUrl", sms_fallback_url.to_s) if !sms_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsMethod", sms_method.to_s) if !sms_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsUrl", sms_url.to_s) if !sms_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallback", status_callback.to_s) if !status_callback.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallbackMethod", status_callback_method.to_s) if !status_callback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("TrunkSid", trunk_sid.to_s) if !trunk_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceApplicationSid", voice_application_sid.to_s) if !voice_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceCallerIdLookup", voice_caller_id_lookup.to_s) if !voice_caller_id_lookup.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackMethod", voice_fallback_method.to_s) if !voice_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackUrl", voice_fallback_url.to_s) if !voice_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceMethod", voice_method.to_s) if !voice_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceReceiveMode", voice_receive_mode.to_s) if !voice_receive_mode.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceUrl", voice_url.to_s) if !voice_url.nil?

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.create_incoming_phone_number_toll_free",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Delete a phone-numbers belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to delete.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to delete.
    # @return [Nil]
    def delete_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil
    ) : Nil
      delete_incoming_phone_number_with_http_info(account_sid: account_sid, sid: sid)
      nil
    end

    # Delete a phone-numbers belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to delete.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to delete.
    # @return [Tuple(Nil, Integer, Hash)] Nil, response status code and response headers
    def delete_incoming_phone_number_with_http_info(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil
    ) : Tuple(Nil, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_delete_incoming_phone_number(account_sid: account_sid, sid: sid)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#delete_incoming_phone_number\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(nil, status_code, headers)
    end

    # Delete a phone-numbers belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to delete.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to delete.
    # @return nil
    def delete_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_delete_incoming_phone_number(account_sid: account_sid, sid: sid).execute(&block)
    end

    DELETE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID = 34
    DELETE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID = 34
    DELETE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID    = /^AC[0-9a-fA-F]{32}$/
    DELETE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SID         = 34
    DELETE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SID         = 34
    DELETE_INCOMING_PHONE_NUMBER_PATTERN_FOR_SID            = /^PN[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_delete_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.delete_incoming_phone_number ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, DELETE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"sid\" is required and cannot be null") if sid.nil?
        unless (_sid = sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sid", sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sid", sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sid", _sid, DELETE_INCOMING_PHONE_NUMBER_PATTERN_FOR_SID)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.delete_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Remove the assignment of an Add-on installation from the Number specified.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to delete.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to delete.
    # @return [Nil]
    def delete_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      sid : String? = nil
    ) : Nil
      delete_incoming_phone_number_assigned_add_on_with_http_info(account_sid: account_sid, resource_sid: resource_sid, sid: sid)
      nil
    end

    # Remove the assignment of an Add-on installation from the Number specified.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to delete.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to delete.
    # @return [Tuple(Nil, Integer, Hash)] Nil, response status code and response headers
    def delete_incoming_phone_number_assigned_add_on_with_http_info(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      sid : String? = nil
    ) : Tuple(Nil, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_delete_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, sid: sid)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#delete_incoming_phone_number_assigned_add_on\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(nil, status_code, headers)
    end

    # Remove the assignment of an Add-on installation from the Number specified.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to delete.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to delete.
    # @return nil
    def delete_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      sid : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_delete_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, sid: sid).execute(&block)
    end

    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_ACCOUNT_SID  = 34
    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_ACCOUNT_SID  = 34
    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_ACCOUNT_SID     = /^AC[0-9a-fA-F]{32}$/
    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_RESOURCE_SID = 34
    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_RESOURCE_SID = 34
    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_RESOURCE_SID    = /^PN[0-9a-fA-F]{32}$/
    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_SID          = 34
    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_SID          = 34
    DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_SID             = /^XE[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_delete_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      sid : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.delete_incoming_phone_number_assigned_add_on ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"resource_sid\" is required and cannot be null") if resource_sid.nil?
        unless (_resource_sid = resource_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("resource_sid", resource_sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("resource_sid", resource_sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("resource_sid", _resource_sid, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_RESOURCE_SID)
        end
        raise ArgumentError.new("\"sid\" is required and cannot be null") if sid.nil?
        unless (_sid = sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sid", sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sid", sid.to_s.size, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sid", _sid, DELETE_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_SID)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"DELETE",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.delete_incoming_phone_number_assigned_add_on",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an incoming-phone-number belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to fetch.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to fetch.
    # @return [Twilio::IncomingPhoneNumber]
    def fetch_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil
    ) : Twilio::IncomingPhoneNumber
      data, _status_code, _headers = fetch_incoming_phone_number_with_http_info(account_sid: account_sid, sid: sid)
      data
    end

    # Fetch an incoming-phone-number belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to fetch.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to fetch.
    # @return [Tuple(Twilio::IncomingPhoneNumber, Integer, Hash)] Twilio::IncomingPhoneNumber, response status code and response headers
    def fetch_incoming_phone_number_with_http_info(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumber, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_fetch_incoming_phone_number(account_sid: account_sid, sid: sid)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#fetch_incoming_phone_number\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumber.from_json(body), status_code, headers)
    end

    # Fetch an incoming-phone-number belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to fetch.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to fetch.
    # @return nil
    def fetch_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_fetch_incoming_phone_number(account_sid: account_sid, sid: sid).execute(&block)
    end

    FETCH_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID = 34
    FETCH_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID = 34
    FETCH_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID    = /^AC[0-9a-fA-F]{32}$/
    FETCH_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SID         = 34
    FETCH_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SID         = 34
    FETCH_INCOMING_PHONE_NUMBER_PATTERN_FOR_SID            = /^PN[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_fetch_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.fetch_incoming_phone_number ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, FETCH_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"sid\" is required and cannot be null") if sid.nil?
        unless (_sid = sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sid", sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sid", sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sid", _sid, FETCH_INCOMING_PHONE_NUMBER_PATTERN_FOR_SID)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.fetch_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of an Add-on installation currently assigned to this Number.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return [Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn]
    def fetch_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      sid : String? = nil
    ) : Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn
      data, _status_code, _headers = fetch_incoming_phone_number_assigned_add_on_with_http_info(account_sid: account_sid, resource_sid: resource_sid, sid: sid)
      data
    end

    # Fetch an instance of an Add-on installation currently assigned to this Number.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return [Tuple(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn, Integer, Hash)] Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn, response status code and response headers
    def fetch_incoming_phone_number_assigned_add_on_with_http_info(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      sid : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_fetch_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, sid: sid)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#fetch_incoming_phone_number_assigned_add_on\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOn.from_json(body), status_code, headers)
    end

    # Fetch an instance of an Add-on installation currently assigned to this Number.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return nil
    def fetch_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      sid : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_fetch_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, sid: sid).execute(&block)
    end

    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_ACCOUNT_SID  = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_ACCOUNT_SID  = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_ACCOUNT_SID     = /^AC[0-9a-fA-F]{32}$/
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_RESOURCE_SID = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_RESOURCE_SID = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_RESOURCE_SID    = /^PN[0-9a-fA-F]{32}$/
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_SID          = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_SID          = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_SID             = /^XE[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_fetch_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      sid : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.fetch_incoming_phone_number_assigned_add_on ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"resource_sid\" is required and cannot be null") if resource_sid.nil?
        unless (_resource_sid = resource_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("resource_sid", resource_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("resource_sid", resource_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("resource_sid", _resource_sid, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_RESOURCE_SID)
        end
        raise ArgumentError.new("\"sid\" is required and cannot be null") if sid.nil?
        unless (_sid = sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sid", sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sid", sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sid", _sid, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_SID)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.fetch_incoming_phone_number_assigned_add_on",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Fetch an instance of an Extension for the Assigned Add-on.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param assigned_add_on_sid [String?] The SID that uniquely identifies the assigned Add-on installation.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return [Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension]
    def fetch_incoming_phone_number_assigned_add_on_extension(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      assigned_add_on_sid : String? = nil,
      sid : String? = nil
    ) : Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension
      data, _status_code, _headers = fetch_incoming_phone_number_assigned_add_on_extension_with_http_info(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, sid: sid)
      data
    end

    # Fetch an instance of an Extension for the Assigned Add-on.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param assigned_add_on_sid [String?] The SID that uniquely identifies the assigned Add-on installation.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return [Tuple(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension, Integer, Hash)] Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension, response status code and response headers
    def fetch_incoming_phone_number_assigned_add_on_extension_with_http_info(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      assigned_add_on_sid : String? = nil,
      sid : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_fetch_incoming_phone_number_assigned_add_on_extension(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, sid: sid)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#fetch_incoming_phone_number_assigned_add_on_extension\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumberIncomingPhoneNumberAssignedAddOnIncomingPhoneNumberAssignedAddOnExtension.from_json(body), status_code, headers)
    end

    # Fetch an instance of an Extension for the Assigned Add-on.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resource to fetch.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param assigned_add_on_sid [String?] The SID that uniquely identifies the assigned Add-on installation.
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the resource to fetch.
    # @return nil
    def fetch_incoming_phone_number_assigned_add_on_extension(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      assigned_add_on_sid : String? = nil,
      sid : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_fetch_incoming_phone_number_assigned_add_on_extension(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, sid: sid).execute(&block)
    end

    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_ACCOUNT_SID         = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_ACCOUNT_SID         = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_ACCOUNT_SID            = /^AC[0-9a-fA-F]{32}$/
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_RESOURCE_SID        = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_RESOURCE_SID        = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_RESOURCE_SID           = /^PN[0-9a-fA-F]{32}$/
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_ASSIGNED_ADD_ON_SID = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_ASSIGNED_ADD_ON_SID = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_ASSIGNED_ADD_ON_SID    = /^XE[0-9a-fA-F]{32}$/
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_SID                 = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_SID                 = 34
    FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_SID                    = /^XF[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_fetch_incoming_phone_number_assigned_add_on_extension(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      assigned_add_on_sid : String? = nil,
      sid : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.fetch_incoming_phone_number_assigned_add_on_extension ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"resource_sid\" is required and cannot be null") if resource_sid.nil?
        unless (_resource_sid = resource_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("resource_sid", resource_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("resource_sid", resource_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("resource_sid", _resource_sid, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_RESOURCE_SID)
        end
        raise ArgumentError.new("\"assigned_add_on_sid\" is required and cannot be null") if assigned_add_on_sid.nil?
        unless (_assigned_add_on_sid = assigned_add_on_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("assigned_add_on_sid", assigned_add_on_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_ASSIGNED_ADD_ON_SID)
          OpenApi::PrimitiveValidator.validate_min_length("assigned_add_on_sid", assigned_add_on_sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_ASSIGNED_ADD_ON_SID)
          OpenApi::PrimitiveValidator.validate_pattern("assigned_add_on_sid", _assigned_add_on_sid, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_ASSIGNED_ADD_ON_SID)
        end
        raise ArgumentError.new("\"sid\" is required and cannot be null") if sid.nil?
        unless (_sid = sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sid", sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sid", sid.to_s.size, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sid", _sid, FETCH_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_SID)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s)).sub("{" + "AssignedAddOnSid" + "}", URI.encode_path(assigned_add_on_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.fetch_incoming_phone_number_assigned_add_on_extension",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the IncomingPhoneNumber resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Twilio::ListIncomingPhoneNumberResponse]
    def list_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Twilio::ListIncomingPhoneNumberResponse
      data, _status_code, _headers = list_incoming_phone_number_with_http_info(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)
      data
    end

    # Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the IncomingPhoneNumber resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Tuple(Twilio::ListIncomingPhoneNumberResponse, Integer, Hash)] Twilio::ListIncomingPhoneNumberResponse, response status code and response headers
    def list_incoming_phone_number_with_http_info(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Tuple(Twilio::ListIncomingPhoneNumberResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_list_incoming_phone_number(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#list_incoming_phone_number\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::ListIncomingPhoneNumberResponse.from_json(body), status_code, headers)
    end

    # Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the IncomingPhoneNumber resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return nil
    def list_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_list_incoming_phone_number(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size).execute(&block)
    end

    LIST_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID = 34
    LIST_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID = 34
    LIST_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID    = /^AC[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_MAX_FOR_PAGE_SIZE          = Int32.new("1000")
    LIST_INCOMING_PHONE_NUMBER_MIN_FOR_PAGE_SIZE          = Int32.new("1")

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.list_incoming_phone_number ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, LIST_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID)
        end

        unless (_page_size = page_size).nil?
          OpenApi::PrimitiveValidator.validate_max_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_MAX_FOR_PAGE_SIZE)
          OpenApi::PrimitiveValidator.validate_min_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_MIN_FOR_PAGE_SIZE)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["Origin"] = origin.to_s if !origin.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.list_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of Add-on installations currently assigned to this Number.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Twilio::ListIncomingPhoneNumberAssignedAddOnResponse]
    def list_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      page_size : Int32? = nil
    ) : Twilio::ListIncomingPhoneNumberAssignedAddOnResponse
      data, _status_code, _headers = list_incoming_phone_number_assigned_add_on_with_http_info(account_sid: account_sid, resource_sid: resource_sid, page_size: page_size)
      data
    end

    # Retrieve a list of Add-on installations currently assigned to this Number.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Tuple(Twilio::ListIncomingPhoneNumberAssignedAddOnResponse, Integer, Hash)] Twilio::ListIncomingPhoneNumberAssignedAddOnResponse, response status code and response headers
    def list_incoming_phone_number_assigned_add_on_with_http_info(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      page_size : Int32? = nil
    ) : Tuple(Twilio::ListIncomingPhoneNumberAssignedAddOnResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_list_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, page_size: page_size)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#list_incoming_phone_number_assigned_add_on\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::ListIncomingPhoneNumberAssignedAddOnResponse.from_json(body), status_code, headers)
    end

    # Retrieve a list of Add-on installations currently assigned to this Number.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return nil
    def list_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      page_size : Int32? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_list_incoming_phone_number_assigned_add_on(account_sid: account_sid, resource_sid: resource_sid, page_size: page_size).execute(&block)
    end

    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_ACCOUNT_SID  = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_ACCOUNT_SID  = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_ACCOUNT_SID     = /^AC[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_RESOURCE_SID = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_RESOURCE_SID = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_RESOURCE_SID    = /^PN[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_FOR_PAGE_SIZE           = Int32.new("1000")
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_FOR_PAGE_SIZE           = Int32.new("1")

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_assigned_add_on(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      page_size : Int32? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.list_incoming_phone_number_assigned_add_on ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"resource_sid\" is required and cannot be null") if resource_sid.nil?
        unless (_resource_sid = resource_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("resource_sid", resource_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("resource_sid", resource_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("resource_sid", _resource_sid, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_PATTERN_FOR_RESOURCE_SID)
        end
        unless (_page_size = page_size).nil?
          OpenApi::PrimitiveValidator.validate_max_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MAX_FOR_PAGE_SIZE)
          OpenApi::PrimitiveValidator.validate_min_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_MIN_FOR_PAGE_SIZE)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.list_incoming_phone_number_assigned_add_on",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Retrieve a list of Extensions for the Assigned Add-on.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param assigned_add_on_sid [String?] The SID that uniquely identifies the assigned Add-on installation.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Twilio::ListIncomingPhoneNumberAssignedAddOnExtensionResponse]
    def list_incoming_phone_number_assigned_add_on_extension(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      assigned_add_on_sid : String? = nil,
      page_size : Int32? = nil
    ) : Twilio::ListIncomingPhoneNumberAssignedAddOnExtensionResponse
      data, _status_code, _headers = list_incoming_phone_number_assigned_add_on_extension_with_http_info(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, page_size: page_size)
      data
    end

    # Retrieve a list of Extensions for the Assigned Add-on.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param assigned_add_on_sid [String?] The SID that uniquely identifies the assigned Add-on installation.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Tuple(Twilio::ListIncomingPhoneNumberAssignedAddOnExtensionResponse, Integer, Hash)] Twilio::ListIncomingPhoneNumberAssignedAddOnExtensionResponse, response status code and response headers
    def list_incoming_phone_number_assigned_add_on_extension_with_http_info(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      assigned_add_on_sid : String? = nil,
      page_size : Int32? = nil
    ) : Tuple(Twilio::ListIncomingPhoneNumberAssignedAddOnExtensionResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_list_incoming_phone_number_assigned_add_on_extension(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, page_size: page_size)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#list_incoming_phone_number_assigned_add_on_extension\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::ListIncomingPhoneNumberAssignedAddOnExtensionResponse.from_json(body), status_code, headers)
    end

    # Retrieve a list of Extensions for the Assigned Add-on.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @required @param resource_sid [String?] The SID of the Phone Number to which the Add-on is assigned.
    # @required @param assigned_add_on_sid [String?] The SID that uniquely identifies the assigned Add-on installation.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return nil
    def list_incoming_phone_number_assigned_add_on_extension(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      assigned_add_on_sid : String? = nil,
      page_size : Int32? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_list_incoming_phone_number_assigned_add_on_extension(account_sid: account_sid, resource_sid: resource_sid, assigned_add_on_sid: assigned_add_on_sid, page_size: page_size).execute(&block)
    end

    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_ACCOUNT_SID         = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_ACCOUNT_SID         = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_ACCOUNT_SID            = /^AC[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_RESOURCE_SID        = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_RESOURCE_SID        = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_RESOURCE_SID           = /^PN[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_ASSIGNED_ADD_ON_SID = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_ASSIGNED_ADD_ON_SID = 34
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_ASSIGNED_ADD_ON_SID    = /^XE[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_FOR_PAGE_SIZE                  = Int32.new("1000")
    LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_FOR_PAGE_SIZE                  = Int32.new("1")

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_assigned_add_on_extension(
      *,
      account_sid : String? = @account_sid,
      resource_sid : String? = nil,
      assigned_add_on_sid : String? = nil,
      page_size : Int32? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.list_incoming_phone_number_assigned_add_on_extension ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"resource_sid\" is required and cannot be null") if resource_sid.nil?
        unless (_resource_sid = resource_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("resource_sid", resource_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("resource_sid", resource_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_RESOURCE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("resource_sid", _resource_sid, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_RESOURCE_SID)
        end
        raise ArgumentError.new("\"assigned_add_on_sid\" is required and cannot be null") if assigned_add_on_sid.nil?
        unless (_assigned_add_on_sid = assigned_add_on_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("assigned_add_on_sid", assigned_add_on_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_LENGTH_FOR_ASSIGNED_ADD_ON_SID)
          OpenApi::PrimitiveValidator.validate_min_length("assigned_add_on_sid", assigned_add_on_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_LENGTH_FOR_ASSIGNED_ADD_ON_SID)
          OpenApi::PrimitiveValidator.validate_pattern("assigned_add_on_sid", _assigned_add_on_sid, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_PATTERN_FOR_ASSIGNED_ADD_ON_SID)
        end
        unless (_page_size = page_size).nil?
          OpenApi::PrimitiveValidator.validate_max_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MAX_FOR_PAGE_SIZE)
          OpenApi::PrimitiveValidator.validate_min_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_ASSIGNED_ADD_ON_EXTENSION_MIN_FOR_PAGE_SIZE)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "ResourceSid" + "}", URI.encode_path(resource_sid.to_s)).sub("{" + "AssignedAddOnSid" + "}", URI.encode_path(assigned_add_on_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.list_incoming_phone_number_assigned_add_on_extension",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Twilio::ListIncomingPhoneNumberLocalResponse]
    def list_incoming_phone_number_local(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Twilio::ListIncomingPhoneNumberLocalResponse
      data, _status_code, _headers = list_incoming_phone_number_local_with_http_info(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)
      data
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Tuple(Twilio::ListIncomingPhoneNumberLocalResponse, Integer, Hash)] Twilio::ListIncomingPhoneNumberLocalResponse, response status code and response headers
    def list_incoming_phone_number_local_with_http_info(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Tuple(Twilio::ListIncomingPhoneNumberLocalResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_list_incoming_phone_number_local(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#list_incoming_phone_number_local\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::ListIncomingPhoneNumberLocalResponse.from_json(body), status_code, headers)
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return nil
    def list_incoming_phone_number_local(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_list_incoming_phone_number_local(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size).execute(&block)
    end

    LIST_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_ACCOUNT_SID = 34
    LIST_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_ACCOUNT_SID = 34
    LIST_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_ACCOUNT_SID    = /^AC[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_LOCAL_MAX_FOR_PAGE_SIZE          = Int32.new("1000")
    LIST_INCOMING_PHONE_NUMBER_LOCAL_MIN_FOR_PAGE_SIZE          = Int32.new("1")

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_local(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.list_incoming_phone_number_local ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_LOCAL_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_LOCAL_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, LIST_INCOMING_PHONE_NUMBER_LOCAL_PATTERN_FOR_ACCOUNT_SID)
        end

        unless (_page_size = page_size).nil?
          OpenApi::PrimitiveValidator.validate_max_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_LOCAL_MAX_FOR_PAGE_SIZE)
          OpenApi::PrimitiveValidator.validate_min_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_LOCAL_MIN_FOR_PAGE_SIZE)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["Origin"] = origin.to_s if !origin.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.list_incoming_phone_number_local",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Twilio::ListIncomingPhoneNumberMobileResponse]
    def list_incoming_phone_number_mobile(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Twilio::ListIncomingPhoneNumberMobileResponse
      data, _status_code, _headers = list_incoming_phone_number_mobile_with_http_info(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)
      data
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Tuple(Twilio::ListIncomingPhoneNumberMobileResponse, Integer, Hash)] Twilio::ListIncomingPhoneNumberMobileResponse, response status code and response headers
    def list_incoming_phone_number_mobile_with_http_info(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Tuple(Twilio::ListIncomingPhoneNumberMobileResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_list_incoming_phone_number_mobile(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#list_incoming_phone_number_mobile\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::ListIncomingPhoneNumberMobileResponse.from_json(body), status_code, headers)
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return nil
    def list_incoming_phone_number_mobile(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_list_incoming_phone_number_mobile(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size).execute(&block)
    end

    LIST_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_ACCOUNT_SID = 34
    LIST_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_ACCOUNT_SID = 34
    LIST_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_ACCOUNT_SID    = /^AC[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_MOBILE_MAX_FOR_PAGE_SIZE          = Int32.new("1000")
    LIST_INCOMING_PHONE_NUMBER_MOBILE_MIN_FOR_PAGE_SIZE          = Int32.new("1")

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_mobile(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.list_incoming_phone_number_mobile ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_MOBILE_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_MOBILE_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, LIST_INCOMING_PHONE_NUMBER_MOBILE_PATTERN_FOR_ACCOUNT_SID)
        end

        unless (_page_size = page_size).nil?
          OpenApi::PrimitiveValidator.validate_max_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_MOBILE_MAX_FOR_PAGE_SIZE)
          OpenApi::PrimitiveValidator.validate_min_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_MOBILE_MIN_FOR_PAGE_SIZE)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["Origin"] = origin.to_s if !origin.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.list_incoming_phone_number_mobile",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Twilio::ListIncomingPhoneNumberTollFreeResponse]
    def list_incoming_phone_number_toll_free(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Twilio::ListIncomingPhoneNumberTollFreeResponse
      data, _status_code, _headers = list_incoming_phone_number_toll_free_with_http_info(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)
      data
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return [Tuple(Twilio::ListIncomingPhoneNumberTollFreeResponse, Integer, Hash)] Twilio::ListIncomingPhoneNumberTollFreeResponse, response status code and response headers
    def list_incoming_phone_number_toll_free_with_http_info(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Tuple(Twilio::ListIncomingPhoneNumberTollFreeResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_list_incoming_phone_number_toll_free(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#list_incoming_phone_number_toll_free\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::ListIncomingPhoneNumberTollFreeResponse.from_json(body), status_code, headers)
    end

    #
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the resources to read.
    # @optional @param beta [Bool?] Whether to include phone numbers new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
    # @optional @param friendly_name [String?] A string that identifies the resources to read.
    # @optional @param phone_number [String?] The phone numbers of the IncomingPhoneNumber resources to read. You can specify partial numbers and use '*' as a wildcard for any digit.
    # @optional @param origin [String?] Whether to include phone numbers based on their origin. Can be: `twilio` or `hosted`. By default, phone numbers of all origin are included.
    # @optional @param page_size [Int32?] How many resources to return in each list page. The default is 50, and the maximum is 1000.
    # @return nil
    def list_incoming_phone_number_toll_free(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_list_incoming_phone_number_toll_free(account_sid: account_sid, beta: beta, friendly_name: friendly_name, phone_number: phone_number, origin: origin, page_size: page_size).execute(&block)
    end

    LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_ACCOUNT_SID = 34
    LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_ACCOUNT_SID = 34
    LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_ACCOUNT_SID    = /^AC[0-9a-fA-F]{32}$/
    LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_FOR_PAGE_SIZE          = Int32.new("1000")
    LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_FOR_PAGE_SIZE          = Int32.new("1")

    # @return Crest::Request
    def build_api_request_for_list_incoming_phone_number_toll_free(
      *,
      account_sid : String? = @account_sid,
      beta : Bool? = nil,
      friendly_name : String? = nil,
      phone_number : String? = nil,
      origin : String? = nil,
      page_size : Int32? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.list_incoming_phone_number_toll_free ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_PATTERN_FOR_ACCOUNT_SID)
        end

        unless (_page_size = page_size).nil?
          OpenApi::PrimitiveValidator.validate_max_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_MAX_FOR_PAGE_SIZE)
          OpenApi::PrimitiveValidator.validate_min_number("page_size", _page_size, LIST_INCOMING_PHONE_NUMBER_TOLL_FREE_MIN_FOR_PAGE_SIZE)
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new
      query_params["Beta"] = beta.to_s if !beta.nil?
      query_params["FriendlyName"] = friendly_name.to_s if !friendly_name.nil?
      query_params["PhoneNumber"] = phone_number.to_s if !phone_number.nil?
      query_params["Origin"] = origin.to_s if !origin.nil?
      query_params["PageSize"] = page_size.to_s if !page_size.nil?

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = nil

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.list_incoming_phone_number_toll_free",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end

    # Update an incoming-phone-number instance.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update.
    # @optional @param account_sid2 [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from this phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe this phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle phone calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle phone calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Twilio::IncomingPhoneNumber]
    def update_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil,
      account_sid2 : String? = @account_sid,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Twilio::IncomingPhoneNumber
      data, _status_code, _headers = update_incoming_phone_number_with_http_info(account_sid: account_sid, sid: sid, account_sid2: account_sid2, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)
      data
    end

    # Update an incoming-phone-number instance.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update.
    # @optional @param account_sid2 [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from this phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe this phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle phone calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle phone calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return [Tuple(Twilio::IncomingPhoneNumber, Integer, Hash)] Twilio::IncomingPhoneNumber, response status code and response headers
    def update_incoming_phone_number_with_http_info(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil,
      account_sid2 : String? = @account_sid,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Tuple(Twilio::IncomingPhoneNumber, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_update_incoming_phone_number(account_sid: account_sid, sid: sid, account_sid2: account_sid2, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url)

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: IncomingPhoneNumbersApi#update_incoming_phone_number\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      Tuple.new(Twilio::IncomingPhoneNumber.from_json(body), status_code, headers)
    end

    # Update an incoming-phone-number instance.
    # @required @param account_sid [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @required @param sid [String?] The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update.
    # @optional @param account_sid2 [String?] The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
    # @optional @param address_sid [String?] The SID of the Address resource we should associate with the phone number. Some regions require addresses to meet local regulations.
    # @optional @param api_version [String?] The API version to use for incoming calls made to the phone number. The default is `2010-04-01`.
    # @optional @param bundle_sid [String?] The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
    # @optional @param emergency_address_sid [String?] The SID of the emergency address configuration to use for emergency calling from this phone number.
    # @optional @param emergency_status [Twilio::IncomingPhoneNumberEnumEmergencyStatus?]
    # @optional @param friendly_name [String?] A descriptive string that you created to describe this phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
    # @optional @param identity_sid [String?] The SID of the Identity resource that we should associate with the phone number. Some regions require an identity to meet local regulations.
    # @optional @param sms_application_sid [String?] The SID of the application that should handle SMS messages sent to the number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
    # @optional @param sms_fallback_method [Twilio::HttpMethod?]
    # @optional @param sms_fallback_url [String?] The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
    # @optional @param sms_method [Twilio::HttpMethod?]
    # @optional @param sms_url [String?] The URL we should call when the phone number receives an incoming SMS message.
    # @optional @param status_callback [String?] The URL we should call using the `status_callback_method` to send status information to your application.
    # @optional @param status_callback_method [Twilio::HttpMethod?]
    # @optional @param trunk_sid [String?] The SID of the Trunk we should use to handle phone calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
    # @optional @param voice_application_sid [String?] The SID of the application we should use to handle phone calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
    # @optional @param voice_caller_id_lookup [Bool?] Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
    # @optional @param voice_fallback_method [Twilio::HttpMethod?]
    # @optional @param voice_fallback_url [String?] The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
    # @optional @param voice_method [Twilio::HttpMethod?]
    # @optional @param voice_receive_mode [Twilio::IncomingPhoneNumberEnumVoiceReceiveMode?]
    # @optional @param voice_url [String?] The URL that we should call to answer a call to the phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
    # @return nil
    def update_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil,
      account_sid2 : String? = @account_sid,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil,
      &block : Crest::Response ->
    ) : Nil
      build_api_request_for_update_incoming_phone_number(account_sid: account_sid, sid: sid, account_sid2: account_sid2, address_sid: address_sid, api_version: api_version, bundle_sid: bundle_sid, emergency_address_sid: emergency_address_sid, emergency_status: emergency_status, friendly_name: friendly_name, identity_sid: identity_sid, sms_application_sid: sms_application_sid, sms_fallback_method: sms_fallback_method, sms_fallback_url: sms_fallback_url, sms_method: sms_method, sms_url: sms_url, status_callback: status_callback, status_callback_method: status_callback_method, trunk_sid: trunk_sid, voice_application_sid: voice_application_sid, voice_caller_id_lookup: voice_caller_id_lookup, voice_fallback_method: voice_fallback_method, voice_fallback_url: voice_fallback_url, voice_method: voice_method, voice_receive_mode: voice_receive_mode, voice_url: voice_url).execute(&block)
    end

    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID           = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID           = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID              = /^AC[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SID                   = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SID                   = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_SID                      = /^PN[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID2          = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID2          = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID2             = /^AC[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ADDRESS_SID           = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ADDRESS_SID           = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ADDRESS_SID              = /^AD[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_BUNDLE_SID            = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_BUNDLE_SID            = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_BUNDLE_SID               = /^BU[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_EMERGENCY_ADDRESS_SID    = /^AD[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_IDENTITY_SID          = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_IDENTITY_SID          = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_IDENTITY_SID             = /^RI[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SMS_APPLICATION_SID   = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_SMS_APPLICATION_SID      = /^AP[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_TRUNK_SID             = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_TRUNK_SID             = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_TRUNK_SID                = /^TK[0-9a-fA-F]{32}$/
    UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_VOICE_APPLICATION_SID = 34
    UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_VOICE_APPLICATION_SID    = /^AP[0-9a-fA-F]{32}$/

    # @return Crest::Request
    def build_api_request_for_update_incoming_phone_number(
      *,
      account_sid : String? = @account_sid,
      sid : String? = nil,
      account_sid2 : String? = @account_sid,
      address_sid : String? = nil,
      api_version : String? = nil,
      bundle_sid : String? = nil,
      emergency_address_sid : String? = nil,
      emergency_status : Twilio::IncomingPhoneNumberEnumEmergencyStatus? = nil,
      friendly_name : String? = nil,
      identity_sid : String? = nil,
      sms_application_sid : String? = nil,
      sms_fallback_method : Twilio::HttpMethod? = nil,
      sms_fallback_url : String? = nil,
      sms_method : Twilio::HttpMethod? = nil,
      sms_url : String? = nil,
      status_callback : String? = nil,
      status_callback_method : Twilio::HttpMethod? = nil,
      trunk_sid : String? = nil,
      voice_application_sid : String? = nil,
      voice_caller_id_lookup : Bool? = nil,
      voice_fallback_method : Twilio::HttpMethod? = nil,
      voice_fallback_url : String? = nil,
      voice_method : Twilio::HttpMethod? = nil,
      voice_receive_mode : Twilio::IncomingPhoneNumberEnumVoiceReceiveMode? = nil,
      voice_url : String? = nil
    ) : Crest::Request
      if debugging
        Log.debug { "Calling API: IncomingPhoneNumbersApi.update_incoming_phone_number ..." }
      end

      if client_side_validation
        raise ArgumentError.new("\"account_sid\" is required and cannot be null") if account_sid.nil?
        unless (_account_sid = account_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid", account_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid", account_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid", _account_sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID)
        end
        raise ArgumentError.new("\"sid\" is required and cannot be null") if sid.nil?
        unless (_sid = sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sid", sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sid", sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sid", _sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_SID)
        end
        unless (_account_sid2 = account_sid2).nil?
          OpenApi::PrimitiveValidator.validate_max_length("account_sid2", account_sid2.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ACCOUNT_SID2)
          OpenApi::PrimitiveValidator.validate_min_length("account_sid2", account_sid2.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ACCOUNT_SID2)
          OpenApi::PrimitiveValidator.validate_pattern("account_sid2", _account_sid2, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ACCOUNT_SID2)
        end
        unless (_address_sid = address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("address_sid", address_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("address_sid", address_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("address_sid", _address_sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_ADDRESS_SID)
        end

        unless (_bundle_sid = bundle_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("bundle_sid", bundle_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_min_length("bundle_sid", bundle_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_BUNDLE_SID)
          OpenApi::PrimitiveValidator.validate_pattern("bundle_sid", _bundle_sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_BUNDLE_SID)
        end
        unless (_emergency_address_sid = emergency_address_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("emergency_address_sid", emergency_address_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_min_length("emergency_address_sid", emergency_address_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_EMERGENCY_ADDRESS_SID)
          OpenApi::PrimitiveValidator.validate_pattern("emergency_address_sid", _emergency_address_sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_EMERGENCY_ADDRESS_SID)
        end
        unless (_emergency_status = emergency_status).nil?
          _emergency_status.validate
        end

        unless (_identity_sid = identity_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("identity_sid", identity_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_min_length("identity_sid", identity_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_IDENTITY_SID)
          OpenApi::PrimitiveValidator.validate_pattern("identity_sid", _identity_sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_IDENTITY_SID)
        end
        unless (_sms_application_sid = sms_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("sms_application_sid", sms_application_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("sms_application_sid", sms_application_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_SMS_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("sms_application_sid", _sms_application_sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_SMS_APPLICATION_SID)
        end
        unless (_sms_fallback_method = sms_fallback_method).nil?
          _sms_fallback_method.validate
        end

        unless (_sms_method = sms_method).nil?
          _sms_method.validate
        end

        unless (_status_callback_method = status_callback_method).nil?
          _status_callback_method.validate
        end
        unless (_trunk_sid = trunk_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("trunk_sid", trunk_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_min_length("trunk_sid", trunk_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_TRUNK_SID)
          OpenApi::PrimitiveValidator.validate_pattern("trunk_sid", _trunk_sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_TRUNK_SID)
        end
        unless (_voice_application_sid = voice_application_sid).nil?
          OpenApi::PrimitiveValidator.validate_max_length("voice_application_sid", voice_application_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MAX_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_min_length("voice_application_sid", voice_application_sid.to_s.size, UPDATE_INCOMING_PHONE_NUMBER_MIN_LENGTH_FOR_VOICE_APPLICATION_SID)
          OpenApi::PrimitiveValidator.validate_pattern("voice_application_sid", _voice_application_sid, UPDATE_INCOMING_PHONE_NUMBER_PATTERN_FOR_VOICE_APPLICATION_SID)
        end

        unless (_voice_fallback_method = voice_fallback_method).nil?
          _voice_fallback_method.validate
        end

        unless (_voice_method = voice_method).nil?
          _voice_method.validate
        end
        unless (_voice_receive_mode = voice_receive_mode).nil?
          _voice_receive_mode.validate
        end
      end

      # resource path
      local_var_path = "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json".sub("{" + "AccountSid" + "}", URI.encode_path(account_sid.to_s)).sub("{" + "Sid" + "}", URI.encode_path(sid.to_s))

      # header parameters
      header_params : Hash(String, String) = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/x-www-form-urlencoded"])

      # cookie parameters
      cookie_params : Hash(String, String) = Hash(String, String).new

      # query parameters
      query_params : Hash(String, (String | Array(String) | JSON::Any)) = Hash(String, (String | Array(String) | JSON::Any)).new

      # form parameters
      form_params : Array(Tuple(String, Crest::ParamsValue)) | Nil = Array(Tuple(String, Crest::ParamsValue)).new
      form_params << Tuple(String, Crest::ParamsValue).new("AccountSid", account_sid2.to_s) if !account_sid2.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("AddressSid", address_sid.to_s) if !address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("ApiVersion", api_version.to_s) if !api_version.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("BundleSid", bundle_sid.to_s) if !bundle_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyAddressSid", emergency_address_sid.to_s) if !emergency_address_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("EmergencyStatus", emergency_status.to_s) if !emergency_status.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("FriendlyName", friendly_name.to_s) if !friendly_name.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("IdentitySid", identity_sid.to_s) if !identity_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsApplicationSid", sms_application_sid.to_s) if !sms_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackMethod", sms_fallback_method.to_s) if !sms_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsFallbackUrl", sms_fallback_url.to_s) if !sms_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsMethod", sms_method.to_s) if !sms_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("SmsUrl", sms_url.to_s) if !sms_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallback", status_callback.to_s) if !status_callback.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("StatusCallbackMethod", status_callback_method.to_s) if !status_callback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("TrunkSid", trunk_sid.to_s) if !trunk_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceApplicationSid", voice_application_sid.to_s) if !voice_application_sid.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceCallerIdLookup", voice_caller_id_lookup.to_s) if !voice_caller_id_lookup.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackMethod", voice_fallback_method.to_s) if !voice_fallback_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceFallbackUrl", voice_fallback_url.to_s) if !voice_fallback_url.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceMethod", voice_method.to_s) if !voice_method.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceReceiveMode", voice_receive_mode.to_s) if !voice_receive_mode.nil?
      form_params << Tuple(String, Crest::ParamsValue).new("VoiceUrl", voice_url.to_s) if !voice_url.nil?

      # http body (model)
      post_body : IO | String | Nil = nil

      # auth_names
      auth_names = ["accountSid_authToken"]

      @api_client.build_api_request(
        http_method: :"POST",
        path: local_var_path,
        operation: "IncomingPhoneNumbersApi.update_incoming_phone_number",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        cookie_params: cookie_params,
        query_params: query_params,
        form_params: form_params
      )
    end
  end
end
